{
  "project_name": "source",
  "project_root": "/workspace/example/source",
  "files": {
    "complex_example.h": {
      "file_path": "/workspace/example/source/complex_example.h",
      "relative_path": "complex_example.h",
      "project_root": "/workspace/example/source",
      "encoding_used": "utf-8",
      "structs": {},
      "enums": {
        "CE_Status_t": {
          "name": "CE_Status_t",
          "values": [
            "CE_STATUS_OK = 0",
            "CE_STATUS_WARN",
            "CE_STATUS_FAIL"
          ]
        }
      },
      "functions": [],
      "globals": [],
      "includes": [
        "config.h",
        "logger.h"
      ],
      "macros": [
        "COMPLEX_EXAMPLE_H"
      ],
      "typedefs": {
        "NestedInfo_t": "struct",
        "CE_Status_t": "enum",
        "ComplexExample_t": "struct"
      },
      "typedef_relations": [],
      "include_relations": [
        {
          "source_file": "/workspace/example/source/complex_example.h",
          "included_file": "/workspace/example/source/config.h",
          "depth": 1
        },
        {
          "source_file": "/workspace/example/source/complex_example.h",
          "included_file": "/workspace/example/source/logger.h",
          "depth": 1
        },
        {
          "source_file": "/workspace/example/source/complex_example.h",
          "included_file": "/workspace/example/source/config.h",
          "depth": 2
        },
        {
          "source_file": "/workspace/example/source/complex_example.h",
          "included_file": "/workspace/example/source/logger.h",
          "depth": 2
        }
      ],
      "unions": {}
    },
    "config.h": {
      "file_path": "/workspace/example/source/config.h",
      "relative_path": "config.h",
      "project_root": "/workspace/example/source",
      "encoding_used": "utf-8",
      "structs": {},
      "enums": {
        "GlobalStatus": {
          "name": "GlobalStatus",
          "values": [
            "GS_OK",
            "GS_ERROR",
            "GS_UNKNOWN"
          ]
        }
      },
      "functions": [],
      "globals": [],
      "includes": [
        "stddef.h",
        "stdint.h"
      ],
      "macros": [
        "CONFIG_H",
        "PROJECT_NAME",
        "MAX_LABEL_LEN",
        "DEFAULT_BUFFER_SIZE"
      ],
      "typedefs": {
        "id_t": "uint32_t",
        "status_t": "int32_t"
      },
      "typedef_relations": [],
      "include_relations": [],
      "unions": {}
    },
    "geometry.c": {
      "file_path": "/workspace/example/source/geometry.c",
      "relative_path": "geometry.c",
      "project_root": "/workspace/example/source",
      "encoding_used": "utf-8",
      "structs": {},
      "enums": {},
      "functions": [
        {
          "name": "create_triangle",
          "return_type": "#include \"geometry.h\" #include <string.h> #include <stdlib.h> triangle_t",
          "parameters": [
            {
              "name": "a",
              "type": "const point_t *",
              "value": null
            },
            {
              "name": "b",
              "type": "const point_t *",
              "value": null
            },
            {
              "name": "c",
              "type": "const point_t *",
              "value": null
            },
            {
              "name": "label",
              "type": "const char *",
              "value": null
            }
          ],
          "is_static": false
        },
        {
          "name": "triangle_area",
          "return_type": "int",
          "parameters": [
            {
              "name": "tri",
              "type": "const triangle_t *",
              "value": null
            }
          ],
          "is_static": false
        }
      ],
      "globals": [],
      "includes": [
        "geometry.h",
        "string.h",
        "stdlib.h"
      ],
      "macros": [],
      "typedefs": {},
      "typedef_relations": [],
      "include_relations": [
        {
          "source_file": "/workspace/example/source/geometry.c",
          "included_file": "/workspace/example/source/geometry.h",
          "depth": 1
        }
      ],
      "unions": {}
    },
    "geometry.h": {
      "file_path": "/workspace/example/source/geometry.h",
      "relative_path": "geometry.h",
      "project_root": "/workspace/example/source",
      "encoding_used": "utf-8",
      "structs": {},
      "enums": {},
      "functions": [
        {
          "name": "create_triangle",
          "return_type": "#ifndef GEOMETRY_H #define GEOMETRY_H #include \"sample.h\" #include \"math_utils.h\" typedef struct triangle_tag { point_t vertices [ 3 ] ; char label [ MAX_LABEL_LEN ] ; } triangle_t ; triangle_t",
          "parameters": [
            {
              "name": "a",
              "type": "const point_t *",
              "value": null
            },
            {
              "name": "b",
              "type": "const point_t *",
              "value": null
            },
            {
              "name": "c",
              "type": "const point_t *",
              "value": null
            },
            {
              "name": "label",
              "type": "const char *",
              "value": null
            }
          ],
          "is_static": false
        },
        {
          "name": "triangle_area",
          "return_type": "int",
          "parameters": [
            {
              "name": "tri",
              "type": "const triangle_t *",
              "value": null
            }
          ],
          "is_static": false
        }
      ],
      "globals": [],
      "includes": [
        "sample.h",
        "math_utils.h"
      ],
      "macros": [
        "GEOMETRY_H"
      ],
      "typedefs": {
        "triangle_t": "struct"
      },
      "typedef_relations": [],
      "include_relations": [
        {
          "source_file": "/workspace/example/source/geometry.h",
          "included_file": "/workspace/example/source/sample.h",
          "depth": 2
        },
        {
          "source_file": "/workspace/example/source/geometry.h",
          "included_file": "/workspace/example/source/math_utils.h",
          "depth": 2
        },
        {
          "source_file": "/workspace/example/source/geometry.h",
          "included_file": "/workspace/example/source/sample.h",
          "depth": 1
        },
        {
          "source_file": "/workspace/example/source/geometry.h",
          "included_file": "/workspace/example/source/math_utils.h",
          "depth": 1
        },
        {
          "source_file": "/workspace/example/source/geometry.h",
          "included_file": "/workspace/example/source/sample.h",
          "depth": 2
        },
        {
          "source_file": "/workspace/example/source/geometry.h",
          "included_file": "/workspace/example/source/math_utils.h",
          "depth": 2
        },
        {
          "source_file": "/workspace/example/source/geometry.h",
          "included_file": "/workspace/example/source/sample.h",
          "depth": 2
        },
        {
          "source_file": "/workspace/example/source/geometry.h",
          "included_file": "/workspace/example/source/math_utils.h",
          "depth": 2
        },
        {
          "source_file": "/workspace/example/source/geometry.h",
          "included_file": "/workspace/example/source/sample.h",
          "depth": 2
        },
        {
          "source_file": "/workspace/example/source/geometry.h",
          "included_file": "/workspace/example/source/math_utils.h",
          "depth": 2
        }
      ],
      "unions": {}
    },
    "logger.c": {
      "file_path": "/workspace/example/source/logger.c",
      "relative_path": "logger.c",
      "project_root": "/workspace/example/source",
      "encoding_used": "utf-8",
      "structs": {},
      "enums": {},
      "functions": [
        {
          "name": "set_log_callback",
          "return_type": "#include \"logger.h\" #include <stdarg.h> #include <string.h> static log_callback_t current_cb = NULL ; void",
          "parameters": [
            {
              "name": "cb",
              "type": "log_callback_t",
              "value": null
            }
          ],
          "is_static": false
        },
        {
          "name": "log_message",
          "return_type": "void",
          "parameters": [
            {
              "name": "level",
              "type": "log_level_t",
              "value": null
            },
            {
              "name": "fmt",
              "type": "const char *",
              "value": null
            },
            {
              "name": ".",
              "type": ". .",
              "value": null
            }
          ],
          "is_static": false
        }
      ],
      "globals": [
        {
          "name": "current_cb",
          "type": "log_callback_t",
          "value": null
        }
      ],
      "includes": [
        "logger.h",
        "stdarg.h",
        "string.h"
      ],
      "macros": [],
      "typedefs": {},
      "typedef_relations": [],
      "include_relations": [
        {
          "source_file": "/workspace/example/source/logger.c",
          "included_file": "/workspace/example/source/logger.h",
          "depth": 1
        }
      ],
      "unions": {}
    },
    "logger.h": {
      "file_path": "/workspace/example/source/logger.h",
      "relative_path": "logger.h",
      "project_root": "/workspace/example/source",
      "encoding_used": "utf-8",
      "structs": {},
      "enums": {
        "log_level_t": {
          "name": "log_level_t",
          "values": [
            "LOG_DEBUG = 0",
            "LOG_INFO",
            "LOG_WARN",
            "LOG_ERROR"
          ]
        }
      },
      "functions": [
        {
          "name": "set_log_callback",
          "return_type": "#ifndef LOGGER_H #define LOGGER_H #include <stdio.h> #include \"config.h\" typedef enum log_level_tag { LOG_DEBUG = 0 , LOG_INFO , LOG_WARN , LOG_ERROR } log_level_t ; typedef void ( * log_callback_t ) ( log_level_t level , const char * message ) ; void",
          "parameters": [
            {
              "name": "cb",
              "type": "log_callback_t",
              "value": null
            }
          ],
          "is_static": false
        },
        {
          "name": "log_message",
          "return_type": "void",
          "parameters": [
            {
              "name": "level",
              "type": "log_level_t",
              "value": null
            },
            {
              "name": "fmt",
              "type": "const char *",
              "value": null
            },
            {
              "name": ".",
              "type": ". .",
              "value": null
            }
          ],
          "is_static": false
        }
      ],
      "globals": [],
      "includes": [
        "stdio.h",
        "config.h"
      ],
      "macros": [
        "LOGGER_H"
      ],
      "typedefs": {
        "log_level_t": "enum",
        "log_callback_t": "void ( * log_callback_t ) ( log_level_t level , const char * message )"
      },
      "typedef_relations": [],
      "include_relations": [
        {
          "source_file": "/workspace/example/source/logger.h",
          "included_file": "/workspace/example/source/config.h",
          "depth": 2
        },
        {
          "source_file": "/workspace/example/source/logger.h",
          "included_file": "/workspace/example/source/config.h",
          "depth": 2
        },
        {
          "source_file": "/workspace/example/source/logger.h",
          "included_file": "/workspace/example/source/config.h",
          "depth": 1
        },
        {
          "source_file": "/workspace/example/source/logger.h",
          "included_file": "/workspace/example/source/config.h",
          "depth": 2
        },
        {
          "source_file": "/workspace/example/source/logger.h",
          "included_file": "/workspace/example/source/config.h",
          "depth": 2
        },
        {
          "source_file": "/workspace/example/source/logger.h",
          "included_file": "/workspace/example/source/config.h",
          "depth": 2
        },
        {
          "source_file": "/workspace/example/source/logger.h",
          "included_file": "/workspace/example/source/config.h",
          "depth": 2
        }
      ],
      "unions": {}
    },
    "math_utils.c": {
      "file_path": "/workspace/example/source/math_utils.c",
      "relative_path": "math_utils.c",
      "project_root": "/workspace/example/source",
      "encoding_used": "utf-8",
      "structs": {},
      "enums": {},
      "functions": [
        {
          "name": "add",
          "return_type": "#include \"math_utils.h\" int",
          "parameters": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "is_static": false
        },
        {
          "name": "subtract",
          "return_type": "int",
          "parameters": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "is_static": false
        },
        {
          "name": "average",
          "return_type": "real_t",
          "parameters": [
            {
              "name": "arr",
              "type": "const int *",
              "value": null
            },
            {
              "name": "len",
              "type": "size_t",
              "value": null
            }
          ],
          "is_static": false
        }
      ],
      "globals": [],
      "includes": [
        "math_utils.h"
      ],
      "macros": [],
      "typedefs": {},
      "typedef_relations": [],
      "include_relations": [
        {
          "source_file": "/workspace/example/source/math_utils.c",
          "included_file": "/workspace/example/source/math_utils.h",
          "depth": 1
        }
      ],
      "unions": {}
    },
    "math_utils.h": {
      "file_path": "/workspace/example/source/math_utils.h",
      "relative_path": "math_utils.h",
      "project_root": "/workspace/example/source",
      "encoding_used": "utf-8",
      "structs": {},
      "enums": {},
      "functions": [
        {
          "name": "add",
          "return_type": "#ifndef MATH_UTILS_H #define MATH_UTILS_H #include \"config.h\" typedef double real_t ; typedef int ( * math_op_t ) ( int , int ) ; int",
          "parameters": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "is_static": false
        },
        {
          "name": "subtract",
          "return_type": "int",
          "parameters": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "is_static": false
        },
        {
          "name": "average",
          "return_type": "real_t",
          "parameters": [
            {
              "name": "arr",
              "type": "const int *",
              "value": null
            },
            {
              "name": "len",
              "type": "size_t",
              "value": null
            }
          ],
          "is_static": false
        }
      ],
      "globals": [],
      "includes": [
        "config.h"
      ],
      "macros": [
        "MATH_UTILS_H"
      ],
      "typedefs": {
        "real_t": "double",
        "math_op_t": "int ( * math_op_t ) ( int , int )"
      },
      "typedef_relations": [],
      "include_relations": [
        {
          "source_file": "/workspace/example/source/math_utils.h",
          "included_file": "/workspace/example/source/config.h",
          "depth": 2
        },
        {
          "source_file": "/workspace/example/source/math_utils.h",
          "included_file": "/workspace/example/source/config.h",
          "depth": 2
        },
        {
          "source_file": "/workspace/example/source/math_utils.h",
          "included_file": "/workspace/example/source/config.h",
          "depth": 1
        },
        {
          "source_file": "/workspace/example/source/math_utils.h",
          "included_file": "/workspace/example/source/config.h",
          "depth": 2
        }
      ],
      "unions": {}
    },
    "sample.c": {
      "file_path": "/workspace/example/source/sample.c",
      "relative_path": "sample.c",
      "project_root": "/workspace/example/source",
      "encoding_used": "utf-8",
      "structs": {},
      "enums": {},
      "functions": [
        {
          "name": "calculate_sum",
          "return_type": "int",
          "parameters": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "is_static": false
        },
        {
          "name": "create_point",
          "return_type": "point_t *",
          "parameters": [
            {
              "name": "x",
              "type": "int",
              "value": null
            },
            {
              "name": "y",
              "type": "int",
              "value": null
            },
            {
              "name": "label",
              "type": "const char *",
              "value": null
            }
          ],
          "is_static": false
        },
        {
          "name": "calculate_sum",
          "return_type": "int",
          "parameters": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "is_static": false
        },
        {
          "name": "create_point",
          "return_type": "point_t *",
          "parameters": [
            {
              "name": "x",
              "type": "int",
              "value": null
            },
            {
              "name": "y",
              "type": "int",
              "value": null
            },
            {
              "name": "label",
              "type": "const char *",
              "value": null
            }
          ],
          "is_static": false
        },
        {
          "name": "process_point",
          "return_type": "void",
          "parameters": [
            {
              "name": "p",
              "type": "point_t *",
              "value": null
            }
          ],
          "is_static": false
        },
        {
          "name": "demo_triangle_usage",
          "return_type": "void",
          "parameters": [],
          "is_static": false
        },
        {
          "name": "main",
          "return_type": "int",
          "parameters": [],
          "is_static": false
        }
      ],
      "globals": [
        {
          "name": "global_counter",
          "type": "int",
          "value": null
        },
        {
          "name": "]",
          "type": "char buffer [ MAX_SIZE",
          "value": null
        },
        {
          "name": "global_ptr",
          "type": "double *",
          "value": null
        }
      ],
      "includes": [
        "stdio.h",
        "stdlib.h",
        "string.h",
        "sample.h",
        "math_utils.h",
        "logger.h",
        "geometry.h"
      ],
      "macros": [
        "MAX_SIZE",
        "DEBUG_MODE",
        "CALC"
      ],
      "typedefs": {},
      "typedef_relations": [],
      "include_relations": [
        {
          "source_file": "/workspace/example/source/sample.c",
          "included_file": "/workspace/example/source/sample.h",
          "depth": 1
        },
        {
          "source_file": "/workspace/example/source/sample.c",
          "included_file": "/workspace/example/source/math_utils.h",
          "depth": 1
        },
        {
          "source_file": "/workspace/example/source/sample.c",
          "included_file": "/workspace/example/source/logger.h",
          "depth": 1
        },
        {
          "source_file": "/workspace/example/source/sample.c",
          "included_file": "/workspace/example/source/geometry.h",
          "depth": 1
        }
      ],
      "unions": {}
    },
    "sample.h": {
      "file_path": "/workspace/example/source/sample.h",
      "relative_path": "sample.h",
      "project_root": "/workspace/example/source",
      "encoding_used": "utf-8",
      "structs": {
        "point_t": {
          "name": "point_t",
          "fields": [
            {
              "name": "x",
              "type": "int",
              "value": null
            },
            {
              "name": "y",
              "type": "int",
              "value": null
            },
            {
              "name": "]",
              "type": "char label [ 32",
              "value": null
            }
          ],
          "methods": []
        }
      },
      "enums": {
        "system_state_t": {
          "name": "system_state_t",
          "values": [
            "STATE_IDLE = 0",
            "STATE_RUNNING",
            "STATE_ERROR"
          ]
        }
      },
      "functions": [
        {
          "name": "calculate_sum",
          "return_type": "#ifndef SAMPLE_H #define SAMPLE_H #include <stddef.h> #include \"config.h\" #define PI 3.14159 #define VERSION \"1.0.0\" typedef struct point_tag { int x ; int y ; char label [ 32 ] ; } point_t ; typedef enum system_state_tag { STATE_IDLE = 0 , STATE_RUNNING , STATE_ERROR } system_state_t ; extern int",
          "parameters": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "is_static": false
        },
        {
          "name": "create_point",
          "return_type": "point_t *",
          "parameters": [
            {
              "name": "x",
              "type": "int",
              "value": null
            },
            {
              "name": "y",
              "type": "int",
              "value": null
            },
            {
              "name": "label",
              "type": "const char *",
              "value": null
            }
          ],
          "is_static": false
        },
        {
          "name": "process_point",
          "return_type": "void",
          "parameters": [
            {
              "name": "p",
              "type": "point_t *",
              "value": null
            }
          ],
          "is_static": false
        }
      ],
      "globals": [
        {
          "name": "MAX_POINTS",
          "type": "int",
          "value": null
        },
        {
          "name": "DEFAULT_LABEL",
          "type": "char *",
          "value": null
        }
      ],
      "includes": [
        "stddef.h",
        "config.h",
        "geometry.h",
        "logger.h"
      ],
      "macros": [
        "SAMPLE_H",
        "PI",
        "VERSION",
        "MIN",
        "MAX"
      ],
      "typedefs": {
        "point_t": "struct",
        "system_state_t": "enum"
      },
      "typedef_relations": [],
      "include_relations": [
        {
          "source_file": "/workspace/example/source/sample.h",
          "included_file": "/workspace/example/source/config.h",
          "depth": 2
        },
        {
          "source_file": "/workspace/example/source/sample.h",
          "included_file": "/workspace/example/source/geometry.h",
          "depth": 2
        },
        {
          "source_file": "/workspace/example/source/sample.h",
          "included_file": "/workspace/example/source/logger.h",
          "depth": 2
        },
        {
          "source_file": "/workspace/example/source/sample.h",
          "included_file": "/workspace/example/source/config.h",
          "depth": 2
        },
        {
          "source_file": "/workspace/example/source/sample.h",
          "included_file": "/workspace/example/source/geometry.h",
          "depth": 2
        },
        {
          "source_file": "/workspace/example/source/sample.h",
          "included_file": "/workspace/example/source/logger.h",
          "depth": 2
        },
        {
          "source_file": "/workspace/example/source/sample.h",
          "included_file": "/workspace/example/source/config.h",
          "depth": 1
        },
        {
          "source_file": "/workspace/example/source/sample.h",
          "included_file": "/workspace/example/source/geometry.h",
          "depth": 1
        },
        {
          "source_file": "/workspace/example/source/sample.h",
          "included_file": "/workspace/example/source/logger.h",
          "depth": 1
        },
        {
          "source_file": "/workspace/example/source/sample.h",
          "included_file": "/workspace/example/source/config.h",
          "depth": 2
        },
        {
          "source_file": "/workspace/example/source/sample.h",
          "included_file": "/workspace/example/source/geometry.h",
          "depth": 2
        },
        {
          "source_file": "/workspace/example/source/sample.h",
          "included_file": "/workspace/example/source/logger.h",
          "depth": 2
        }
      ],
      "unions": {}
    },
    "typedef_test.c": {
      "file_path": "/workspace/example/source/typedef_test.c",
      "relative_path": "typedef_test.c",
      "project_root": "/workspace/example/source",
      "encoding_used": "utf-8",
      "structs": {},
      "enums": {},
      "functions": [
        {
          "name": "log_buffer",
          "return_type": "#include \"typedef_test.h\" #include \"complex_example.h\" #include \"geometry.h\" #include \"logger.h\" #include <stdlib.h> MyLen global_length = 0U ; MyBuffer global_buffer = { 0U , NULL } ; MyComplexPtr global_complex = NULL ; void",
          "parameters": [
            {
              "name": "buffer",
              "type": "const MyBuffer *",
              "value": null
            }
          ],
          "is_static": false
        },
        {
          "name": "process_buffer",
          "return_type": "MyInt",
          "parameters": [
            {
              "name": "buffer",
              "type": "MyBuffer *",
              "value": null
            }
          ],
          "is_static": false
        },
        {
          "name": "my_callback",
          "return_type": "int",
          "parameters": [
            {
              "name": "buffer",
              "type": "MyBuffer *",
              "value": null
            }
          ],
          "is_static": false
        },
        {
          "name": "create_complex",
          "return_type": "MyComplex *",
          "parameters": [
            {
              "name": "id",
              "type": "MyLen",
              "value": null
            },
            {
              "name": "name",
              "type": "MyString",
              "value": null
            }
          ],
          "is_static": false
        },
        {
          "name": "main",
          "return_type": "int",
          "parameters": [],
          "is_static": false
        }
      ],
      "globals": [
        {
          "name": "global_length",
          "type": "MyLen",
          "value": null
        },
        {
          "name": "global_buffer",
          "type": "MyBuffer",
          "value": null
        },
        {
          "name": "global_complex",
          "type": "MyComplexPtr",
          "value": null
        }
      ],
      "includes": [
        "typedef_test.h",
        "complex_example.h",
        "geometry.h",
        "logger.h",
        "stdlib.h"
      ],
      "macros": [],
      "typedefs": {},
      "typedef_relations": [],
      "include_relations": [
        {
          "source_file": "/workspace/example/source/typedef_test.c",
          "included_file": "/workspace/example/source/typedef_test.h",
          "depth": 1
        },
        {
          "source_file": "/workspace/example/source/typedef_test.c",
          "included_file": "/workspace/example/source/complex_example.h",
          "depth": 1
        },
        {
          "source_file": "/workspace/example/source/typedef_test.c",
          "included_file": "/workspace/example/source/geometry.h",
          "depth": 1
        },
        {
          "source_file": "/workspace/example/source/typedef_test.c",
          "included_file": "/workspace/example/source/logger.h",
          "depth": 1
        }
      ],
      "unions": {}
    },
    "typedef_test.h": {
      "file_path": "/workspace/example/source/typedef_test.h",
      "relative_path": "typedef_test.h",
      "project_root": "/workspace/example/source",
      "encoding_used": "utf-8",
      "structs": {
        "NamedStruct_t": {
          "name": "NamedStruct_t",
          "fields": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "methods": []
        }
      },
      "enums": {
        "Color_t": {
          "name": "Color_t",
          "values": [
            "COLOR_RED = 0",
            "COLOR_GREEN",
            "COLOR_BLUE"
          ]
        },
        "Status_t": {
          "name": "Status_t",
          "values": [
            "STATUS_OK = 0",
            "STATUS_FAIL"
          ]
        }
      },
      "functions": [],
      "globals": [],
      "includes": [
        "stdint.h",
        "sample.h",
        "config.h",
        "logger.h"
      ],
      "macros": [
        "TYPEDEF_TEST_H"
      ],
      "typedefs": {
        "MyLen": "uint32_t",
        "MyInt": "int32_t",
        "MyString": "char *",
        "MyBuffer": "struct",
        "MyCallback": "int ( * MyCallback ) ( MyBuffer * buffer )",
        "MyComplex": "struct",
        "MyComplexPtr": "MyComplex *",
        "Color_t": "enum",
        "Status_t": "enum",
        "Point_t": "struct",
        "NamedStruct_t": "struct",
        "Number_t": "union",
        "NamedUnion_t": "union",
        "MyComplexArray": "MyComplexPtr MyComplexArray [ 10 ]"
      },
      "typedef_relations": [],
      "include_relations": [
        {
          "source_file": "/workspace/example/source/typedef_test.h",
          "included_file": "/workspace/example/source/sample.h",
          "depth": 2
        },
        {
          "source_file": "/workspace/example/source/typedef_test.h",
          "included_file": "/workspace/example/source/config.h",
          "depth": 2
        },
        {
          "source_file": "/workspace/example/source/typedef_test.h",
          "included_file": "/workspace/example/source/logger.h",
          "depth": 2
        },
        {
          "source_file": "/workspace/example/source/typedef_test.h",
          "included_file": "/workspace/example/source/sample.h",
          "depth": 1
        },
        {
          "source_file": "/workspace/example/source/typedef_test.h",
          "included_file": "/workspace/example/source/config.h",
          "depth": 1
        },
        {
          "source_file": "/workspace/example/source/typedef_test.h",
          "included_file": "/workspace/example/source/logger.h",
          "depth": 1
        }
      ],
      "unions": {}
    }
  },
  "created_at": "2025-07-22T11:10:42.152231"
}