{
  "files": {
    "complex_example.h": {
      "aliases": {},
      "encoding_used": "utf-8",
      "enums": {
        "CE_Status_t": {
          "name": "CE_Status_t",
          "tag_name": "",
          "values": [
            {
              "name": "CE_STATUS_OK",
              "value": "0"
            },
            {
              "name": "CE_STATUS_WARN",
              "value": null
            },
            {
              "name": "CE_STATUS_FAIL",
              "value": null
            }
          ]
        }
      },
      "file_path": "/workspace/example/source/complex_example.h",
      "functions": [],
      "globals": [],
      "include_relations": [
        {
          "depth": 1,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/complex_example.h"
        },
        {
          "depth": 2,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/complex_example.h"
        },
        {
          "depth": 1,
          "included_file": "/workspace/example/source/logger.h",
          "source_file": "/workspace/example/source/complex_example.h"
        },
        {
          "depth": 2,
          "included_file": "/workspace/example/source/logger.h",
          "source_file": "/workspace/example/source/complex_example.h"
        }
      ],
      "includes": [
        "config.h",
        "logger.h"
      ],
      "macros": [
        "COMPLEX_EXAMPLE_H"
      ],
      "project_root": "/workspace/example/source",
      "relative_path": "complex_example.h",
      "structs": {
        "ComplexExample_t": {
          "fields": [
            {
              "name": "info",
              "type": "NestedInfo_t",
              "value": null
            },
            {
              "name": "status",
              "type": "CE_Status_t",
              "value": null
            },
            {
              "name": "values",
              "type": "int[5]",
              "value": null
            }
          ],
          "methods": [],
          "name": "ComplexExample_t",
          "tag_name": "ComplexExample_tag",
          "uses": [
            "CE_Status_t",
            "NestedInfo_t"
          ]
        },
        "NestedInfo_t": {
          "fields": [
            {
              "name": "id",
              "type": "id_t",
              "value": null
            },
            {
              "name": "description",
              "type": "char[MAX_LABEL_LEN]",
              "value": null
            },
            {
              "name": "log_level",
              "type": "log_level_t",
              "value": null
            }
          ],
          "methods": [],
          "name": "NestedInfo_t",
          "tag_name": "NestedInfo_tag",
          "uses": [
            "id_t",
            "log_level_t"
          ]
        }
      },
      "unions": {}
    },
    "config.h": {
      "aliases": {
        "id_t": {
          "name": "id_t",
          "original_type": "uint32_t",
          "uses": []
        },
        "status_t": {
          "name": "status_t",
          "original_type": "int32_t",
          "uses": []
        }
      },
      "encoding_used": "utf-8",
      "enums": {
        "GlobalStatus": {
          "name": "GlobalStatus",
          "tag_name": "",
          "values": [
            {
              "name": "GS_OK",
              "value": null
            },
            {
              "name": "GS_ERROR",
              "value": null
            },
            {
              "name": "GS_UNKNOWN",
              "value": null
            }
          ]
        }
      },
      "file_path": "/workspace/example/source/config.h",
      "functions": [],
      "globals": [],
      "include_relations": [],
      "includes": [
        "stddef.h",
        "stdint.h"
      ],
      "macros": [
        "CONFIG_H",
        "DEFAULT_BUFFER_SIZE",
        "MAX_LABEL_LEN",
        "PROJECT_NAME"
      ],
      "project_root": "/workspace/example/source",
      "relative_path": "config.h",
      "structs": {},
      "unions": {}
    },
    "geometry.c": {
      "aliases": {},
      "encoding_used": "utf-8",
      "enums": {},
      "file_path": "/workspace/example/source/geometry.c",
      "functions": [
        {
          "is_declaration": false,
          "is_static": false,
          "name": "create_triangle",
          "parameters": [
            {
              "name": "a",
              "type": "const point_t *",
              "value": null
            },
            {
              "name": "b",
              "type": "const point_t *",
              "value": null
            },
            {
              "name": "c",
              "type": "const point_t *",
              "value": null
            },
            {
              "name": "label",
              "type": "const char *",
              "value": null
            }
          ],
          "return_type": "triangle_t"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "triangle_area",
          "parameters": [
            {
              "name": "tri",
              "type": "const triangle_t *",
              "value": null
            }
          ],
          "return_type": "int"
        }
      ],
      "globals": [],
      "include_relations": [
        {
          "depth": 1,
          "included_file": "/workspace/example/source/geometry.h",
          "source_file": "/workspace/example/source/geometry.c"
        }
      ],
      "includes": [
        "geometry.h",
        "stdlib.h",
        "string.h"
      ],
      "macros": [],
      "project_root": "/workspace/example/source",
      "relative_path": "geometry.c",
      "structs": {},
      "unions": {}
    },
    "geometry.h": {
      "aliases": {},
      "encoding_used": "utf-8",
      "enums": {},
      "file_path": "/workspace/example/source/geometry.h",
      "functions": [
        {
          "is_declaration": true,
          "is_static": false,
          "name": "create_triangle",
          "parameters": [
            {
              "name": "a",
              "type": "const point_t *",
              "value": null
            },
            {
              "name": "b",
              "type": "const point_t *",
              "value": null
            },
            {
              "name": "c",
              "type": "const point_t *",
              "value": null
            },
            {
              "name": "label",
              "type": "const char *",
              "value": null
            }
          ],
          "return_type": "triangle_t"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "triangle_area",
          "parameters": [
            {
              "name": "tri",
              "type": "const triangle_t *",
              "value": null
            }
          ],
          "return_type": "int"
        }
      ],
      "globals": [],
      "include_relations": [
        {
          "depth": 2,
          "included_file": "/workspace/example/source/math_utils.h",
          "source_file": "/workspace/example/source/geometry.h"
        },
        {
          "depth": 1,
          "included_file": "/workspace/example/source/math_utils.h",
          "source_file": "/workspace/example/source/geometry.h"
        },
        {
          "depth": 2,
          "included_file": "/workspace/example/source/math_utils.h",
          "source_file": "/workspace/example/source/geometry.h"
        },
        {
          "depth": 3,
          "included_file": "/workspace/example/source/math_utils.h",
          "source_file": "/workspace/example/source/geometry.h"
        },
        {
          "depth": 2,
          "included_file": "/workspace/example/source/math_utils.h",
          "source_file": "/workspace/example/source/geometry.h"
        },
        {
          "depth": 2,
          "included_file": "/workspace/example/source/math_utils.h",
          "source_file": "/workspace/example/source/geometry.h"
        },
        {
          "depth": 3,
          "included_file": "/workspace/example/source/math_utils.h",
          "source_file": "/workspace/example/source/geometry.h"
        },
        {
          "depth": 2,
          "included_file": "/workspace/example/source/sample.h",
          "source_file": "/workspace/example/source/geometry.h"
        },
        {
          "depth": 1,
          "included_file": "/workspace/example/source/sample.h",
          "source_file": "/workspace/example/source/geometry.h"
        },
        {
          "depth": 2,
          "included_file": "/workspace/example/source/sample.h",
          "source_file": "/workspace/example/source/geometry.h"
        },
        {
          "depth": 3,
          "included_file": "/workspace/example/source/sample.h",
          "source_file": "/workspace/example/source/geometry.h"
        },
        {
          "depth": 2,
          "included_file": "/workspace/example/source/sample.h",
          "source_file": "/workspace/example/source/geometry.h"
        },
        {
          "depth": 2,
          "included_file": "/workspace/example/source/sample.h",
          "source_file": "/workspace/example/source/geometry.h"
        },
        {
          "depth": 3,
          "included_file": "/workspace/example/source/sample.h",
          "source_file": "/workspace/example/source/geometry.h"
        }
      ],
      "includes": [
        "math_utils.h",
        "sample.h"
      ],
      "macros": [
        "GEOMETRY_H"
      ],
      "project_root": "/workspace/example/source",
      "relative_path": "geometry.h",
      "structs": {
        "triangle_t": {
          "fields": [
            {
              "name": "vertices",
              "type": "point_t[3]",
              "value": null
            },
            {
              "name": "label",
              "type": "char[MAX_LABEL_LEN]",
              "value": null
            }
          ],
          "methods": [],
          "name": "triangle_t",
          "tag_name": "triangle_tag",
          "uses": [
            "point_t"
          ]
        }
      },
      "unions": {}
    },
    "logger.c": {
      "aliases": {},
      "encoding_used": "utf-8",
      "enums": {},
      "file_path": "/workspace/example/source/logger.c",
      "functions": [
        {
          "is_declaration": false,
          "is_static": false,
          "name": "log_message",
          "parameters": [
            {
              "name": "level",
              "type": "log_level_t",
              "value": null
            },
            {
              "name": "fmt",
              "type": "const char *",
              "value": null
            },
            {
              "name": "...",
              "type": "...",
              "value": null
            }
          ],
          "return_type": "void"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "set_log_callback",
          "parameters": [
            {
              "name": "cb",
              "type": "log_callback_t",
              "value": null
            }
          ],
          "return_type": "void"
        }
      ],
      "globals": [
        {
          "name": "current_cb",
          "type": "log_callback_t",
          "value": null
        }
      ],
      "include_relations": [
        {
          "depth": 1,
          "included_file": "/workspace/example/source/logger.h",
          "source_file": "/workspace/example/source/logger.c"
        }
      ],
      "includes": [
        "logger.h",
        "stdarg.h",
        "string.h"
      ],
      "macros": [],
      "project_root": "/workspace/example/source",
      "relative_path": "logger.c",
      "structs": {},
      "unions": {}
    },
    "logger.h": {
      "aliases": {
        "log_callback_t": {
          "name": "log_callback_t",
          "original_type": "void ( * log_callback_t ) ( log_level_t level , const char * message )",
          "uses": [
            "log_level_t"
          ]
        }
      },
      "encoding_used": "utf-8",
      "enums": {
        "log_level_t": {
          "name": "log_level_t",
          "tag_name": "",
          "values": [
            {
              "name": "LOG_DEBUG",
              "value": "0"
            },
            {
              "name": "LOG_INFO",
              "value": null
            },
            {
              "name": "LOG_WARN",
              "value": null
            },
            {
              "name": "LOG_ERROR",
              "value": null
            }
          ]
        }
      },
      "file_path": "/workspace/example/source/logger.h",
      "functions": [
        {
          "is_declaration": true,
          "is_static": false,
          "name": "log_message",
          "parameters": [
            {
              "name": "level",
              "type": "log_level_t",
              "value": null
            },
            {
              "name": "fmt",
              "type": "const char *",
              "value": null
            },
            {
              "name": "...",
              "type": "...",
              "value": null
            }
          ],
          "return_type": "void"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "set_log_callback",
          "parameters": [
            {
              "name": "cb",
              "type": "log_callback_t",
              "value": null
            }
          ],
          "return_type": "void"
        }
      ],
      "globals": [],
      "include_relations": [
        {
          "depth": 2,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/logger.h"
        },
        {
          "depth": 3,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/logger.h"
        },
        {
          "depth": 2,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/logger.h"
        },
        {
          "depth": 1,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/logger.h"
        },
        {
          "depth": 2,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/logger.h"
        },
        {
          "depth": 3,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/logger.h"
        },
        {
          "depth": 2,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/logger.h"
        },
        {
          "depth": 3,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/logger.h"
        },
        {
          "depth": 2,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/logger.h"
        },
        {
          "depth": 3,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/logger.h"
        },
        {
          "depth": 2,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/logger.h"
        },
        {
          "depth": 3,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/logger.h"
        }
      ],
      "includes": [
        "config.h",
        "stdio.h"
      ],
      "macros": [
        "LOGGER_H"
      ],
      "project_root": "/workspace/example/source",
      "relative_path": "logger.h",
      "structs": {},
      "unions": {}
    },
    "math_utils.c": {
      "aliases": {},
      "encoding_used": "utf-8",
      "enums": {},
      "file_path": "/workspace/example/source/math_utils.c",
      "functions": [
        {
          "is_declaration": false,
          "is_static": false,
          "name": "add",
          "parameters": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "average",
          "parameters": [
            {
              "name": "arr",
              "type": "const int *",
              "value": null
            },
            {
              "name": "len",
              "type": "size_t",
              "value": null
            }
          ],
          "return_type": "real_t"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "subtract",
          "parameters": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "int"
        }
      ],
      "globals": [],
      "include_relations": [
        {
          "depth": 1,
          "included_file": "/workspace/example/source/math_utils.h",
          "source_file": "/workspace/example/source/math_utils.c"
        }
      ],
      "includes": [
        "math_utils.h"
      ],
      "macros": [],
      "project_root": "/workspace/example/source",
      "relative_path": "math_utils.c",
      "structs": {},
      "unions": {}
    },
    "math_utils.h": {
      "aliases": {
        "math_op_t": {
          "name": "math_op_t",
          "original_type": "int ( * math_op_t ) ( int , int )",
          "uses": []
        },
        "real_t": {
          "name": "real_t",
          "original_type": "double",
          "uses": []
        }
      },
      "encoding_used": "utf-8",
      "enums": {},
      "file_path": "/workspace/example/source/math_utils.h",
      "functions": [
        {
          "is_declaration": true,
          "is_static": false,
          "name": "add",
          "parameters": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "average",
          "parameters": [
            {
              "name": "arr",
              "type": "const int *",
              "value": null
            },
            {
              "name": "len",
              "type": "size_t",
              "value": null
            }
          ],
          "return_type": "real_t"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "subtract",
          "parameters": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "int"
        }
      ],
      "globals": [],
      "include_relations": [
        {
          "depth": 3,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/math_utils.h"
        },
        {
          "depth": 2,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/math_utils.h"
        },
        {
          "depth": 2,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/math_utils.h"
        },
        {
          "depth": 1,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/math_utils.h"
        },
        {
          "depth": 3,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/math_utils.h"
        },
        {
          "depth": 2,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/math_utils.h"
        },
        {
          "depth": 3,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/math_utils.h"
        },
        {
          "depth": 3,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/math_utils.h"
        }
      ],
      "includes": [
        "config.h"
      ],
      "macros": [
        "MATH_UTILS_H"
      ],
      "project_root": "/workspace/example/source",
      "relative_path": "math_utils.h",
      "structs": {},
      "unions": {}
    },
    "sample.c": {
      "aliases": {},
      "encoding_used": "utf-8",
      "enums": {},
      "file_path": "/workspace/example/source/sample.c",
      "functions": [
        {
          "is_declaration": true,
          "is_static": false,
          "name": "calculate_sum",
          "parameters": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "calculate_sum",
          "parameters": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "create_point",
          "parameters": [
            {
              "name": "x",
              "type": "int",
              "value": null
            },
            {
              "name": "y",
              "type": "int",
              "value": null
            },
            {
              "name": "label",
              "type": "const char *",
              "value": null
            }
          ],
          "return_type": "point_t *"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "create_point",
          "parameters": [
            {
              "name": "x",
              "type": "int",
              "value": null
            },
            {
              "name": "y",
              "type": "int",
              "value": null
            },
            {
              "name": "label",
              "type": "const char *",
              "value": null
            }
          ],
          "return_type": "point_t *"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "demo_triangle_usage",
          "parameters": [],
          "return_type": "void"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "main",
          "parameters": [],
          "return_type": "int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "process_point",
          "parameters": [
            {
              "name": "p",
              "type": "point_t *",
              "value": null
            }
          ],
          "return_type": "void"
        }
      ],
      "globals": [
        {
          "name": "buffer",
          "type": "char",
          "value": null
        },
        {
          "name": "global_counter",
          "type": "int",
          "value": null
        },
        {
          "name": "global_ptr",
          "type": "double *",
          "value": null
        }
      ],
      "include_relations": [
        {
          "depth": 1,
          "included_file": "/workspace/example/source/geometry.h",
          "source_file": "/workspace/example/source/sample.c"
        },
        {
          "depth": 1,
          "included_file": "/workspace/example/source/logger.h",
          "source_file": "/workspace/example/source/sample.c"
        },
        {
          "depth": 1,
          "included_file": "/workspace/example/source/math_utils.h",
          "source_file": "/workspace/example/source/sample.c"
        },
        {
          "depth": 1,
          "included_file": "/workspace/example/source/sample.h",
          "source_file": "/workspace/example/source/sample.c"
        }
      ],
      "includes": [
        "geometry.h",
        "logger.h",
        "math_utils.h",
        "sample.h",
        "stdio.h",
        "stdlib.h",
        "string.h"
      ],
      "macros": [
        "CALC(x, y)",
        "DEBUG_MODE",
        "MAX_SIZE"
      ],
      "project_root": "/workspace/example/source",
      "relative_path": "sample.c",
      "structs": {},
      "unions": {}
    },
    "sample.h": {
      "aliases": {},
      "encoding_used": "utf-8",
      "enums": {
        "system_state_t": {
          "name": "system_state_t",
          "tag_name": "",
          "values": [
            {
              "name": "STATE_IDLE",
              "value": "0"
            },
            {
              "name": "STATE_RUNNING",
              "value": null
            },
            {
              "name": "STATE_ERROR",
              "value": null
            }
          ]
        }
      },
      "file_path": "/workspace/example/source/sample.h",
      "functions": [
        {
          "is_declaration": true,
          "is_static": false,
          "name": "calculate_sum",
          "parameters": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "extern int"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "create_point",
          "parameters": [
            {
              "name": "x",
              "type": "int",
              "value": null
            },
            {
              "name": "y",
              "type": "int",
              "value": null
            },
            {
              "name": "label",
              "type": "const char *",
              "value": null
            }
          ],
          "return_type": "extern point_t *"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "process_point",
          "parameters": [
            {
              "name": "p",
              "type": "point_t *",
              "value": null
            }
          ],
          "return_type": "extern void"
        }
      ],
      "globals": [
        {
          "name": "DEFAULT_LABEL",
          "type": "char *",
          "value": null
        },
        {
          "name": "MAX_POINTS",
          "type": "int",
          "value": null
        }
      ],
      "include_relations": [
        {
          "depth": 3,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/sample.h"
        },
        {
          "depth": 2,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/sample.h"
        },
        {
          "depth": 3,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/sample.h"
        },
        {
          "depth": 2,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/sample.h"
        },
        {
          "depth": 1,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/sample.h"
        },
        {
          "depth": 3,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/sample.h"
        },
        {
          "depth": 3,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/sample.h"
        },
        {
          "depth": 2,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/sample.h"
        },
        {
          "depth": 3,
          "included_file": "/workspace/example/source/geometry.h",
          "source_file": "/workspace/example/source/sample.h"
        },
        {
          "depth": 2,
          "included_file": "/workspace/example/source/geometry.h",
          "source_file": "/workspace/example/source/sample.h"
        },
        {
          "depth": 3,
          "included_file": "/workspace/example/source/geometry.h",
          "source_file": "/workspace/example/source/sample.h"
        },
        {
          "depth": 2,
          "included_file": "/workspace/example/source/geometry.h",
          "source_file": "/workspace/example/source/sample.h"
        },
        {
          "depth": 1,
          "included_file": "/workspace/example/source/geometry.h",
          "source_file": "/workspace/example/source/sample.h"
        },
        {
          "depth": 3,
          "included_file": "/workspace/example/source/geometry.h",
          "source_file": "/workspace/example/source/sample.h"
        },
        {
          "depth": 3,
          "included_file": "/workspace/example/source/geometry.h",
          "source_file": "/workspace/example/source/sample.h"
        },
        {
          "depth": 2,
          "included_file": "/workspace/example/source/geometry.h",
          "source_file": "/workspace/example/source/sample.h"
        },
        {
          "depth": 3,
          "included_file": "/workspace/example/source/logger.h",
          "source_file": "/workspace/example/source/sample.h"
        },
        {
          "depth": 2,
          "included_file": "/workspace/example/source/logger.h",
          "source_file": "/workspace/example/source/sample.h"
        },
        {
          "depth": 3,
          "included_file": "/workspace/example/source/logger.h",
          "source_file": "/workspace/example/source/sample.h"
        },
        {
          "depth": 2,
          "included_file": "/workspace/example/source/logger.h",
          "source_file": "/workspace/example/source/sample.h"
        },
        {
          "depth": 1,
          "included_file": "/workspace/example/source/logger.h",
          "source_file": "/workspace/example/source/sample.h"
        },
        {
          "depth": 3,
          "included_file": "/workspace/example/source/logger.h",
          "source_file": "/workspace/example/source/sample.h"
        },
        {
          "depth": 3,
          "included_file": "/workspace/example/source/logger.h",
          "source_file": "/workspace/example/source/sample.h"
        },
        {
          "depth": 2,
          "included_file": "/workspace/example/source/logger.h",
          "source_file": "/workspace/example/source/sample.h"
        }
      ],
      "includes": [
        "config.h",
        "geometry.h",
        "logger.h",
        "stddef.h"
      ],
      "macros": [
        "MAX(a, b)",
        "MIN(a, b)",
        "PI",
        "SAMPLE_H",
        "VERSION"
      ],
      "project_root": "/workspace/example/source",
      "relative_path": "sample.h",
      "structs": {
        "point_t": {
          "fields": [
            {
              "name": "x",
              "type": "int",
              "value": null
            },
            {
              "name": "y",
              "type": "int",
              "value": null
            },
            {
              "name": "label",
              "type": "char[32]",
              "value": null
            }
          ],
          "methods": [],
          "name": "point_t",
          "tag_name": "point_tag",
          "uses": []
        }
      },
      "unions": {}
    },
    "typedef_test.c": {
      "aliases": {},
      "encoding_used": "utf-8",
      "enums": {},
      "file_path": "/workspace/example/source/typedef_test.c",
      "functions": [
        {
          "is_declaration": false,
          "is_static": false,
          "name": "create_complex",
          "parameters": [
            {
              "name": "id",
              "type": "MyLen",
              "value": null
            },
            {
              "name": "name",
              "type": "MyString",
              "value": null
            }
          ],
          "return_type": "MyComplex *"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "log_buffer",
          "parameters": [
            {
              "name": "buffer",
              "type": "const MyBuffer *",
              "value": null
            }
          ],
          "return_type": "void"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "main",
          "parameters": [],
          "return_type": "int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "my_callback",
          "parameters": [
            {
              "name": "buffer",
              "type": "MyBuffer *",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "process_buffer",
          "parameters": [
            {
              "name": "buffer",
              "type": "MyBuffer *",
              "value": null
            }
          ],
          "return_type": "MyInt"
        }
      ],
      "globals": [
        {
          "name": "global_buffer",
          "type": "MyBuffer",
          "value": null
        },
        {
          "name": "global_complex",
          "type": "MyComplexPtr",
          "value": null
        },
        {
          "name": "global_length",
          "type": "MyLen",
          "value": null
        }
      ],
      "include_relations": [
        {
          "depth": 1,
          "included_file": "/workspace/example/source/complex_example.h",
          "source_file": "/workspace/example/source/typedef_test.c"
        },
        {
          "depth": 1,
          "included_file": "/workspace/example/source/geometry.h",
          "source_file": "/workspace/example/source/typedef_test.c"
        },
        {
          "depth": 1,
          "included_file": "/workspace/example/source/logger.h",
          "source_file": "/workspace/example/source/typedef_test.c"
        },
        {
          "depth": 1,
          "included_file": "/workspace/example/source/typedef_test.h",
          "source_file": "/workspace/example/source/typedef_test.c"
        }
      ],
      "includes": [
        "complex_example.h",
        "geometry.h",
        "logger.h",
        "stdlib.h",
        "typedef_test.h"
      ],
      "macros": [],
      "project_root": "/workspace/example/source",
      "relative_path": "typedef_test.c",
      "structs": {},
      "unions": {}
    },
    "typedef_test.h": {
      "aliases": {
        "MyCallback": {
          "name": "MyCallback",
          "original_type": "int ( * MyCallback ) ( MyBuffer * buffer )",
          "uses": [
            "MyBuffer"
          ]
        },
        "MyComplexArray": {
          "name": "MyComplexArray",
          "original_type": "MyComplexPtr MyComplexArray [ 10 ]",
          "uses": [
            "MyComplexPtr"
          ]
        },
        "MyComplexPtr": {
          "name": "MyComplexPtr",
          "original_type": "MyComplex *",
          "uses": [
            "MyComplex"
          ]
        },
        "MyInt": {
          "name": "MyInt",
          "original_type": "int32_t",
          "uses": []
        },
        "MyLen": {
          "name": "MyLen",
          "original_type": "uint32_t",
          "uses": []
        },
        "MyString": {
          "name": "MyString",
          "original_type": "char *",
          "uses": []
        }
      },
      "encoding_used": "utf-8",
      "enums": {
        "Color_t": {
          "name": "Color_t",
          "tag_name": "",
          "values": [
            {
              "name": "COLOR_RED",
              "value": "0"
            },
            {
              "name": "COLOR_GREEN",
              "value": null
            },
            {
              "name": "COLOR_BLUE",
              "value": null
            }
          ]
        },
        "Status_t": {
          "name": "Status_t",
          "tag_name": "",
          "values": [
            {
              "name": "STATUS_OK",
              "value": "0"
            },
            {
              "name": "STATUS_FAIL",
              "value": null
            }
          ]
        }
      },
      "file_path": "/workspace/example/source/typedef_test.h",
      "functions": [],
      "globals": [],
      "include_relations": [
        {
          "depth": 2,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/typedef_test.h"
        },
        {
          "depth": 1,
          "included_file": "/workspace/example/source/config.h",
          "source_file": "/workspace/example/source/typedef_test.h"
        },
        {
          "depth": 2,
          "included_file": "/workspace/example/source/logger.h",
          "source_file": "/workspace/example/source/typedef_test.h"
        },
        {
          "depth": 1,
          "included_file": "/workspace/example/source/logger.h",
          "source_file": "/workspace/example/source/typedef_test.h"
        },
        {
          "depth": 2,
          "included_file": "/workspace/example/source/sample.h",
          "source_file": "/workspace/example/source/typedef_test.h"
        },
        {
          "depth": 1,
          "included_file": "/workspace/example/source/sample.h",
          "source_file": "/workspace/example/source/typedef_test.h"
        }
      ],
      "includes": [
        "config.h",
        "logger.h",
        "sample.h",
        "stdint.h"
      ],
      "macros": [
        "TYPEDEF_TEST_H"
      ],
      "project_root": "/workspace/example/source",
      "relative_path": "typedef_test.h",
      "structs": {
        "MyBuffer": {
          "fields": [
            {
              "name": "length",
              "type": "MyLen",
              "value": null
            },
            {
              "name": "data",
              "type": "MyString",
              "value": null
            }
          ],
          "methods": [],
          "name": "MyBuffer",
          "tag_name": "MyBuffer_tag",
          "uses": [
            "MyString",
            "MyLen"
          ]
        },
        "MyComplex": {
          "fields": [
            {
              "name": "id",
              "type": "MyLen",
              "value": null
            },
            {
              "name": "name",
              "type": "MyString",
              "value": null
            },
            {
              "name": "callback",
              "type": "MyCallback",
              "value": null
            },
            {
              "name": "log_level",
              "type": "log_level_t",
              "value": null
            }
          ],
          "methods": [],
          "name": "MyComplex",
          "tag_name": "MyComplexStruct_tag",
          "uses": [
            "MyString",
            "MyLen",
            "log_level_t",
            "MyCallback"
          ]
        },
        "NamedStruct_t": {
          "fields": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "NamedStruct_t",
          "tag_name": "NamedStruct_tag",
          "uses": []
        }
      },
      "unions": {
        "NamedUnion_t": {
          "fields": [
            {
              "name": "c",
              "type": "char",
              "value": null
            },
            {
              "name": "d",
              "type": "double",
              "value": null
            }
          ],
          "name": "NamedUnion_t",
          "tag_name": "NamedUnion_tag",
          "uses": []
        },
        "Number_t": {
          "fields": [
            {
              "name": "i",
              "type": "int",
              "value": null
            },
            {
              "name": "f",
              "type": "float",
              "value": null
            }
          ],
          "name": "Number_t",
          "tag_name": "Number_tag",
          "uses": []
        }
      }
    }
  },
  "project_name": "source",
  "project_root": "/workspace/example/source"
}