@startuml logger

class "logger" as LOGGER <<source>> #LightBlue
{
    -- Global Variables --
    log_callback_t current_cb
    -- Functions --
    void set_log_callback(log_callback_t cb)
    void log_message(log_level_t level, const char * fmt, ...)
}

class "logger" as HEADER_LOGGER <<header>> #LightGreen
{
    -- Macros --
    + #define LOGGER_H
    -- Functions --
    + void set_log_callback(log_callback_t cb)
    + void log_message(log_level_t level, const char * fmt, ...)
}

class "config" as HEADER_CONFIG <<header>> #LightGreen
{
    -- Macros --
    + #define CONFIG_H
    + #define PROJECT_NAME
    + #define MAX_LABEL_LEN
    + #define DEFAULT_BUFFER_SIZE
}

class "log_level_t" as TYPEDEF_LOG_LEVEL_T <<typedef>> #LightYellow
{
    + LOG_DEBUG = 0
    + LOG_INFO
    + LOG_WARN
    + LOG_ERROR
}

class "log_callback_t" as TYPEDEF_LOG_CALLBACK_T <<typedef>> #LightYellow
{
    + void ( * log_callback_t ) ( log_level_t level , const char * message )
}

class "GlobalStatus" as TYPEDEF_GLOBALSTATUS <<typedef>> #LightYellow
{
    + GS_OK
    + GS_ERROR
    + GS_UNKNOWN
}

class "id_t" as TYPEDEF_ID_T <<typedef>> #LightYellow
{
    + uint32_t
}

class "status_t" as TYPEDEF_STATUS_T <<typedef>> #LightYellow
{
    + int32_t
}


' Include relationships
LOGGER --> HEADER_LOGGER : <<include>>
HEADER_LOGGER --> HEADER_CONFIG : <<include>>

' Declaration relationships
HEADER_LOGGER ..> TYPEDEF_LOG_LEVEL_T : <<declares>>
HEADER_LOGGER ..> TYPEDEF_LOG_CALLBACK_T : <<declares>>
HEADER_CONFIG ..> TYPEDEF_GLOBALSTATUS : <<declares>>
HEADER_CONFIG ..> TYPEDEF_ID_T : <<declares>>
HEADER_CONFIG ..> TYPEDEF_STATUS_T : <<declares>>

' Uses relationships
TYPEDEF_LOG_CALLBACK_T ..> TYPEDEF_LOG_LEVEL_T : <<uses>>

@enduml