@startuml logger

class "logger" as LOGGER <<source>> #LightBlue
{
    -- Global Variables --
    log_callback_t current_cb
    va_list args
    const char * level_str
    -- Functions --
    void set_log_callback()
    void log_message()
}

class "logger" as HEADER_LOGGER <<header>> #LightGreen
{
    -- Macros --
    + #define LOGGER_H
    -- Functions --
    + void set_log_callback()
    + void log_message()
}

class "stdarg.h" as HEADER_STDARG_H <<header>> #LightGray
{
}

class "string.h" as HEADER_STRING_H <<header>> #LightGray
{
}

class "config" as HEADER_CONFIG <<header>> #LightGreen
{
    -- Macros --
    + #define CONFIG_H
    + #define PROJECT_NAME
    + #define MAX_LABEL_LEN
    + #define DEFAULT_BUFFER_SIZE
}

class "stdio.h" as HEADER_STDIO_H <<header>> #LightGray
{
}

class "log_level_t" as TYPEDEF_LOG_LEVEL_T <<typedef>> #LightYellow
{
    + LOG_DEBUG = 0
    + LOG_INFO
    + LOG_WARN
    + LOG_ERROR
}

HEADER_LOGGER --> HEADER_CONFIG : <<include>>
HEADER_LOGGER --> HEADER_EXTERNAL:STDIO : <<include>>
HEADER_COMPLEX_EXAMPLE --> HEADER_CONFIG : <<include>>
HEADER_COMPLEX_EXAMPLE --> HEADER_LOGGER : <<include>>
HEADER_GEOMETRY --> HEADER_SAMPLE : <<include>>
HEADER_GEOMETRY --> HEADER_MATH_UTILS : <<include>>
HEADER_MATH_UTILS --> HEADER_CONFIG : <<include>>
HEADER_SAMPLE --> HEADER_MATH_UTILS : <<include>>
HEADER_SAMPLE --> HEADER_LOGGER : <<include>>
HEADER_SAMPLE --> HEADER_GEOMETRY : <<include>>
HEADER_SAMPLE --> HEADER_CONFIG : <<include>>
HEADER_TYPEDEF_TEST --> HEADER_COMPLEX_EXAMPLE : <<include>>
HEADER_TYPEDEF_TEST --> HEADER_GEOMETRY : <<include>>
HEADER_TYPEDEF_TEST --> HEADER_LOGGER : <<include>>
HEADER_TYPEDEF_TEST --> HEADER_SAMPLE : <<include>>
HEADER_TYPEDEF_TEST --> HEADER_CONFIG : <<include>>
HEADER_LOGGER --> HEADER_STDIO_H : <<include>>
LOGGER --> HEADER_LOGGER : <<include>>
LOGGER --> HEADER_STDARG_H : <<include>>
LOGGER --> HEADER_STRING_H : <<include>>
HEADER_LOGGER ..> TYPEDEF_LOG_LEVEL_T : declares

@enduml