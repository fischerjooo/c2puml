@startuml math_utils

class "math_utils" as MATH_UTILS <<source>> #LightBlue
{
    -- Functions --
    #include "math_utils.h" int add(int a, int b)
    int subtract(int a, int b)
    real_t average(const int * arr, size_t len)
}

class "math_utils" as HEADER_MATH_UTILS <<header>> #LightGreen
{
    -- Macros --
    + #define MATH_UTILS_H
    -- Typedefs --
    + typedef double real_t
    + typedef int ( * math_op_t ) ( int , int ) math_op_t
    -- Functions --
    + #ifndef MATH_UTILS_H #define MATH_UTILS_H #include "config.h" typedef double real_t ; typedef int ( * math_op_t ) ( int , int ) ; int add(int a, int b)
    + int subtract(int a, int b)
    + real_t average(const int * arr, size_t len)
}

class "config" as HEADER_CONFIG <<header>> #LightGreen
{
    -- Macros --
    + #define CONFIG_H
    + #define PROJECT_NAME
    + #define MAX_LABEL_LEN
    + #define DEFAULT_BUFFER_SIZE
    -- Typedefs --
    + typedef uint32_t id_t
    + typedef int32_t status_t
}

class "real_t" as TYPEDEF_REAL_T <<typedef>> #LightYellow
{
    + typedef double real_t
}

class "math_op_t" as TYPEDEF_MATH_OP_T <<typedef>> #LightYellow
{
    + typedef int ( * math_op_t ) ( int , int ) math_op_t
}

MATH_UTILS --> HEADER_MATH_UTILS : <<include>>
HEADER_MATH_UTILS --> HEADER_CONFIG : <<include>>

@enduml