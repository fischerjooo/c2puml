name: Release

on:
  workflow_dispatch:
    inputs:
      release_date:
        description: 'Release date (YYYY-MM-DD format)'
        required: false
        default: ''
        type: string
      release_suffix:
        description: 'Optional suffix to append to tag name (e.g., "beta", "rc1")'
        required: false
        default: ''
        type: string
      release_notes:
        description: 'Additional release notes to include in the release body'
        required: false
        default: ''
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    steps:
      - name: "10.01 Checkout repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: "10.02 Set up Python"
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: "10.03 Configure Git"
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: "10.04 Generate release date and tag"
        id: release_date
        run: |
          if [ -n "${{ github.event.inputs.release_date }}" ]; then
            echo "date=${{ github.event.inputs.release_date }}" >> $GITHUB_OUTPUT
          else
            echo "date=$(date +%Y-%m-%d)" >> $GITHUB_OUTPUT
          fi
          
          # Build tag name with optional suffix
          TAG_NAME="v${{ steps.release_date.outputs.date }}"
          if [ -n "${{ github.event.inputs.release_suffix }}" ]; then
            TAG_NAME="${TAG_NAME}-${{ github.event.inputs.release_suffix }}"
          fi
          echo "tag=${TAG_NAME}" >> $GITHUB_OUTPUT

      - name: "10.05 Create or update release branch"
        run: |
          # Check if release branch exists
          if git ls-remote --heads origin release | grep -q release; then
            git checkout release
            git pull origin release
            # Remove all files except .git
            git rm -rf . || true
            git clean -fdx || true
          else
            git checkout --orphan release
          fi

      - name: "10.06 Copy files from main branch"
        run: |
          # Switch back to main to copy files
          git checkout main
          
          # Create necessary directories
          mkdir -p src/
          
          # Copy src/c2puml and its contents
          cp -r src/c2puml src/
          
          # Copy main.py and README.md from root
          cp main.py .
          cp README.md .
          
          # Switch back to release branch
          git checkout release
          
          # Add all copied files
          git add .

      - name: "10.07 Verify copied files"
        run: |
          echo "üìÅ Verifying copied files..."
          ls -la
          echo "üìÅ Contents of src/c2puml:"
          ls -la src/c2puml/
          echo "üìÑ Main files:"
          ls -la main.py README.md

      - name: "10.08 Commit changes"
        run: |
          git commit -m "Release ${{ steps.release_date.outputs.tag }} - $(date)"
          git push origin release

      - name: "10.09 Create and push tag"
        run: |
          git tag -a "${{ steps.release_date.outputs.tag }}" -m "Release ${{ steps.release_date.outputs.tag }}"
          git push origin "${{ steps.release_date.outputs.tag }}"

      - name: "10.10 Create GitHub Release"
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release_date.outputs.tag }}
          release_name: Release ${{ steps.release_date.outputs.tag }}
          body: |
            ## Release ${{ steps.release_date.outputs.tag }}
            
            This release contains:
            - C2PlantUML source code (`src/c2puml/`)
            - Main application entry point (`main.py`)
            - Documentation (`README.md`)
            
            ### Files included:
            - `src/c2puml/` - Core C2PlantUML library
            - `main.py` - Application entry point
            - `README.md` - Project documentation
            
            ${{ github.event.inputs.release_notes != '' && format('### Additional Notes\n\n{0}', github.event.inputs.release_notes) || '' }}
          draft: false
          prerelease: false