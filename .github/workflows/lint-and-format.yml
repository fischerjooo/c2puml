name: Lint and Format Python Code

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        echo "üîß Installing Python dependencies..."
        python -m pip install --upgrade pip
        echo "üì¶ Installing linting and formatting tools..."
        pip install flake8 black isort
        echo "üìã Installing package in development mode..."
        pip install -e .
        echo "‚úÖ Dependencies installed successfully"

    - name: Show Python environment
      run: |
        echo "üêç Python Environment Information:"
        echo "Python version: $(python --version)"
        echo "Pip version: $(pip --version)"
        echo "Installed packages:"
        pip list

    - name: Check code formatting with black
      run: |
        echo "üé® Checking code formatting with black..."
        black --check --diff c_to_plantuml/ main.py run_all_tests.py setup.py
        echo "‚úÖ Black formatting check completed"

    - name: Check import sorting with isort
      run: |
        echo "üì¶ Checking import sorting with isort..."
        isort --check-only --diff c_to_plantuml/ main.py run_all_tests.py setup.py
        echo "‚úÖ isort check completed"

    - name: Lint with flake8
      run: |
        echo "üîç Running comprehensive flake8 linting..."
        flake8 c_to_plantuml/ main.py run_all_tests.py setup.py \
          --count \
          --select=E9,F63,F7,F82,W291,W292,W293,W391,E201,E202,E203,E211,E221,E222,E223,E224,E225,E226,E227,E228,E231,E241,E242,E251,E261,E262,E265,E266,E271,E272,E273,E274,E275,E301,E302,E303,E304,E305,E306,E401,E402,E701,E702,E703,E711,E712,E713,E714,E721,E722,E731,E741,E742,E743,E901,E902,W191,W291,W292,W293,W391,W503,W504,W601,W602,W603,W604,W605,W606 \
          --show-source \
          --statistics \
          --max-line-length=88 \
          --extend-ignore=E203,W503,E501
        echo "‚úÖ flake8 linting completed"

    - name: Format code with black
      run: |
        echo "üé® Formatting code with black..."
        black c_to_plantuml/ main.py run_all_tests.py setup.py
        echo "‚úÖ Black formatting completed"

    - name: Sort imports with isort
      run: |
        echo "üì¶ Sorting imports with isort..."
        isort c_to_plantuml/ main.py run_all_tests.py setup.py
        echo "‚úÖ isort completed"

    - name: Check for changes
      id: check_changes
      run: |
        echo "üîç Checking for formatting changes..."
        if [ -n "$(git status --porcelain)" ]; then
          echo "üìù Changes detected"
          echo "has_changes=true" >> $GITHUB_OUTPUT
          git diff
        else
          echo "‚úÖ No changes needed"
          echo "has_changes=false" >> $GITHUB_OUTPUT
        fi

    - name: Commit and push changes
      if: steps.check_changes.outputs.has_changes == 'true' && github.event_name != 'pull_request'
      run: |
        echo "üìù Committing and pushing formatting changes..."
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -A
        git commit -m "style: auto-format code with black and isort

        - Format code with black
        - Sort imports with isort
        - Auto-generated by GitHub Actions"
        git push
        echo "‚úÖ Changes committed and pushed"

    - name: Comment on PR if changes needed
      if: steps.check_changes.outputs.has_changes == 'true' && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '‚ö†Ô∏è **Code formatting issues detected!**\n\nThis PR has code formatting issues that need to be fixed. Please run the following commands locally:\n\n```bash\npip install black isort flake8\nblack c_to_plantuml/ main.py run_all_tests.py setup.py\nisort c_to_plantuml/ main.py run_all_tests.py setup.py\n```\n\nOr use the provided scripts:\n```bash\npython scripts/format.py\n```'
          })

    - name: Upload formatted files as artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: formatted-python-files-${{ matrix.python-version }}
        path: |
          c_to_plantuml/
          main.py
          run_all_tests.py
          setup.py