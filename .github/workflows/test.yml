name: Test C to PlantUML Converter

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        echo "🔧 Installing Python dependencies..."
        python -m pip install --upgrade pip
        echo "📦 Installing package in development mode..."
        pip install -e .
        echo "📋 Installing additional requirements..."
        if [ -f requirements.txt ]; then 
          echo "Found requirements.txt, installing..."
          pip install -r requirements.txt
        else
          echo "No requirements.txt found"
        fi
        echo "✅ Dependencies installed successfully"

    - name: Show Python environment
      run: |
        echo "🐍 Python Environment Information:"
        echo "Python version: $(python --version)"
        echo "Pip version: $(pip --version)"
        echo "Installed packages:"
        pip list

    - name: Lint with flake8
      run: |
        echo "🔍 Running flake8 linting..."
        pip install flake8
        echo "📝 Checking for Python syntax errors and undefined names..."
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        echo "📊 Running comprehensive style check..."
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        echo "✅ Linting completed successfully"

    - name: Run comprehensive feature tests
      run: |
        echo "🧪 Running comprehensive feature tests..."
        echo "📝 Single entry point: run_all_tests.py"
        python run_all_tests.py
        echo "✅ Feature tests completed"

    - name: Test main workflow
      run: |
        echo "🔄 Testing main workflow with simple config..."
        echo "📁 Current directory: $(pwd)"
        echo "📋 Available config files:"
        ls -la *.json
        echo "📝 Running main workflow..."
        python main.py config simple_config.json
        echo "✅ Main workflow completed"

    - name: Verify output files
      run: |
        echo "🔍 Verifying output files..."
        
        # Check that expected files were created
        if [ ! -f "Test_Project_model.json" ]; then
          echo "❌ Error: Test_Project_model.json not created"
          ls -la *.json
          exit 1
        else
          echo "✅ Test_Project_model.json created successfully"
          echo "📊 Model file size: $(wc -c < Test_Project_model.json) bytes"
        fi
        
        if [ ! -d "test_plantuml_output" ]; then
          echo "❌ Error: test_plantuml_output directory not created"
          ls -la
          exit 1
        else
          echo "✅ test_plantuml_output directory created successfully"
        fi
        
        # Check for .puml files
        puml_count=$(find test_plantuml_output -name "*.puml" | wc -l)
        if [ "$puml_count" -eq 0 ]; then
          echo "❌ Error: No .puml files generated"
          echo "📁 Directory contents:"
          ls -la test_plantuml_output/
          exit 1
        fi
        
        echo "✅ Success: Found $puml_count PlantUML files"
        echo "📊 PlantUML files:"
        find test_plantuml_output -name "*.puml" -exec wc -l {} \;

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-outputs-${{ matrix.python-version }}
        path: |
          Test_Project_model.json
          test_plantuml_output/
