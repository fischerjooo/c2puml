name: "00. Test"

on:
  pull_request:
    branches: [main, master]
    paths-ignore:
      - 'artifacts/**'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - name: "00.01 Checkout code"
      uses: actions/checkout@v4

    - name: "00.02 Setup Python ${{ matrix.python-version }}"
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: "00.03 Cache dependencies"
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: "00.04 Install dependencies"
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install -e .

    - name: "00.05 Verify package installation"
      run: |
        python -c "import c2puml; print('âœ… Package installed successfully')"
        python -c "from c2puml.core.parser import CParser; print('âœ… Core modules accessible')"
        python main.py --help

    - name: "00.06 Run unit tests"
      run: |
        echo "ðŸ§ª Running unit tests..."
        python -m pytest tests/unit/ -v --tb=short

    - name: "00.07 Run integration tests"
      run: |
        echo "ðŸ§ª Running integration tests..."
        python -m pytest tests/integration/ -v --tb=short

    - name: "00.08 Run feature tests"
      run: |
        echo "ðŸ§ª Running feature tests..."
        python -m pytest tests/feature/ -v --tb=short

    - name: "00.09 Run example workflow"
      run: |
        echo "ðŸš€ Running example workflow..."
        bash scripts/run_example.sh

    - name: "00.10 Upload test artifacts"
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-side-branch-py${{ matrix.python-version }}
        path: |
          artifacts/test_reports/
        retention-days: 7