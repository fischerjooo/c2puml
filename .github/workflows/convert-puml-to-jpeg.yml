name: Convert PlantUML to JPEG

on:
  workflow_dispatch:
    inputs:
      output_folder:
        description: 'Output folder containing .puml files'
        required: false
        default: 'output'
        type: string
      commit_changes:
        description: 'Commit generated images to repository'
        required: false
        default: true
        type: boolean

jobs:
  convert-puml:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Configure Git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        
    - name: Install PlantUML
      run: |
        echo "üì¶ Installing PlantUML..."
        sudo apt-get update
        sudo apt-get install -y plantuml default-jre
        
    - name: Install ImageMagick
      run: |
        echo "üì¶ Installing ImageMagick for JPEG conversion..."
        sudo apt-get install -y imagemagick
        
    - name: Verify installations
      run: |
        echo "üîç Verifying installations..."
        plantuml -version
        convert -version
        
    - name: List .puml files
      run: |
        echo "üìÅ Listing .puml files in ${{ github.event.inputs.output_folder || 'output' }} directory:"
        find ${{ github.event.inputs.output_folder || 'output' }} -name "*.puml" -type f || echo "No .puml files found"
        
    - name: Run picgen.sh script
      run: |
        echo "üöÄ Running PlantUML to JPEG conversion..."
        ./picgen.sh
        
    - name: List generated images
      run: |
        echo "üìÅ Generated images in output directory:"
        find output -name "*.jpg" -o -name "*.png" | sort || echo "No images found"
        
    - name: Check for changes
      id: check_changes
      run: |
        if git diff --quiet; then
          echo "no_changes=true" >> $GITHUB_OUTPUT
          echo "‚ÑπÔ∏è No changes to commit"
        else
          echo "no_changes=false" >> $GITHUB_OUTPUT
          echo "üìù Changes detected, will commit if enabled"
        fi
        
    - name: Commit and push changes
      if: ${{ github.event.inputs.commit_changes != 'false' && steps.check_changes.outputs.no_changes != 'true' }}
      run: |
        echo "üìù Committing generated images to repository..."
        
        # Add all generated images
        git add output/*.jpg output/*.png 2>/dev/null || echo "No new images to add"
        
        # Check if there are staged changes
        if git diff --cached --quiet; then
          echo "‚ÑπÔ∏è No staged changes to commit"
        else
          # Create commit message
          COMMIT_MSG="üñºÔ∏è Auto-generate PlantUML images from .puml files"
          
          # Add details about which files were converted
          echo "" >> /tmp/commit_msg
          echo "Generated from:" >> /tmp/commit_msg
          find output -name "*.puml" -exec basename {} \; | sed 's/^/- /' >> /tmp/commit_msg
          echo "" >> /tmp/commit_msg
          echo "Generated images:" >> /tmp/commit_msg
          find output -name "*.jpg" -o -name "*.png" | sort | sed 's/^/- /' >> /tmp/commit_msg
          
          # Commit with detailed message
          git commit -F /tmp/commit_msg
          
          # Push to the same branch
          git push origin ${{ github.ref }}
          
          echo "‚úÖ Successfully committed and pushed generated images"
        fi
        
    - name: Skip commit (disabled by user)
      if: ${{ github.event.inputs.commit_changes == 'false' }}
      run: |
        echo "‚è≠Ô∏è Skipping commit as requested by user"
        
    - name: Upload generated images as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: plantuml-images
        path: output/*.jpg
        retention-days: 30
        
    - name: Upload PNG files as artifacts (fallback)
      uses: actions/upload-artifact@v4
      with:
        name: plantuml-png-fallback
        path: output/*.png
        retention-days: 30
        if-no-files-found: ignore