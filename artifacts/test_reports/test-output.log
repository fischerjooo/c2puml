
======================================================================
                 üß™ C to PlantUML Converter Test Suite                 
======================================================================
Working directory: /workspace
Python version: 3.13.3 (main, Apr  8 2025, 19:55:40) [GCC 14.2.0]
Project root: /workspace

--------------------------------------------------
              Checking Dependencies               
--------------------------------------------------
‚ùå pytest is not available
‚ùå coverage is not available
‚ö†Ô∏è  Missing dependencies: pytest, coverage
‚ÑπÔ∏è  Install with: pip install pytest coverage

--------------------------------------------------
           Running Tests with unittest            
--------------------------------------------------
test_cli_modes_and_features_comprehensive (feature.test_cli_modes_comprehensive.TestCLIModesComprehensive.test_cli_modes_and_features_comprehensive) ... ok
test_component_features_types_and_relationships_comprehensive (feature.test_component_features_comprehensive.TestComponentFeaturesConsolidated.test_component_features_types_and_relationships_comprehensive) ... ok
test_component_features_types_and_relationships_comprehensive (feature.test_component_features_types_and_relationships_comprehensive.TestComponentFeaturesTypesAndRelationshipsConsolidated.test_component_features_types_and_relationships_comprehensive) ... ok
test_crypto_filter_pattern_functionality (feature.test_crypto_filter_pattern_comprehensive.TestCryptoFilterPatternComprehensive.test_crypto_filter_pattern_functionality)
Test crypto filter pattern functionality through the CLI interface ... ok
test_crypto_filter_usecase_functionality (feature.test_crypto_filter_usecase_comprehensive.TestCryptoFilterUsecaseComprehensive.test_crypto_filter_usecase_functionality)
Test crypto filter usecase functionality through the CLI interface ... ok
test_invalid_config_errors (feature.test_error_handling_comprehensive.TestErrorHandlingComprehensive.test_invalid_config_errors)
Test various invalid configuration scenarios ... ok
test_invalid_source_folder_errors (feature.test_error_handling_comprehensive.TestErrorHandlingComprehensive.test_invalid_source_folder_errors)
Test various invalid source folder scenarios ... ok
test_partial_failure_scenarios (feature.test_error_handling_comprehensive.TestErrorHandlingComprehensive.test_partial_failure_scenarios)
Test scenarios where some operations fail but others succeed ... ok
test_include_processing_consolidated (feature.test_include_processing.TestIncludeProcessingConsolidated.test_include_processing_consolidated) ... ok
test_include_processing_error_handling_consolidated (feature.test_include_processing.TestIncludeProcessingConsolidated.test_include_processing_error_handling_consolidated) ... ok
test_complete_workflow (feature.test_integration_cli.TestIntegrationCLI.test_complete_workflow)
End-to-end parse ‚Üí transform ‚Üí generate workflow ... ok
test_multiple_source_folders (feature.test_multiple_source_folders_cli.TestMultipleSourceFoldersCLI.test_multiple_source_folders) ... ok
test_transform_renaming (feature.test_transformer_features_cli.TestTransformerFeaturesCLI.test_transform_renaming)
Validate renaming transformations using transform-only ... ok
test_complete_system_integration (integration.test_comprehensive.TestComprehensiveIntegrationCLI.test_complete_system_integration) ... ok
test_integration_relationships_and_formatting_comprehensive (integration.test_comprehensive.TestComprehensiveIntegrationCLI.test_integration_relationships_and_formatting_comprehensive) ... ok
test_integration_relationships_and_formatting_comprehensive (integration.test_new_formatting_comprehensive.TestNewFormattingComprehensiveCLI.test_integration_relationships_and_formatting_comprehensive) ... ok
test_absolute_vs_relative_path_consistency (unit.test_absolute_path_bug_comprehensive.TestAbsolutePathBugComprehensive.test_absolute_vs_relative_path_consistency)
Test absolute vs relative path consistency through CLI interface. ... ok
test_mixed_path_styles_handling (unit.test_absolute_path_bug_comprehensive.TestAbsolutePathBugComprehensive.test_mixed_path_styles_handling)
Test mixed path styles handling through CLI interface. ... ok
test_path_resolution_and_include_tree_comprehensive (unit.test_absolute_path_bug_comprehensive.TestAbsolutePathBugComprehensive.test_path_resolution_and_include_tree_comprehensive) ... ok
test_relative_path_handling_in_include_tree (unit.test_absolute_path_bug_comprehensive.TestAbsolutePathBugComprehensive.test_relative_path_handling_in_include_tree)
Test that relative paths are handled correctly in include tree building through CLI interface. ... ok
test_subdirectory_includes_path_resolution (unit.test_absolute_path_bug_comprehensive.TestAbsolutePathBugComprehensive.test_subdirectory_includes_path_resolution)
Test subdirectory includes path resolution through CLI interface. ... ok
test_anonymous_processing_comprehensive (unit.test_anonymous_processing_comprehensive.TestAnonymousProcessingComprehensive.test_anonymous_processing_comprehensive)
Test comprehensive anonymous structure processing scenarios through the CLI interface ... ok
test_anonymous_structures_and_unions_comprehensive (unit.test_anonymous_structure_comprehensive.TestAnonymousStructureComprehensive.test_anonymous_structures_and_unions_comprehensive) ... ok
test_config_comprehensive (unit.test_config_comprehensive.TestConfigComprehensive.test_config_comprehensive)
Test comprehensive configuration scenarios through the CLI interface ... ok
test_complex_struct_field_processing (unit.test_debug_field_parsing_comprehensive.TestDebugFieldParsingComprehensive.test_complex_struct_field_processing)
Test complex struct field processing through CLI interface. ... ok
test_nested_anonymous_structure_fields (unit.test_debug_field_parsing_comprehensive.TestDebugFieldParsingComprehensive.test_nested_anonymous_structure_fields)
Test nested anonymous structure field parsing through CLI interface. ... ok
test_nested_union_field_parsing (unit.test_debug_field_parsing_comprehensive.TestDebugFieldParsingComprehensive.test_nested_union_field_parsing)
Test nested union field parsing through CLI interface. ... ok
test_anonymous_structure_parsing (unit.test_debug_parsing_comprehensive.TestDebugParsingComprehensive.test_anonymous_structure_parsing)
Test parsing anonymous structures in typedefs through CLI interface ... ok
test_complex_union_parsing (unit.test_debug_parsing_comprehensive.TestDebugParsingComprehensive.test_complex_union_parsing)
Test parsing complex union with nested structures through CLI interface ... ok
test_nested_struct_parsing (unit.test_debug_parsing_comprehensive.TestDebugParsingComprehensive.test_nested_struct_parsing)
Test parsing nested struct definitions through CLI interface ... ok
test_file_specific_configuration_comprehensive (unit.test_file_specific_configuration_comprehensive.TestFileSpecificConfigurationComprehensive.test_file_specific_configuration_comprehensive) ... ok
test_generator_basic_plantuml (unit.test_generator_basic_plantuml.TestGeneratorBasicPlantuml.test_generator_basic_plantuml)
Run the test_generator_basic_plantuml test through CLI interface. ... ok
test_generator_comprehensive (unit.test_generator_comprehensive.TestGeneratorComprehensive.test_generator_comprehensive)
Test comprehensive generator scenarios through the CLI interface ... ok
test_exact_requested_format (unit.test_generator_exact_format_cli.TestGeneratorExactFormatCLI.test_exact_requested_format)
Test the exact format requested: public functions, empty line, private functions ... ok
test_format_with_parameters (unit.test_generator_exact_format_cli.TestGeneratorExactFormatCLI.test_format_with_parameters)
Test the format works correctly with function parameters ... ok
test_generator_grouping_comprehensive (unit.test_generator_grouping_cli.TestGeneratorGroupingCLI.test_generator_grouping_comprehensive) ... ok
test_include_tree_comprehensive (unit.test_generator_include_tree_cli.TestGeneratorIncludeTreeCLI.test_include_tree_comprehensive)
Test comprehensive include tree generation with multiple files and deep includes ... ok
test_include_tree_with_absolute_paths (unit.test_generator_include_tree_cli.TestGeneratorIncludeTreeCLI.test_include_tree_with_absolute_paths)
Test that include relationships work correctly with absolute paths ... ok
test_generator_includes_and_filtering_comprehensive (unit.test_generator_includes_comprehensive.TestGeneratorIncludesComprehensive.test_generator_includes_and_filtering_comprehensive) ... ok
test_generator_naming_conventions_comprehensive (unit.test_generator_naming_comprehensive.TestGeneratorNamingComprehensive.test_generator_naming_conventions_comprehensive) ... ok
test_generator_new_formatting_stereotypes_comprehensive (unit.test_generator_new_formatting_cli.TestGeneratorNewFormattingCLI.test_generator_new_formatting_stereotypes_comprehensive) ... ok
test_generator_visibility_logic_comprehensive (unit.test_generator_visibility_logic.TestGeneratorVisibilityLogicCLI.test_generator_visibility_logic_comprehensive) ... ok
test_global_parsing_comprehensive (unit.test_global_parsing_comprehensive.TestGlobalParsingComprehensive.test_global_parsing_comprehensive) ... ok
test_include_filtering_comprehensive (unit.test_include_filtering_comprehensive.TestIncludeFilteringComprehensive.test_include_filtering_comprehensive)
Test comprehensive include filtering scenarios through the CLI interface ... ok
test_basic_include_processing (unit.test_include_processing_comprehensive.TestIncludeProcessingComprehensive.test_basic_include_processing)
Test basic include file processing through CLI interface ... ok
test_nested_structures_puml (unit.test_nested_structures_puml.TestNestedStructuresPuml.test_nested_structures_puml)
Test nested structures puml through the CLI interface ... ok
test_parser_comprehensive_basics (unit.test_parser_complete.TestParserComplete.test_parser_comprehensive_basics) ... ok
test_parser_encoding (unit.test_parser_encoding.TestParserEncoding.test_parser_encoding)
Test parsing files with various encodings through the CLI interface ... ok
test_parser_typedefs_comprehensive_enums (unit.test_parser_enum_comprehensive.TestParserEnumComprehensive.test_parser_typedefs_comprehensive_enums) ... ok
test_parser_elements_comprehensive (unit.test_parser_enums.TestParserElementsConsolidated.test_parser_elements_comprehensive) ... ok
test_parser_functions_and_parameters_comprehensive (unit.test_parser_function_comprehensive.TestParserFunctionComprehensive.test_parser_functions_and_parameters_comprehensive) ... ok
test_parser_functions_and_parameters_comprehensive (unit.test_parser_functions.TestParserFunctions.test_parser_functions_and_parameters_comprehensive) ... ok
test_parser_elements_comprehensive (unit.test_parser_globals.TestParserGlobals.test_parser_elements_comprehensive) ... ok
test_parser_includes_comprehensive (unit.test_parser_includes.TestParserIncludes.test_parser_includes_comprehensive) ... ok
test_parser_elements_comprehensive (unit.test_parser_macros.TestParserMacros.test_parser_elements_comprehensive) ... ok
test_struct_and_nested_ordering_comprehensive (unit.test_parser_nested_structures_comprehensive.TestParserNestedStructuresComprehensive.test_struct_and_nested_ordering_comprehensive) ... ok
test_parser_simple_c_file (unit.test_parser_simple_c_file.TestParserSimpleCFile.test_parser_simple_c_file)
Test parsing a simple C file through the CLI interface ... ok
test_parser_simple_struct (unit.test_parser_simple_struct.TestParserSimpleStruct.test_parser_simple_struct)
Test parsing a simple struct definition through the CLI interface ... ok
test_parser_elements_comprehensive (unit.test_parser_structs.TestParserStructs.test_parser_elements_comprehensive) ... ok
test_parser_typedefs_comprehensive (unit.test_parser_typedef_struct.TestParserTypedefStruct.test_parser_typedefs_comprehensive) ... ok
test_parser_typedefs_comprehensive (unit.test_parser_typedefs.TestParserTypedefsConsolidated.test_parser_typedefs_comprehensive) ... ok
test_preprocessor_and_macros_comprehensive (unit.test_preprocessor_handling_comprehensive.TestPreprocessorHandlingComprehensive.test_preprocessor_and_macros_comprehensive)
Run the consolidated preprocessor and macros scenario ... ok
test_parser_comprehensive_basics (unit.test_simple_c_file_parsing.TestParserComprehensiveBasics.test_parser_comprehensive_basics) ... ok
test_struct_and_nested_ordering_comprehensive (unit.test_struct_order_puml.TestStructOrderPuml.test_struct_and_nested_ordering_comprehensive) ... ok
test_tokenizer_comprehensive (unit.test_tokenizer_comprehensive.TestTokenizerComprehensive.test_tokenizer_comprehensive)
Run the consolidated tokenizer scenario ... ok
test_tokenizer_keywords (unit.test_tokenizer_keywords.TestTokenizerKeywords.test_tokenizer_keywords)
Test tokenizer keyword recognition through the CLI interface ... ok
test_transformer_basic (unit.test_transformer_basic.TestTransformerBasic.test_transformer_basic)
Test basic transformer functionality through the CLI interface ... ok
test_transformer_comprehensive (unit.test_transformer_comprehensive.TestTransformerComprehensive.test_transformer_comprehensive) ... ok
test_typedef_extraction_comprehensive (unit.test_typedef_extraction_comprehensive.TestTypedefExtractionComprehensive.test_typedef_extraction_comprehensive)
Run the consolidated typedef extraction scenario ... ok
test_verifier_comprehensive (unit.test_verifier_comprehensive.TestVerifierComprehensive.test_verifier_comprehensive)
Test comprehensive verifier scenarios through the CLI interface ... ok

----------------------------------------------------------------------
Ran 70 tests in 3.882s

OK

--------------------------------------------------
                 unittest Summary                 
--------------------------------------------------
Tests run: 70
Failures: 0
Errors: 0

======================================================================
                       üéØ Test Execution Summary                       
======================================================================
Duration: 3.92 seconds
‚úÖ All tests passed!
