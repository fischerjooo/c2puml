{
  "files": {
    "application.c": {
      "aliases": {},
      "anonymous_relationships": {},
      "enums": {},
      "file_path": "/workspace/tests/example/source/application.c",
      "functions": [
        {
          "is_declaration": false,
          "is_static": false,
          "name": "main",
          "parameters": [
            {
              "name": "argc",
              "type": "int",
              "value": null
            },
            {
              "name": "argv",
              "type": "char *[]",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "signal_handler",
          "parameters": [
            {
              "name": "sig",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "void"
        }
      ],
      "globals": [
        {
          "name": "running",
          "type": "volatile int",
          "value": null
        }
      ],
      "include_relations": [
        {
          "depth": 1,
          "included_file": "database.h",
          "source_file": "application.c"
        },
        {
          "depth": 1,
          "included_file": "network.h",
          "source_file": "application.c"
        }
      ],
      "includes": [
        "common.h",
        "database.h",
        "network.h",
        "signal.h",
        "stdio.h",
        "stdlib.h",
        "string.h",
        "unistd.h"
      ],
      "macros": [],
      "name": "application.c",
      "structs": {},
      "unions": {}
    },
    "complex.c": {
      "aliases": {},
      "anonymous_relationships": {},
      "enums": {},
      "file_path": "/workspace/tests/example/source/complex.c",
      "functions": [
        {
          "is_declaration": false,
          "is_static": false,
          "name": "ProcessorAdapter_Process",
          "parameters": [
            {
              "name": "job_pst",
              "type": "const Process_T *",
              "value": null
            }
          ],
          "return_type": "static Std_ReturnType"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "ProcessorHardware_Process",
          "parameters": [
            {
              "name": "job_pst",
              "type": "const Process_T *",
              "value": null
            }
          ],
          "return_type": "static Std_ReturnType"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "ProcessorService_Process",
          "parameters": [
            {
              "name": "job_pst",
              "type": "const Process_T *",
              "value": null
            }
          ],
          "return_type": "static Std_ReturnType"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "add_operation",
          "parameters": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "static int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "create_complex_handler",
          "parameters": [
            {
              "name": "name",
              "type": "const char *",
              "value": null
            },
            {
              "name": "validate_func",
              "type": "int ( * validate_func ) ( const char * )",
              "value": null
            },
            {
              "name": "alloc_func",
              "type": "void * ( * alloc_func ) ( size_t )",
              "value": null
            },
            {
              "name": "free_func",
              "type": "void ( * free_func ) ( void * )",
              "value": null
            }
          ],
          "return_type": "complex_handler_t *"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "create_handler",
          "parameters": [
            {
              "name": "name",
              "type": "const char *",
              "value": null
            },
            {
              "name": "init_func",
              "type": "int ( * init_func ) ( void * )",
              "value": null
            },
            {
              "name": "cleanup_func",
              "type": "void ( * cleanup_func ) ( void * )",
              "value": null
            },
            {
              "name": "callback",
              "type": "complex_callback_t",
              "value": null
            }
          ],
          "return_type": "void *"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "divide_operation",
          "parameters": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "static int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "execute_operations",
          "parameters": [
            {
              "name": "value",
              "type": "int",
              "value": null
            },
            {
              "name": "ops",
              "type": "math_ops_array_t",
              "value": null
            },
            {
              "name": "op_count",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "get_math_operations",
          "parameters": [],
          "return_type": "math_operation_t *"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "init_math_operations",
          "parameters": [],
          "return_type": "static void"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "modulo_operation",
          "parameters": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "static int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "multiply_operation",
          "parameters": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "static int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "print_result",
          "parameters": [
            {
              "name": "data",
              "type": "int *",
              "value": null
            },
            {
              "name": "size",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "static void"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "process_with_callbacks",
          "parameters": [
            {
              "name": "data",
              "type": "int[]",
              "value": null
            },
            {
              "name": "size",
              "type": "int",
              "value": null
            },
            {
              "name": "operations",
              "type": "math_operation_t[]",
              "value": null
            },
            {
              "name": "op_count",
              "type": "int",
              "value": null
            },
            {
              "name": "pre_process",
              "type": "void ( * pre_process ) ( int * , int )",
              "value": null
            },
            {
              "name": "post_process",
              "type": "void ( * post_process ) ( int * , int )",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "run_complex_tests",
          "parameters": [],
          "return_type": "void"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "subtract_operation",
          "parameters": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "static int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "test_callback",
          "parameters": [
            {
              "name": "item",
              "type": "int *",
              "value": null
            }
          ],
          "return_type": "static int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "test_complex_macro",
          "parameters": [
            {
              "name": "x",
              "type": "int *",
              "value": null
            },
            {
              "name": "y",
              "type": "int",
              "value": null
            },
            {
              "name": "z",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "void"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "test_handle_operation",
          "parameters": [
            {
              "name": "op_type",
              "type": "operation_type_t",
              "value": null
            },
            {
              "name": "data",
              "type": "int *",
              "value": null
            },
            {
              "name": "size",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "void"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "test_handler_table",
          "parameters": [],
          "return_type": "void"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "test_mixed_union",
          "parameters": [],
          "return_type": "void"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "test_operation_set",
          "parameters": [],
          "return_type": "void"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "test_process_array",
          "parameters": [
            {
              "name": "arr",
              "type": "int *",
              "value": null
            },
            {
              "name": "size",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "void"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "test_processor_job_processing",
          "parameters": [],
          "return_type": "void"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "test_processor_utility_macros",
          "parameters": [],
          "return_type": "void"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "test_stringify_macro",
          "parameters": [],
          "return_type": "void"
        }
      ],
      "globals": [
        {
          "name": "Process_Cfg_Process_acpfct",
          "type": "Process_Cfg_Process_acpfct_t",
          "value": null
        },
        {
          "name": "global_math_ops",
          "type": "math_operation_t[10]",
          "value": null
        }
      ],
      "include_relations": [
        {
          "depth": 1,
          "included_file": "complex.h",
          "source_file": "complex.c"
        }
      ],
      "includes": [
        "complex.h",
        "stdio.h",
        "stdlib.h",
        "string.h"
      ],
      "macros": [],
      "name": "complex.c",
      "structs": {},
      "unions": {}
    },
    "complex.h": {
      "aliases": {
        "Process_Cfg_Process_acpfct_t": {
          "name": "Process_Cfg_Process_acpfct_t",
          "original_type": "Process_Cfg_Process_fct Process_Cfg_Process_acpfct_t[PROCESSOR_CFG_MODULE_COUNT]",
          "uses": [
            "Process_Cfg_Process_fct"
          ]
        },
        "Process_Cfg_Process_fct": {
          "name": "Process_Cfg_Process_fct",
          "original_type": "Std_ReturnType(* Process_Cfg_Process_fct)(const Process_T * job_pst)",
          "uses": [
            "Process_T",
            "Std_ReturnType"
          ]
        },
        "Std_ReturnType": {
          "name": "Std_ReturnType",
          "original_type": "int",
          "uses": []
        },
        "callback_with_anon_struct_t": {
          "name": "callback_with_anon_struct_t",
          "original_type": "void(* callback_with_anon_struct_t)(\n int id , \n struct { \n int config_flags ; \n char config_name [ 64 ] ; \n union { \n int int_config ; \n float float_config ; \n } config_value ; \n } * config_param , \n void * user_data \n)",
          "uses": [
            "config_param",
            "config_value"
          ]
        },
        "complex_callback_t": {
          "name": "complex_callback_t",
          "original_type": "int(* complex_callback_t)(\n int param1 , \n char * param2 , \n void * param3 , \n struct { \n int nested1 ; \n char * nested2 ; \n void(* nested_func)(int); \n } * param4 \n)",
          "uses": [
            "param4"
          ]
        },
        "complex_func_ptr_t": {
          "name": "complex_func_ptr_t",
          "original_type": "int ( * ( * complex_func_ptr_t ) ( int , char * ) ) ( double , void * )",
          "uses": []
        },
        "data_processor_array_t": {
          "name": "data_processor_array_t",
          "original_type": "data_processor_t *",
          "uses": [
            "data_processor_t"
          ]
        },
        "data_processor_t": {
          "name": "data_processor_t",
          "original_type": "int(* data_processor_t)(data_item_t * item , void * context)",
          "uses": [
            "data_item_t"
          ]
        },
        "debug_callback_t": {
          "name": "debug_callback_t",
          "original_type": "void(* debug_callback_t)(const char * message , int level)",
          "uses": []
        },
        "handler_table_t": {
          "name": "handler_table_t",
          "original_type": "handler_entry_t handler_table_t[8]",
          "uses": [
            "handler_entry_t"
          ]
        },
        "math_operation_t": {
          "name": "math_operation_t",
          "original_type": "int(* math_operation_t)(int , int)",
          "uses": []
        },
        "math_ops_array_t": {
          "name": "math_ops_array_t",
          "original_type": "math_operation_t math_ops_array_t[10]",
          "uses": [
            "math_operation_t"
          ]
        },
        "release_callback_t": {
          "name": "release_callback_t",
          "original_type": "void(* release_callback_t)(const char * message)",
          "uses": []
        },
        "uint16": {
          "name": "uint16",
          "original_type": "uint16_t",
          "uses": []
        },
        "uint32": {
          "name": "uint32",
          "original_type": "uint32_t",
          "uses": []
        },
        "uint8": {
          "name": "uint8",
          "original_type": "uint8_t",
          "uses": []
        }
      },
      "anonymous_relationships": {
        "__anonymous_struct__": [
          "__anonymous_struct___level3_union"
        ],
        "array_of_anon_structs_t": [
          "array_of_anon_structs_t_items"
        ],
        "callback_with_anon_struct_t": [
          "callback_with_anon_struct_t_anonymous_struct_1",
          "callback_with_anon_struct_t_anonymous_struct_1",
          "callback_with_anon_struct_t_anonymous_struct_1",
          "callback_with_anon_struct_t_anonymous_union_2",
          "callback_with_anon_struct_t_anonymous_union_2",
          "callback_with_anon_struct_t_anonymous_union_2"
        ],
        "callback_with_anon_struct_t_anonymous_struct_1": [
          "callback_with_anon_struct_t_anonymous_struct_1_anonymous_union_1",
          "callback_with_anon_struct_t_anonymous_struct_1_anonymous_union_1",
          "callback_with_anon_struct_t_anonymous_struct_1_anonymous_union_1"
        ],
        "complex_callback_t": [
          "complex_callback_t_anonymous_struct_1",
          "complex_callback_t_anonymous_struct_1",
          "complex_callback_t_anonymous_struct_1"
        ],
        "complex_handler_t": [
          "complex_handler_t_memory_manager",
          "complex_handler_t_validator"
        ],
        "complex_naming_test_t": [
          "complex_naming_test_t_first_struct",
          "complex_naming_test_t_mixed_union",
          "complex_naming_test_t_second_struct",
          "complex_naming_test_t_third_struct"
        ],
        "complex_naming_test_t_first_struct": [
          "complex_naming_test_t_first_struct_anonymous_struct_1",
          "complex_naming_test_t_first_struct_anonymous_struct_1"
        ],
        "complex_naming_test_t_mixed_union": [
          "complex_naming_test_t_mixed_union_anonymous_struct_1"
        ],
        "complex_naming_test_t_third_struct": [
          "complex_naming_test_t_third_struct_anonymous_struct_1"
        ],
        "config_param": [
          "config_param_config_value"
        ],
        "data_union": [
          "data_union_point_value"
        ],
        "extreme_nesting_test_t": [
          "extreme_nesting_test_t_level2_struct_1",
          "extreme_nesting_test_t_level2_struct_2"
        ],
        "extreme_nesting_test_t_level2_struct_1": [
          "extreme_nesting_test_t_level2_struct_1_anonymous_struct_1",
          "extreme_nesting_test_t_level2_struct_1_anonymous_struct_1"
        ],
        "extreme_nesting_test_t_level2_struct_2": [
          "extreme_nesting_test_t_level2_struct_2_anonymous_struct_1"
        ],
        "item_value": [
          "item_value_point_data"
        ],
        "mixed_union": [
          "mixed_union_mixed_struct"
        ],
        "moderately_nested_t": [
          "moderately_nested_t_level2_struct"
        ],
        "multi_anonymous_t": [
          "multi_anonymous_t_first_anon_struct",
          "multi_anonymous_t_first_anon_union",
          "multi_anonymous_t_second_anon_struct"
        ],
        "multiple_simple_anonymous_t": [
          "multiple_simple_anonymous_t_first_anon",
          "multiple_simple_anonymous_t_first_union",
          "multiple_simple_anonymous_t_second_anon",
          "multiple_simple_anonymous_t_second_union",
          "multiple_simple_anonymous_t_third_anon"
        ],
        "result_generator_t": [
          "result_generator_t_result_data"
        ],
        "struct_union": [
          "struct_union_struct_union_struct"
        ],
        "struct_with_struct_t": [
          "struct_with_struct_t_inner_struct"
        ],
        "struct_with_union_t": [
          "struct_with_union_t_data_union"
        ],
        "union_with_struct_t": [
          "union_with_struct_t_complex_struct"
        ],
        "union_with_union_t": [
          "union_with_union_t_nested_union"
        ]
      },
      "enums": {
        "operation_type_t": {
          "name": "operation_type_t",
          "tag_name": "",
          "values": [
            {
              "name": "OP_ADD",
              "value": "0"
            },
            {
              "name": "OP_SUB",
              "value": "1"
            },
            {
              "name": "OP_MUL",
              "value": "2"
            },
            {
              "name": "OP_DIV",
              "value": "3"
            }
          ]
        },
        "processor_module_enum_t": {
          "name": "processor_module_enum_t",
          "tag_name": "",
          "values": [
            {
              "name": "PROCESSOR_CFG_MODULE_COUNT",
              "value": "3"
            },
            {
              "name": "PROCESSOR_CFG_MODULE_ADAPTER",
              "value": "0"
            },
            {
              "name": "PROCESSOR_CFG_MODULE_SERVICE",
              "value": "1"
            },
            {
              "name": "PROCESSOR_CFG_MODULE_HARDWARE",
              "value": "2"
            }
          ]
        }
      },
      "file_path": "/workspace/tests/example/source/complex.h",
      "functions": [
        {
          "is_declaration": true,
          "is_static": false,
          "name": "create_complex_handler",
          "parameters": [
            {
              "name": "name",
              "type": "const char *",
              "value": null
            },
            {
              "name": "validate_func",
              "type": "int ( * validate_func ) ( const char * )",
              "value": null
            },
            {
              "name": "alloc_func",
              "type": "void * ( * alloc_func ) ( size_t )",
              "value": null
            },
            {
              "name": "free_func",
              "type": "void ( * free_func ) ( void * )",
              "value": null
            }
          ],
          "return_type": "complex_handler_t *"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "create_handler",
          "parameters": [
            {
              "name": "name",
              "type": "const char *",
              "value": null
            },
            {
              "name": "init_func",
              "type": "int ( * init_func ) ( void * )",
              "value": null
            },
            {
              "name": "cleanup_func",
              "type": "void ( * cleanup_func ) ( void * )",
              "value": null
            },
            {
              "name": "callback",
              "type": "complex_callback_t",
              "value": null
            }
          ],
          "return_type": "void *"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "execute_operations",
          "parameters": [
            {
              "name": "value",
              "type": "int",
              "value": null
            },
            {
              "name": "ops",
              "type": "math_ops_array_t",
              "value": null
            },
            {
              "name": "op_count",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "get_math_operations",
          "parameters": [],
          "return_type": "math_operation_t *"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "process_with_callbacks",
          "parameters": [
            {
              "name": "data",
              "type": "int[]",
              "value": null
            },
            {
              "name": "size",
              "type": "int",
              "value": null
            },
            {
              "name": "operations",
              "type": "math_operation_t[]",
              "value": null
            },
            {
              "name": "op_count",
              "type": "int",
              "value": null
            },
            {
              "name": "pre_process",
              "type": "void ( * pre_process ) ( int * , int )",
              "value": null
            },
            {
              "name": "post_process",
              "type": "void ( * post_process ) ( int * , int )",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "test_processor_job_processing",
          "parameters": [],
          "return_type": "void"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "test_processor_utility_macros",
          "parameters": [],
          "return_type": "void"
        }
      ],
      "globals": [],
      "include_relations": [],
      "includes": [
        "stdbool.h",
        "stddef.h",
        "stdint.h"
      ],
      "macros": [
        "COMPLEX_H",
        "COMPLEX_MACRO_FUNC(x, y, z)",
        "CREATE_FUNC_NAME(prefix, suffix)",
        "DEPRECATED",
        "HANDLE_OPERATION(op_type, data, size, callback)",
        "PROCESS_ARRAY(arr, size, callback)",
        "STRINGIFY(x)",
        "TOSTRING(x)",
        "UTILS_U16_TO_U8ARR_BIG_ENDIAN(value_u16, ptr_pau8)",
        "UTILS_U32_TO_U8ARR_BIG_ENDIAN(value_u32, ptr_pau8)",
        "UTILS_U8ARR_TO_U16_BIG_ENDIAN(ptr_pau8)",
        "UTILS_U8ARR_TO_U32_BIG_ENDIAN(ptr_pau8)"
      ],
      "name": "complex.h",
      "structs": {
        "Process_T": {
          "fields": [
            {
              "name": "job_id",
              "type": "int",
              "value": null
            },
            {
              "name": "job_data",
              "type": "char *",
              "value": null
            },
            {
              "name": "data_size",
              "type": "size_t",
              "value": null
            },
            {
              "name": "priority",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "Process_T",
          "tag_name": "",
          "uses": []
        },
        "__anonymous_struct__": {
          "fields": [
            {
              "name": "level2_id",
              "type": "int",
              "value": null
            },
            {
              "name": "level3_union",
              "type": "__anonymous_struct___level3_union",
              "value": null
            }
          ],
          "methods": [],
          "name": "__anonymous_struct__",
          "tag_name": "",
          "uses": [
            "__anonymous_struct___level3_union"
          ]
        },
        "array_of_anon_structs_t": {
          "fields": [
            {
              "name": "count",
              "type": "int",
              "value": null
            },
            {
              "name": "items",
              "type": "array_of_anon_structs_t_items",
              "value": null
            }
          ],
          "methods": [],
          "name": "array_of_anon_structs_t",
          "tag_name": "",
          "uses": [
            "array_of_anon_structs_t_items"
          ]
        },
        "array_of_anon_structs_t_items": {
          "fields": [
            {
              "name": "int_data",
              "type": "int",
              "value": null
            },
            {
              "name": "float_data",
              "type": "float",
              "value": null
            },
            {
              "name": "x",
              "type": "struct { int",
              "value": null
            },
            {
              "name": "ypoint_data",
              "type": "struct { int",
              "value": null
            }
          ],
          "methods": [],
          "name": "array_of_anon_structs_t_items",
          "tag_name": "",
          "uses": []
        },
        "callback_with_anon_struct_t_anonymous_struct_1": {
          "fields": [
            {
              "name": "config_flags",
              "type": "int",
              "value": null
            },
            {
              "name": "config_name",
              "type": "char[64]",
              "value": null
            },
            {
              "name": "config_value",
              "type": "callback_with_anon_struct_t_anonymous_struct_1_anonymous_union_1",
              "value": null
            }
          ],
          "methods": [],
          "name": "callback_with_anon_struct_t_anonymous_struct_1",
          "tag_name": "",
          "uses": [
            "callback_with_anon_struct_t_anonymous_struct_1_anonymous_union_1"
          ]
        },
        "complex_callback_t_anonymous_struct_1": {
          "fields": [
            {
              "name": "nested1",
              "type": "int",
              "value": null
            },
            {
              "name": "nested2",
              "type": "char *",
              "value": null
            },
            {
              "name": "nested_func",
              "type": "void(* nested_func)(int)",
              "value": null
            }
          ],
          "methods": [],
          "name": "complex_callback_t_anonymous_struct_1",
          "tag_name": "",
          "uses": []
        },
        "complex_handler_t": {
          "fields": [
            {
              "name": "id",
              "type": "int",
              "value": null
            },
            {
              "name": "validator",
              "type": "complex_handler_t_validator",
              "value": null
            },
            {
              "name": "memory_manager",
              "type": "complex_handler_t_memory_manager",
              "value": null
            }
          ],
          "methods": [],
          "name": "complex_handler_t",
          "tag_name": "",
          "uses": [
            "complex_handler_t_memory_manager",
            "complex_handler_t_validator"
          ]
        },
        "complex_handler_t_memory_manager": {
          "fields": [
            {
              "name": "max_size",
              "type": "int",
              "value": null
            },
            {
              "name": "alloc_func",
              "type": "void * ( * alloc_func ) ( size_t )",
              "value": null
            },
            {
              "name": "free_func",
              "type": "void ( * free_func ) ( void * )",
              "value": null
            },
            {
              "name": "resize_func",
              "type": "int ( * resize_func ) ( void * *, size_t )",
              "value": null
            }
          ],
          "methods": [],
          "name": "complex_handler_t_memory_manager",
          "tag_name": "",
          "uses": []
        },
        "complex_handler_t_validator": {
          "fields": [
            {
              "name": "name",
              "type": "char[32]",
              "value": null
            },
            {
              "name": "validate_func",
              "type": "int ( * validate_func ) ( const char * )",
              "value": null
            },
            {
              "name": "format_func",
              "type": "void ( * format_func ) ( char *, int )",
              "value": null
            }
          ],
          "methods": [],
          "name": "complex_handler_t_validator",
          "tag_name": "",
          "uses": []
        },
        "complex_naming_test_t": {
          "fields": [
            {
              "name": "first_struct",
              "type": "complex_naming_test_t_first_struct",
              "value": null
            },
            {
              "name": "second_struct",
              "type": "complex_naming_test_t_second_struct",
              "value": null
            },
            {
              "name": "mixed_union",
              "type": "complex_naming_test_t_mixed_union",
              "value": null
            },
            {
              "name": "third_struct",
              "type": "complex_naming_test_t_third_struct",
              "value": null
            }
          ],
          "methods": [],
          "name": "complex_naming_test_t",
          "tag_name": "",
          "uses": [
            "complex_naming_test_t_first_struct",
            "complex_naming_test_t_mixed_union",
            "complex_naming_test_t_second_struct",
            "complex_naming_test_t_third_struct"
          ]
        },
        "complex_naming_test_t_first_struct": {
          "fields": [
            {
              "name": "nested_a1",
              "type": "int",
              "value": null
            },
            {
              "name": "deep_struct_a1",
              "type": "complex_naming_test_t_first_struct_anonymous_struct_1",
              "value": null
            },
            {
              "name": "deep_struct_a2",
              "type": "complex_naming_test_t_first_struct_anonymous_struct_1",
              "value": null
            },
            {
              "name": "nested_a2",
              "type": "} nested_struct_a; struct { int",
              "value": null
            }
          ],
          "methods": [],
          "name": "complex_naming_test_t_first_struct",
          "tag_name": "",
          "uses": [
            "complex_naming_test_t_first_struct_anonymous_struct_1"
          ]
        },
        "complex_naming_test_t_first_struct_anonymous_struct_1": {
          "fields": [
            {
              "name": "deep_a2",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "complex_naming_test_t_first_struct_anonymous_struct_1",
          "tag_name": "",
          "uses": []
        },
        "complex_naming_test_t_mixed_union_anonymous_struct_1": {
          "fields": [
            {
              "name": "deep_union_struct",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "complex_naming_test_t_mixed_union_anonymous_struct_1",
          "tag_name": "",
          "uses": []
        },
        "complex_naming_test_t_second_struct": {
          "fields": [
            {
              "name": "nested_b1",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "complex_naming_test_t_second_struct",
          "tag_name": "",
          "uses": []
        },
        "complex_naming_test_t_third_struct": {
          "fields": [
            {
              "name": "struct_union_int",
              "type": "int",
              "value": null
            },
            {
              "name": "struct_union_struct",
              "type": "complex_naming_test_t_third_struct_anonymous_struct_1",
              "value": null
            }
          ],
          "methods": [],
          "name": "complex_naming_test_t_third_struct",
          "tag_name": "",
          "uses": [
            "complex_naming_test_t_third_struct_anonymous_struct_1"
          ]
        },
        "complex_naming_test_t_third_struct_anonymous_struct_1": {
          "fields": [
            {
              "name": "struct_union_struct_field",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "complex_naming_test_t_third_struct_anonymous_struct_1",
          "tag_name": "",
          "uses": []
        },
        "config_param": {
          "fields": [
            {
              "name": "config_flags",
              "type": "int",
              "value": null
            },
            {
              "name": "config_name",
              "type": "char[64]",
              "value": null
            },
            {
              "name": "config_value",
              "type": "config_param_config_value",
              "value": null
            }
          ],
          "methods": [],
          "name": "config_param",
          "tag_name": "",
          "uses": [
            "config_param_config_value"
          ]
        },
        "data_item_t": {
          "fields": [
            {
              "name": "value",
              "type": "int",
              "value": null
            },
            {
              "name": "name",
              "type": "char *",
              "value": null
            }
          ],
          "methods": [],
          "name": "data_item_t",
          "tag_name": "",
          "uses": []
        },
        "data_union_point_value": {
          "fields": [
            {
              "name": "x",
              "type": "int",
              "value": null
            },
            {
              "name": "y",
              "type": "int",
              "value": null
            },
            {
              "name": "z",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "data_union_point_value",
          "tag_name": "",
          "uses": []
        },
        "extreme_nesting_test_t": {
          "fields": [
            {
              "name": "level2_struct_1",
              "type": "extreme_nesting_test_t_level2_struct_1",
              "value": null
            },
            {
              "name": "level2_struct_2",
              "type": "extreme_nesting_test_t_level2_struct_2",
              "value": null
            }
          ],
          "methods": [],
          "name": "extreme_nesting_test_t",
          "tag_name": "",
          "uses": [
            "extreme_nesting_test_t_level2_struct_1",
            "extreme_nesting_test_t_level2_struct_2"
          ]
        },
        "extreme_nesting_test_t_level2_struct_1": {
          "fields": [
            {
              "name": "level4_struct_1",
              "type": "extreme_nesting_test_t_level2_struct_1_anonymous_struct_1",
              "value": null
            },
            {
              "name": "level4_struct_2",
              "type": "extreme_nesting_test_t_level2_struct_1_anonymous_struct_1",
              "value": null
            },
            {
              "name": "level3_field",
              "type": "} level3_struct_1; struct { int",
              "value": null
            }
          ],
          "methods": [],
          "name": "extreme_nesting_test_t_level2_struct_1",
          "tag_name": "",
          "uses": [
            "extreme_nesting_test_t_level2_struct_1_anonymous_struct_1"
          ]
        },
        "extreme_nesting_test_t_level2_struct_1_anonymous_struct_1": {
          "fields": [
            {
              "name": "level4_field2",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "extreme_nesting_test_t_level2_struct_1_anonymous_struct_1",
          "tag_name": "",
          "uses": []
        },
        "extreme_nesting_test_t_level2_struct_2": {
          "fields": [
            {
              "name": "mixed_struct",
              "type": "extreme_nesting_test_t_level2_struct_2_anonymous_struct_1",
              "value": null
            }
          ],
          "methods": [],
          "name": "extreme_nesting_test_t_level2_struct_2",
          "tag_name": "",
          "uses": [
            "extreme_nesting_test_t_level2_struct_2_anonymous_struct_1"
          ]
        },
        "extreme_nesting_test_t_level2_struct_2_anonymous_struct_1": {
          "fields": [
            {
              "name": "mixed_field",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "extreme_nesting_test_t_level2_struct_2_anonymous_struct_1",
          "tag_name": "",
          "uses": []
        },
        "handler_entry_t": {
          "fields": [
            {
              "name": "id",
              "type": "int",
              "value": null
            },
            {
              "name": "name",
              "type": "char[16]",
              "value": null
            },
            {
              "name": "init_func",
              "type": "void ( * ) ( void )",
              "value": null
            },
            {
              "name": "process_func",
              "type": "int ( * ) ( int , int )",
              "value": null
            },
            {
              "name": "cleanup_func",
              "type": "void ( * ) ( void )",
              "value": null
            }
          ],
          "methods": [],
          "name": "handler_entry_t",
          "tag_name": "",
          "uses": []
        },
        "item_value_point_data": {
          "fields": [
            {
              "name": "x",
              "type": "int",
              "value": null
            },
            {
              "name": "y",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "item_value_point_data",
          "tag_name": "",
          "uses": []
        },
        "mixed_union_mixed_struct": {
          "fields": [
            {
              "name": "mixed_field",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "mixed_union_mixed_struct",
          "tag_name": "",
          "uses": []
        },
        "moderately_nested_t": {
          "fields": [
            {
              "name": "level1_id",
              "type": "int",
              "value": null
            },
            {
              "name": "level2_struct",
              "type": "moderately_nested_t_level2_struct",
              "value": null
            }
          ],
          "methods": [],
          "name": "moderately_nested_t",
          "tag_name": "",
          "uses": [
            "moderately_nested_t_level2_struct"
          ]
        },
        "moderately_nested_t_level2_struct": {
          "fields": [
            {
              "name": "level3_int",
              "type": "int",
              "value": null
            },
            {
              "name": "level3_float",
              "type": "float",
              "value": null
            }
          ],
          "methods": [],
          "name": "moderately_nested_t_level2_struct",
          "tag_name": "",
          "uses": []
        },
        "multi_anonymous_t": {
          "fields": [
            {
              "name": "first_anon_struct",
              "type": "multi_anonymous_t_first_anon_struct",
              "value": null
            },
            {
              "name": "first_anon_union",
              "type": "multi_anonymous_t_first_anon_union",
              "value": null
            },
            {
              "name": "second_anon_struct",
              "type": "multi_anonymous_t_second_anon_struct",
              "value": null
            }
          ],
          "methods": [],
          "name": "multi_anonymous_t",
          "tag_name": "",
          "uses": [
            "multi_anonymous_t_first_anon_struct",
            "multi_anonymous_t_first_anon_union",
            "multi_anonymous_t_second_anon_struct"
          ]
        },
        "multi_anonymous_t_first_anon_struct": {
          "fields": [
            {
              "name": "first_x",
              "type": "int",
              "value": null
            },
            {
              "name": "first_y",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "multi_anonymous_t_first_anon_struct",
          "tag_name": "",
          "uses": []
        },
        "multi_anonymous_t_second_anon_struct": {
          "fields": [
            {
              "name": "deep_value",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "multi_anonymous_t_second_anon_struct",
          "tag_name": "",
          "uses": []
        },
        "multiple_simple_anonymous_t": {
          "fields": [
            {
              "name": "first_anon",
              "type": "multiple_simple_anonymous_t_first_anon",
              "value": null
            },
            {
              "name": "second_anon",
              "type": "multiple_simple_anonymous_t_second_anon",
              "value": null
            },
            {
              "name": "third_anon",
              "type": "multiple_simple_anonymous_t_third_anon",
              "value": null
            },
            {
              "name": "first_union",
              "type": "multiple_simple_anonymous_t_first_union",
              "value": null
            },
            {
              "name": "second_union",
              "type": "multiple_simple_anonymous_t_second_union",
              "value": null
            }
          ],
          "methods": [],
          "name": "multiple_simple_anonymous_t",
          "tag_name": "",
          "uses": [
            "multiple_simple_anonymous_t_first_anon",
            "multiple_simple_anonymous_t_first_union",
            "multiple_simple_anonymous_t_second_anon",
            "multiple_simple_anonymous_t_second_union",
            "multiple_simple_anonymous_t_third_anon"
          ]
        },
        "multiple_simple_anonymous_t_first_anon": {
          "fields": [
            {
              "name": "first_field",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "multiple_simple_anonymous_t_first_anon",
          "tag_name": "",
          "uses": []
        },
        "multiple_simple_anonymous_t_second_anon": {
          "fields": [
            {
              "name": "second_field",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "multiple_simple_anonymous_t_second_anon",
          "tag_name": "",
          "uses": []
        },
        "multiple_simple_anonymous_t_third_anon": {
          "fields": [
            {
              "name": "third_field",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "multiple_simple_anonymous_t_third_anon",
          "tag_name": "",
          "uses": []
        },
        "operation_set_t": {
          "fields": [
            {
              "name": "count",
              "type": "int",
              "value": null
            },
            {
              "name": "operations",
              "type": "math_operation_t[5]",
              "value": null
            },
            {
              "name": "callbacks",
              "type": "void(* callbacks[3])(int , char *)",
              "value": null
            }
          ],
          "methods": [],
          "name": "operation_set_t",
          "tag_name": "",
          "uses": [
            "math_operation_t"
          ]
        },
        "param4": {
          "fields": [
            {
              "name": "nested1",
              "type": "int",
              "value": null
            },
            {
              "name": "nested2",
              "type": "char *",
              "value": null
            },
            {
              "name": "nested_func",
              "type": "void ( * ) ( int )",
              "value": null
            }
          ],
          "methods": [],
          "name": "param4",
          "tag_name": "",
          "uses": []
        },
        "processor_t": {
          "fields": [
            {
              "name": "id",
              "type": "int",
              "value": null
            },
            {
              "name": "name",
              "type": "char[64]",
              "value": null
            },
            {
              "name": "process_func",
              "type": "int ( * ) ( int , char * )",
              "value": null
            },
            {
              "name": "cleanup_func",
              "type": "void ( * ) ( void * )",
              "value": null
            }
          ],
          "methods": [],
          "name": "processor_t",
          "tag_name": "",
          "uses": []
        },
        "result_generator_t": {
          "fields": [
            {
              "name": "result_code",
              "type": "int",
              "value": null
            },
            {
              "name": "result_data",
              "type": "result_generator_t_result_data",
              "value": null
            }
          ],
          "methods": [],
          "name": "result_generator_t",
          "tag_name": "",
          "uses": [
            "result_generator_t_result_data"
          ]
        },
        "simplified_handler_t": {
          "fields": [
            {
              "name": "event_count",
              "type": "int",
              "value": null
            },
            {
              "name": "event_name",
              "type": "char[32]",
              "value": null
            },
            {
              "name": "event_flags",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "simplified_handler_t",
          "tag_name": "",
          "uses": []
        },
        "struct_union_struct_union_struct": {
          "fields": [
            {
              "name": "struct_union_struct_field",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "struct_union_struct_union_struct",
          "tag_name": "",
          "uses": []
        },
        "struct_with_struct_t": {
          "fields": [
            {
              "name": "outer_id",
              "type": "int",
              "value": null
            },
            {
              "name": "outer_name",
              "type": "char[32]",
              "value": null
            },
            {
              "name": "inner_struct",
              "type": "struct_with_struct_t_inner_struct",
              "value": null
            },
            {
              "name": "outer_flags",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "struct_with_struct_t",
          "tag_name": "",
          "uses": [
            "struct_with_struct_t_inner_struct"
          ]
        },
        "struct_with_struct_t_inner_struct": {
          "fields": [
            {
              "name": "inner_x",
              "type": "int",
              "value": null
            },
            {
              "name": "inner_y",
              "type": "int",
              "value": null
            },
            {
              "name": "inner_label",
              "type": "char[16]",
              "value": null
            }
          ],
          "methods": [],
          "name": "struct_with_struct_t_inner_struct",
          "tag_name": "",
          "uses": []
        },
        "struct_with_union_t": {
          "fields": [
            {
              "name": "type_id",
              "type": "int",
              "value": null
            },
            {
              "name": "data_union",
              "type": "struct_with_union_t_data_union",
              "value": null
            },
            {
              "name": "checksum",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "struct_with_union_t",
          "tag_name": "",
          "uses": [
            "struct_with_union_t_data_union"
          ]
        },
        "union_with_struct_t_complex_struct": {
          "fields": [
            {
              "name": "error_code",
              "type": "int",
              "value": null
            },
            {
              "name": "error_msg",
              "type": "char[128]",
              "value": null
            }
          ],
          "methods": [],
          "name": "union_with_struct_t_complex_struct",
          "tag_name": "",
          "uses": []
        }
      },
      "unions": {
        "__anonymous_struct___level3_union": {
          "fields": [
            {
              "name": "level3_int",
              "type": "int",
              "value": null
            },
            {
              "name": "level3_float",
              "type": "float",
              "value": null
            }
          ],
          "name": "__anonymous_struct___level3_union",
          "tag_name": "",
          "uses": []
        },
        "callback_with_anon_struct_t_anonymous_struct_1_anonymous_union_1": {
          "fields": [
            {
              "name": "int_config",
              "type": "int",
              "value": null
            },
            {
              "name": "float_config",
              "type": "float",
              "value": null
            }
          ],
          "name": "callback_with_anon_struct_t_anonymous_struct_1_anonymous_union_1",
          "tag_name": "",
          "uses": []
        },
        "callback_with_anon_struct_t_anonymous_union_2": {
          "fields": [
            {
              "name": "int_config",
              "type": "int",
              "value": null
            },
            {
              "name": "float_config",
              "type": "float",
              "value": null
            }
          ],
          "name": "callback_with_anon_struct_t_anonymous_union_2",
          "tag_name": "",
          "uses": []
        },
        "complex_naming_test_t_mixed_union": {
          "fields": [
            {
              "name": "union_struct_field",
              "type": "int",
              "value": null
            },
            {
              "name": "deep_in_union",
              "type": "complex_naming_test_t_mixed_union_anonymous_struct_1",
              "value": null
            }
          ],
          "name": "complex_naming_test_t_mixed_union",
          "tag_name": "",
          "uses": [
            "complex_naming_test_t_mixed_union_anonymous_struct_1"
          ]
        },
        "config_param_config_value": {
          "fields": [
            {
              "name": "int_config",
              "type": "int",
              "value": null
            },
            {
              "name": "float_config",
              "type": "float",
              "value": null
            }
          ],
          "name": "config_param_config_value",
          "tag_name": "",
          "uses": []
        },
        "config_value": {
          "fields": [
            {
              "name": "int_config",
              "type": "int",
              "value": null
            },
            {
              "name": "float_config",
              "type": "float",
              "value": null
            }
          ],
          "name": "config_value",
          "tag_name": "",
          "uses": []
        },
        "data_union": {
          "fields": [
            {
              "name": "int_value",
              "type": "int",
              "value": null
            },
            {
              "name": "float_value",
              "type": "float",
              "value": null
            },
            {
              "name": "string_value",
              "type": "char[64]",
              "value": null
            },
            {
              "name": "point_value",
              "type": "data_union_point_value",
              "value": null
            }
          ],
          "name": "data_union",
          "tag_name": "",
          "uses": [
            "data_union_point_value"
          ]
        },
        "first_anon_union": {
          "fields": [
            {
              "name": "union_int",
              "type": "int",
              "value": null
            },
            {
              "name": "union_float",
              "type": "float",
              "value": null
            }
          ],
          "name": "first_anon_union",
          "tag_name": "",
          "uses": []
        },
        "first_union": {
          "fields": [
            {
              "name": "union_field1",
              "type": "int",
              "value": null
            }
          ],
          "name": "first_union",
          "tag_name": "",
          "uses": []
        },
        "item_value": {
          "fields": [
            {
              "name": "int_data",
              "type": "int",
              "value": null
            },
            {
              "name": "float_data",
              "type": "float",
              "value": null
            },
            {
              "name": "point_data",
              "type": "item_value_point_data",
              "value": null
            }
          ],
          "name": "item_value",
          "tag_name": "",
          "uses": [
            "item_value_point_data"
          ]
        },
        "level3_union": {
          "fields": [
            {
              "name": "level3_int",
              "type": "int",
              "value": null
            },
            {
              "name": "level3_float",
              "type": "float",
              "value": null
            }
          ],
          "name": "level3_union",
          "tag_name": "",
          "uses": []
        },
        "mixed_union": {
          "fields": [
            {
              "name": "mixed_struct",
              "type": "mixed_union_mixed_struct",
              "value": null
            }
          ],
          "name": "mixed_union",
          "tag_name": "",
          "uses": [
            "mixed_union_mixed_struct"
          ]
        },
        "mixed_union_t": {
          "fields": [
            {
              "name": "int_val",
              "type": "int",
              "value": null
            },
            {
              "name": "str_val",
              "type": "char *",
              "value": null
            },
            {
              "name": "void_func",
              "type": "void ( * ) ( void )",
              "value": null
            },
            {
              "name": "int_func",
              "type": "int ( * ) ( int )",
              "value": null
            }
          ],
          "name": "mixed_union_t",
          "tag_name": "",
          "uses": []
        },
        "multi_anonymous_t_first_anon_union": {
          "fields": [
            {
              "name": "union_int",
              "type": "int",
              "value": null
            },
            {
              "name": "union_float",
              "type": "float",
              "value": null
            }
          ],
          "name": "multi_anonymous_t_first_anon_union",
          "tag_name": "",
          "uses": []
        },
        "multiple_simple_anonymous_t_first_union": {
          "fields": [
            {
              "name": "union_field1",
              "type": "int",
              "value": null
            }
          ],
          "name": "multiple_simple_anonymous_t_first_union",
          "tag_name": "",
          "uses": []
        },
        "multiple_simple_anonymous_t_second_union": {
          "fields": [
            {
              "name": "union_field2",
              "type": "int",
              "value": null
            }
          ],
          "name": "multiple_simple_anonymous_t_second_union",
          "tag_name": "",
          "uses": []
        },
        "result_data": {
          "fields": [
            {
              "name": "success_value",
              "type": "int",
              "value": null
            },
            {
              "name": "error_message",
              "type": "char[128]",
              "value": null
            }
          ],
          "name": "result_data",
          "tag_name": "",
          "uses": []
        },
        "result_generator_t_result_data": {
          "fields": [
            {
              "name": "success_value",
              "type": "int",
              "value": null
            },
            {
              "name": "error_message",
              "type": "char[128]",
              "value": null
            }
          ],
          "name": "result_generator_t_result_data",
          "tag_name": "",
          "uses": []
        },
        "second_union": {
          "fields": [
            {
              "name": "union_field2",
              "type": "int",
              "value": null
            }
          ],
          "name": "second_union",
          "tag_name": "",
          "uses": []
        },
        "struct_union": {
          "fields": [
            {
              "name": "struct_union_int",
              "type": "int",
              "value": null
            },
            {
              "name": "struct_union_struct",
              "type": "struct_union_struct_union_struct",
              "value": null
            }
          ],
          "name": "struct_union",
          "tag_name": "",
          "uses": [
            "struct_union_struct_union_struct"
          ]
        },
        "struct_with_union_t_data_union": {
          "fields": [
            {
              "name": "x",
              "type": "int",
              "value": null
            },
            {
              "name": "y",
              "type": "int",
              "value": null
            },
            {
              "name": "z",
              "type": "int",
              "value": null
            }
          ],
          "name": "struct_with_union_t_data_union",
          "tag_name": "",
          "uses": []
        },
        "union_with_struct_t": {
          "fields": [
            {
              "name": "simple_int",
              "type": "int",
              "value": null
            },
            {
              "name": "simple_float",
              "type": "float",
              "value": null
            },
            {
              "name": "complex_struct",
              "type": "union_with_struct_t_complex_struct",
              "value": null
            },
            {
              "name": "raw_bytes",
              "type": "char[256]",
              "value": null
            }
          ],
          "name": "union_with_struct_t",
          "tag_name": "",
          "uses": [
            "union_with_struct_t_complex_struct"
          ]
        },
        "union_with_union_t": {
          "fields": [
            {
              "name": "primary_int",
              "type": "int",
              "value": null
            },
            {
              "name": "nested_union",
              "type": "union_with_union_t_nested_union",
              "value": null
            },
            {
              "name": "primary_bytes",
              "type": "char[32]",
              "value": null
            }
          ],
          "name": "union_with_union_t",
          "tag_name": "",
          "uses": [
            "union_with_union_t_nested_union"
          ]
        },
        "union_with_union_t_nested_union": {
          "fields": [
            {
              "name": "deep_char",
              "type": "char",
              "value": null
            },
            {
              "name": "deep_short",
              "type": "short",
              "value": null
            }
          ],
          "name": "union_with_union_t_nested_union",
          "tag_name": "",
          "uses": []
        }
      }
    },
    "complex_example.h": {
      "aliases": {},
      "anonymous_relationships": {},
      "enums": {
        "CE_Status_t": {
          "name": "CE_Status_t",
          "tag_name": "",
          "values": [
            {
              "name": "CE_STATUS_OK",
              "value": "0"
            },
            {
              "name": "CE_STATUS_WARN",
              "value": null
            },
            {
              "name": "CE_STATUS_FAIL",
              "value": null
            }
          ]
        }
      },
      "file_path": "/workspace/tests/example/source/complex_example.h",
      "functions": [],
      "globals": [],
      "include_relations": [],
      "includes": [
        "config.h",
        "logger.h"
      ],
      "macros": [
        "COMPLEX_EXAMPLE_H"
      ],
      "name": "complex_example.h",
      "structs": {
        "ComplexExample_t": {
          "fields": [
            {
              "name": "info",
              "type": "NestedInfo_t",
              "value": null
            },
            {
              "name": "status",
              "type": "CE_Status_t",
              "value": null
            },
            {
              "name": "values",
              "type": "int[5]",
              "value": null
            }
          ],
          "methods": [],
          "name": "ComplexExample_t",
          "tag_name": "ComplexExample_tag",
          "uses": [
            "CE_Status_t",
            "NestedInfo_t"
          ]
        },
        "NestedInfo_t": {
          "fields": [
            {
              "name": "id",
              "type": "id_t",
              "value": null
            },
            {
              "name": "description",
              "type": "char[MAX_LABEL_LEN]",
              "value": null
            },
            {
              "name": "log_level",
              "type": "log_level_t",
              "value": null
            }
          ],
          "methods": [],
          "name": "NestedInfo_t",
          "tag_name": "NestedInfo_tag",
          "uses": [
            "id_t",
            "log_level_t"
          ]
        }
      },
      "unions": {}
    },
    "config.h": {
      "aliases": {
        "id_t": {
          "name": "id_t",
          "original_type": "uint32_t",
          "uses": []
        },
        "status_t": {
          "name": "status_t",
          "original_type": "int32_t",
          "uses": []
        }
      },
      "anonymous_relationships": {},
      "enums": {
        "GlobalStatus": {
          "name": "GlobalStatus",
          "tag_name": "",
          "values": [
            {
              "name": "GS_OK",
              "value": null
            },
            {
              "name": "GS_ERROR",
              "value": null
            },
            {
              "name": "GS_UNKNOWN",
              "value": null
            }
          ]
        }
      },
      "file_path": "/workspace/tests/example/source/config.h",
      "functions": [],
      "globals": [],
      "include_relations": [],
      "includes": [
        "stddef.h",
        "stdint.h"
      ],
      "macros": [
        "CONFIG_H",
        "DEFAULT_BUFFER_SIZE",
        "MAX_LABEL_LEN",
        "PROJECT_NAME"
      ],
      "name": "config.h",
      "structs": {},
      "unions": {}
    },
    "database.c": {
      "aliases": {},
      "anonymous_relationships": {},
      "enums": {},
      "file_path": "/workspace/tests/example/source/database.c",
      "functions": [
        {
          "is_declaration": false,
          "is_static": false,
          "name": "database_begin_transaction",
          "parameters": [
            {
              "name": "config",
              "type": "DatabaseConfig *",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "database_commit_transaction",
          "parameters": [
            {
              "name": "config",
              "type": "DatabaseConfig *",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "database_connect",
          "parameters": [
            {
              "name": "config",
              "type": "DatabaseConfig *",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "database_disconnect",
          "parameters": [
            {
              "name": "config",
              "type": "DatabaseConfig *",
              "value": null
            }
          ],
          "return_type": "void"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "database_execute_query",
          "parameters": [
            {
              "name": "config",
              "type": "DatabaseConfig *",
              "value": null
            },
            {
              "name": "query",
              "type": "const char *",
              "value": null
            }
          ],
          "return_type": "QueryResult *"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "database_execute_update",
          "parameters": [
            {
              "name": "config",
              "type": "DatabaseConfig *",
              "value": null
            },
            {
              "name": "query",
              "type": "const char *",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "database_free_result",
          "parameters": [
            {
              "name": "result",
              "type": "QueryResult *",
              "value": null
            }
          ],
          "return_type": "void"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "database_get_error",
          "parameters": [
            {
              "name": "config",
              "type": "const DatabaseConfig *",
              "value": null
            }
          ],
          "return_type": "const char *"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "database_is_connected",
          "parameters": [
            {
              "name": "config",
              "type": "const DatabaseConfig *",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "database_rollback_transaction",
          "parameters": [
            {
              "name": "config",
              "type": "DatabaseConfig *",
              "value": null
            }
          ],
          "return_type": "int"
        }
      ],
      "globals": [],
      "include_relations": [
        {
          "depth": 1,
          "included_file": "database.h",
          "source_file": "database.c"
        }
      ],
      "includes": [
        "database.h",
        "errno.h",
        "string.h"
      ],
      "macros": [],
      "name": "database.c",
      "structs": {},
      "unions": {}
    },
    "database.h": {
      "aliases": {},
      "anonymous_relationships": {},
      "enums": {
        "DatabaseType": {
          "name": "DatabaseType",
          "tag_name": "",
          "values": [
            {
              "name": "DB_TYPE_SQLITE",
              "value": null
            },
            {
              "name": "DB_TYPE_MYSQL",
              "value": null
            },
            {
              "name": "DB_TYPE_POSTGRESQL",
              "value": null
            }
          ]
        }
      },
      "file_path": "/workspace/tests/example/source/database.h",
      "functions": [
        {
          "is_declaration": true,
          "is_static": false,
          "name": "database_begin_transaction",
          "parameters": [
            {
              "name": "config",
              "type": "DatabaseConfig *",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "database_commit_transaction",
          "parameters": [
            {
              "name": "config",
              "type": "DatabaseConfig *",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "database_connect",
          "parameters": [
            {
              "name": "config",
              "type": "DatabaseConfig *",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "database_disconnect",
          "parameters": [
            {
              "name": "config",
              "type": "DatabaseConfig *",
              "value": null
            }
          ],
          "return_type": "void"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "database_escape_string",
          "parameters": [
            {
              "name": "config",
              "type": "const DatabaseConfig *",
              "value": null
            },
            {
              "name": "input",
              "type": "const char *",
              "value": null
            },
            {
              "name": "output",
              "type": "char *",
              "value": null
            },
            {
              "name": "max_output_size",
              "type": "size_t",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "database_execute_query",
          "parameters": [
            {
              "name": "config",
              "type": "DatabaseConfig *",
              "value": null
            },
            {
              "name": "query",
              "type": "const char *",
              "value": null
            }
          ],
          "return_type": "QueryResult *"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "database_execute_update",
          "parameters": [
            {
              "name": "config",
              "type": "DatabaseConfig *",
              "value": null
            },
            {
              "name": "query",
              "type": "const char *",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "database_free_result",
          "parameters": [
            {
              "name": "result",
              "type": "QueryResult *",
              "value": null
            }
          ],
          "return_type": "void"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "database_get_error",
          "parameters": [
            {
              "name": "config",
              "type": "const DatabaseConfig *",
              "value": null
            }
          ],
          "return_type": "const char *"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "database_is_connected",
          "parameters": [
            {
              "name": "config",
              "type": "const DatabaseConfig *",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "database_rollback_transaction",
          "parameters": [
            {
              "name": "config",
              "type": "DatabaseConfig *",
              "value": null
            }
          ],
          "return_type": "int"
        }
      ],
      "globals": [],
      "include_relations": [],
      "includes": [
        "common.h",
        "mysql/mysql.h",
        "postgresql/libpq-fe.h",
        "sqlite3.h",
        "stdio.h",
        "stdlib.h"
      ],
      "macros": [
        "DATABASE_H",
        "MAX_DB_NAME_LENGTH",
        "MAX_QUERY_LENGTH"
      ],
      "name": "database.h",
      "structs": {
        "DatabaseConfig": {
          "fields": [
            {
              "name": "type",
              "type": "DatabaseType",
              "value": null
            },
            {
              "name": "db_name",
              "type": "char[MAX_DB_NAME_LENGTH]",
              "value": null
            },
            {
              "name": "host",
              "type": "char[256]",
              "value": null
            },
            {
              "name": "port",
              "type": "int",
              "value": null
            },
            {
              "name": "username",
              "type": "char[128]",
              "value": null
            },
            {
              "name": "password",
              "type": "char[128]",
              "value": null
            },
            {
              "name": "connection",
              "type": "void *",
              "value": null
            }
          ],
          "methods": [],
          "name": "DatabaseConfig",
          "tag_name": "",
          "uses": [
            "DatabaseType"
          ]
        },
        "QueryResult": {
          "fields": [
            {
              "name": "row_count",
              "type": "int",
              "value": null
            },
            {
              "name": "column_count",
              "type": "int",
              "value": null
            },
            {
              "name": "data",
              "type": "char * *",
              "value": null
            },
            {
              "name": "column_names",
              "type": "char * *",
              "value": null
            }
          ],
          "methods": [],
          "name": "QueryResult",
          "tag_name": "",
          "uses": []
        }
      },
      "unions": {}
    },
    "filtered_header.h": {
      "aliases": {},
      "anonymous_relationships": {},
      "enums": {
        "filtered_enum_t": {
          "name": "filtered_enum_t",
          "tag_name": "",
          "values": [
            {
              "name": "FILTERED_VALUE_1",
              "value": "1"
            },
            {
              "name": "FILTERED_VALUE_2",
              "value": "2"
            },
            {
              "name": "FILTERED_VALUE_3",
              "value": "3"
            }
          ]
        }
      },
      "file_path": "/workspace/tests/example/source/filtered_header.h",
      "functions": [
        {
          "is_declaration": true,
          "is_static": false,
          "name": "filtered_function1",
          "parameters": [
            {
              "name": "param",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "filtered_function2",
          "parameters": [
            {
              "name": "message",
              "type": "const char *",
              "value": null
            }
          ],
          "return_type": "void"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "filtered_function3",
          "parameters": [
            {
              "name": "data",
              "type": "filtered_struct_t *",
              "value": null
            }
          ],
          "return_type": "double"
        }
      ],
      "globals": [
        {
          "name": "filtered_global_string",
          "type": "char[100]",
          "value": null
        },
        {
          "name": "filtered_global_var",
          "type": "int",
          "value": null
        }
      ],
      "include_relations": [],
      "includes": [
        "stdio.h",
        "stdlib.h"
      ],
      "macros": [
        "FILTERED_CONSTANT",
        "FILTERED_HEADER_H",
        "FILTERED_MACRO(x)"
      ],
      "name": "filtered_header.h",
      "structs": {
        "filtered_struct_t": {
          "fields": [
            {
              "name": "filtered_field1",
              "type": "int",
              "value": null
            },
            {
              "name": "filtered_field2",
              "type": "char[50]",
              "value": null
            },
            {
              "name": "filtered_field3",
              "type": "double",
              "value": null
            }
          ],
          "methods": [],
          "name": "filtered_struct_t",
          "tag_name": "",
          "uses": []
        }
      },
      "unions": {}
    },
    "first_level.h": {
      "aliases": {},
      "anonymous_relationships": {},
      "enums": {},
      "file_path": "/workspace/tests/example/source/first_level.h",
      "functions": [],
      "globals": [],
      "include_relations": [],
      "includes": [
        "filtered_header.h"
      ],
      "macros": [
        "FIRST_LEVEL_H"
      ],
      "name": "first_level.h",
      "structs": {},
      "unions": {}
    },
    "geometry.c": {
      "aliases": {},
      "anonymous_relationships": {},
      "enums": {},
      "file_path": "/workspace/tests/example/source/geometry.c",
      "functions": [
        {
          "is_declaration": false,
          "is_static": false,
          "name": "create_triangle",
          "parameters": [
            {
              "name": "a",
              "type": "const point_t *",
              "value": null
            },
            {
              "name": "b",
              "type": "const point_t *",
              "value": null
            },
            {
              "name": "c",
              "type": "const point_t *",
              "value": null
            },
            {
              "name": "label",
              "type": "const char *",
              "value": null
            }
          ],
          "return_type": "triangle_t"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "triangle_area",
          "parameters": [
            {
              "name": "tri",
              "type": "const triangle_t *",
              "value": null
            }
          ],
          "return_type": "int"
        }
      ],
      "globals": [],
      "include_relations": [
        {
          "depth": 1,
          "included_file": "geometry.h",
          "source_file": "geometry.c"
        },
        {
          "depth": 2,
          "included_file": "math_utils.h",
          "source_file": "geometry.h"
        },
        {
          "depth": 2,
          "included_file": "sample.h",
          "source_file": "geometry.h"
        },
        {
          "depth": 3,
          "included_file": "config.h",
          "source_file": "math_utils.h"
        },
        {
          "depth": 3,
          "included_file": "config.h",
          "source_file": "sample.h"
        },
        {
          "depth": 3,
          "included_file": "logger.h",
          "source_file": "sample.h"
        }
      ],
      "includes": [
        "geometry.h",
        "stdlib.h",
        "string.h"
      ],
      "macros": [],
      "name": "geometry.c",
      "structs": {},
      "unions": {}
    },
    "geometry.h": {
      "aliases": {},
      "anonymous_relationships": {},
      "enums": {},
      "file_path": "/workspace/tests/example/source/geometry.h",
      "functions": [
        {
          "is_declaration": true,
          "is_static": false,
          "name": "create_triangle",
          "parameters": [
            {
              "name": "a",
              "type": "const point_t *",
              "value": null
            },
            {
              "name": "b",
              "type": "const point_t *",
              "value": null
            },
            {
              "name": "c",
              "type": "const point_t *",
              "value": null
            },
            {
              "name": "label",
              "type": "const char *",
              "value": null
            }
          ],
          "return_type": "triangle_t"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "triangle_area",
          "parameters": [
            {
              "name": "tri",
              "type": "const triangle_t *",
              "value": null
            }
          ],
          "return_type": "int"
        }
      ],
      "globals": [],
      "include_relations": [],
      "includes": [
        "math_utils.h",
        "sample.h"
      ],
      "macros": [
        "GEOMETRY_H"
      ],
      "name": "geometry.h",
      "structs": {
        "triangle_t": {
          "fields": [
            {
              "name": "vertices",
              "type": "point_t[3]",
              "value": null
            },
            {
              "name": "label",
              "type": "char[MAX_LABEL_LEN]",
              "value": null
            }
          ],
          "methods": [],
          "name": "triangle_t",
          "tag_name": "triangle_tag",
          "uses": [
            "point_t"
          ]
        }
      },
      "unions": {}
    },
    "logger.c": {
      "aliases": {},
      "anonymous_relationships": {},
      "enums": {},
      "file_path": "/workspace/tests/example/source/logger.c",
      "functions": [
        {
          "is_declaration": false,
          "is_static": false,
          "name": "log_message",
          "parameters": [
            {
              "name": "level",
              "type": "log_level_t",
              "value": null
            },
            {
              "name": "fmt",
              "type": "const char *",
              "value": null
            },
            {
              "name": "...",
              "type": "...",
              "value": null
            }
          ],
          "return_type": "void"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "set_log_callback",
          "parameters": [
            {
              "name": "cb",
              "type": "log_callback_t",
              "value": null
            }
          ],
          "return_type": "void"
        }
      ],
      "globals": [
        {
          "name": "current_cb",
          "type": "log_callback_t",
          "value": null
        }
      ],
      "include_relations": [
        {
          "depth": 1,
          "included_file": "logger.h",
          "source_file": "logger.c"
        },
        {
          "depth": 2,
          "included_file": "config.h",
          "source_file": "logger.h"
        }
      ],
      "includes": [
        "logger.h",
        "stdarg.h",
        "string.h"
      ],
      "macros": [],
      "name": "logger.c",
      "structs": {},
      "unions": {}
    },
    "logger.h": {
      "aliases": {
        "log_callback_t": {
          "name": "log_callback_t",
          "original_type": "void(* log_callback_t)(log_level_t level , const char * message)",
          "uses": [
            "log_level_t"
          ]
        }
      },
      "anonymous_relationships": {},
      "enums": {
        "log_level_t": {
          "name": "log_level_t",
          "tag_name": "",
          "values": [
            {
              "name": "LOG_DEBUG",
              "value": "0"
            },
            {
              "name": "LOG_INFO",
              "value": null
            },
            {
              "name": "LOG_WARN",
              "value": null
            },
            {
              "name": "LOG_ERROR",
              "value": null
            }
          ]
        }
      },
      "file_path": "/workspace/tests/example/source/logger.h",
      "functions": [
        {
          "is_declaration": true,
          "is_static": false,
          "name": "log_message",
          "parameters": [
            {
              "name": "level",
              "type": "log_level_t",
              "value": null
            },
            {
              "name": "fmt",
              "type": "const char *",
              "value": null
            },
            {
              "name": "...",
              "type": "...",
              "value": null
            }
          ],
          "return_type": "void"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "set_log_callback",
          "parameters": [
            {
              "name": "cb",
              "type": "log_callback_t",
              "value": null
            }
          ],
          "return_type": "void"
        }
      ],
      "globals": [],
      "include_relations": [],
      "includes": [
        "config.h",
        "stdio.h"
      ],
      "macros": [
        "LOGGER_H"
      ],
      "name": "logger.h",
      "structs": {},
      "unions": {}
    },
    "math_utils.c": {
      "aliases": {},
      "anonymous_relationships": {},
      "enums": {},
      "file_path": "/workspace/tests/example/source/math_utils.c",
      "functions": [
        {
          "is_declaration": false,
          "is_static": false,
          "name": "add",
          "parameters": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "average",
          "parameters": [
            {
              "name": "arr",
              "type": "const int *",
              "value": null
            },
            {
              "name": "len",
              "type": "size_t",
              "value": null
            }
          ],
          "return_type": "real_t"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "subtract",
          "parameters": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "int"
        }
      ],
      "globals": [],
      "include_relations": [
        {
          "depth": 1,
          "included_file": "math_utils.h",
          "source_file": "math_utils.c"
        },
        {
          "depth": 2,
          "included_file": "config.h",
          "source_file": "math_utils.h"
        }
      ],
      "includes": [
        "math_utils.h"
      ],
      "macros": [],
      "name": "math_utils.c",
      "structs": {},
      "unions": {}
    },
    "math_utils.h": {
      "aliases": {
        "math_op_t": {
          "name": "math_op_t",
          "original_type": "int(* math_op_t)(int , int)",
          "uses": []
        },
        "real_t": {
          "name": "real_t",
          "original_type": "double",
          "uses": []
        }
      },
      "anonymous_relationships": {},
      "enums": {},
      "file_path": "/workspace/tests/example/source/math_utils.h",
      "functions": [
        {
          "is_declaration": true,
          "is_static": false,
          "name": "add",
          "parameters": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "average",
          "parameters": [
            {
              "name": "arr",
              "type": "const int *",
              "value": null
            },
            {
              "name": "len",
              "type": "size_t",
              "value": null
            }
          ],
          "return_type": "real_t"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "subtract",
          "parameters": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "int"
        }
      ],
      "globals": [],
      "include_relations": [],
      "includes": [
        "config.h"
      ],
      "macros": [
        "MATH_UTILS_H"
      ],
      "name": "math_utils.h",
      "structs": {},
      "unions": {}
    },
    "network.c": {
      "aliases": {},
      "anonymous_relationships": {},
      "enums": {},
      "file_path": "/workspace/tests/example/source/network.c",
      "functions": [
        {
          "is_declaration": false,
          "is_static": false,
          "name": "network_cleanup",
          "parameters": [
            {
              "name": "config",
              "type": "NetworkConfig *",
              "value": null
            }
          ],
          "return_type": "void"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "network_connect",
          "parameters": [
            {
              "name": "config",
              "type": "NetworkConfig *",
              "value": null
            },
            {
              "name": "host",
              "type": "const char *",
              "value": null
            },
            {
              "name": "port",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "network_get_status",
          "parameters": [
            {
              "name": "config",
              "type": "const NetworkConfig *",
              "value": null
            }
          ],
          "return_type": "NetworkStatus"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "network_init",
          "parameters": [
            {
              "name": "config",
              "type": "NetworkConfig *",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "network_listen",
          "parameters": [
            {
              "name": "config",
              "type": "NetworkConfig *",
              "value": null
            },
            {
              "name": "port",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "network_receive",
          "parameters": [
            {
              "name": "socket_fd",
              "type": "int",
              "value": null
            },
            {
              "name": "buffer",
              "type": "void *",
              "value": null
            },
            {
              "name": "size",
              "type": "size_t",
              "value": null
            }
          ],
          "return_type": "ssize_t"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "network_send",
          "parameters": [
            {
              "name": "socket_fd",
              "type": "int",
              "value": null
            },
            {
              "name": "data",
              "type": "const void *",
              "value": null
            },
            {
              "name": "size",
              "type": "size_t",
              "value": null
            }
          ],
          "return_type": "ssize_t"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "network_set_nonblocking",
          "parameters": [
            {
              "name": "socket_fd",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "network_status_string",
          "parameters": [
            {
              "name": "status",
              "type": "NetworkStatus",
              "value": null
            }
          ],
          "return_type": "const char *"
        }
      ],
      "globals": [],
      "include_relations": [
        {
          "depth": 1,
          "included_file": "network.h",
          "source_file": "network.c"
        }
      ],
      "includes": [
        "errno.h",
        "fcntl.h",
        "network.h",
        "stdio.h",
        "stdlib.h",
        "string.h"
      ],
      "macros": [],
      "name": "network.c",
      "structs": {},
      "unions": {}
    },
    "network.h": {
      "aliases": {},
      "anonymous_relationships": {},
      "enums": {
        "NetworkStatus": {
          "name": "NetworkStatus",
          "tag_name": "",
          "values": [
            {
              "name": "NET_STATUS_DISCONNECTED",
              "value": null
            },
            {
              "name": "NET_STATUS_CONNECTING",
              "value": null
            },
            {
              "name": "NET_STATUS_CONNECTED",
              "value": null
            },
            {
              "name": "NET_STATUS_ERROR",
              "value": null
            }
          ]
        }
      },
      "file_path": "/workspace/tests/example/source/network.h",
      "functions": [
        {
          "is_declaration": true,
          "is_static": false,
          "name": "network_accept",
          "parameters": [
            {
              "name": "config",
              "type": "NetworkConfig *",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "network_cleanup",
          "parameters": [
            {
              "name": "config",
              "type": "NetworkConfig *",
              "value": null
            }
          ],
          "return_type": "void"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "network_connect",
          "parameters": [
            {
              "name": "config",
              "type": "NetworkConfig *",
              "value": null
            },
            {
              "name": "host",
              "type": "const char *",
              "value": null
            },
            {
              "name": "port",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "network_disconnect",
          "parameters": [
            {
              "name": "config",
              "type": "NetworkConfig *",
              "value": null
            }
          ],
          "return_type": "void"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "network_get_status",
          "parameters": [
            {
              "name": "config",
              "type": "const NetworkConfig *",
              "value": null
            }
          ],
          "return_type": "NetworkStatus"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "network_init",
          "parameters": [
            {
              "name": "config",
              "type": "NetworkConfig *",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "network_listen",
          "parameters": [
            {
              "name": "config",
              "type": "NetworkConfig *",
              "value": null
            },
            {
              "name": "port",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "network_receive",
          "parameters": [
            {
              "name": "socket_fd",
              "type": "int",
              "value": null
            },
            {
              "name": "buffer",
              "type": "void *",
              "value": null
            },
            {
              "name": "size",
              "type": "size_t",
              "value": null
            }
          ],
          "return_type": "ssize_t"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "network_send",
          "parameters": [
            {
              "name": "socket_fd",
              "type": "int",
              "value": null
            },
            {
              "name": "data",
              "type": "const void *",
              "value": null
            },
            {
              "name": "size",
              "type": "size_t",
              "value": null
            }
          ],
          "return_type": "ssize_t"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "network_set_nonblocking",
          "parameters": [
            {
              "name": "socket_fd",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "network_status_string",
          "parameters": [
            {
              "name": "status",
              "type": "NetworkStatus",
              "value": null
            }
          ],
          "return_type": "const char *"
        }
      ],
      "globals": [],
      "include_relations": [],
      "includes": [
        "arpa/inet.h",
        "common.h",
        "netdb.h",
        "netinet/in.h",
        "sys/socket.h",
        "unistd.h"
      ],
      "macros": [
        "DEFAULT_PORT",
        "MAX_CONNECTIONS",
        "NETWORK_H"
      ],
      "name": "network.h",
      "structs": {
        "NetworkConfig": {
          "fields": [
            {
              "name": "socket_fd",
              "type": "int",
              "value": null
            },
            {
              "name": "address",
              "type": "struct sockaddr_in",
              "value": null
            },
            {
              "name": "port",
              "type": "int",
              "value": null
            },
            {
              "name": "hostname",
              "type": "char *",
              "value": null
            }
          ],
          "methods": [],
          "name": "NetworkConfig",
          "tag_name": "",
          "uses": []
        }
      },
      "unions": {}
    },
    "preprocessed.c": {
      "aliases": {},
      "anonymous_relationships": {},
      "enums": {},
      "file_path": "/workspace/tests/example/source/preprocessed.c",
      "functions": [
        {
          "is_declaration": false,
          "is_static": false,
          "name": "complex_function",
          "parameters": [],
          "return_type": "void"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "main",
          "parameters": [],
          "return_type": "int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "test_function_pointers",
          "parameters": [],
          "return_type": "void"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "test_preprocessing_edge_cases",
          "parameters": [],
          "return_type": "void"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "test_typedef_preprocessing",
          "parameters": [],
          "return_type": "void"
        }
      ],
      "globals": [],
      "include_relations": [
        {
          "depth": 1,
          "included_file": "preprocessed.h",
          "source_file": "preprocessed.c"
        }
      ],
      "includes": [
        "preprocessed.h",
        "stdio.h",
        "stdlib.h",
        "string.h"
      ],
      "macros": [],
      "name": "preprocessed.c",
      "structs": {},
      "unions": {}
    },
    "preprocessed.h": {
      "aliases": {
        "basic_callback_t": {
          "name": "basic_callback_t",
          "original_type": "int(* basic_callback_t)(void)",
          "uses": []
        },
        "feature_callback_t": {
          "name": "feature_callback_t",
          "original_type": "int(* feature_callback_t)(enabled_feature_t * feature)",
          "uses": [
            "enabled_feature_t"
          ]
        },
        "large_buffer_t": {
          "name": "large_buffer_t",
          "original_type": "char large_buffer_t[MAX_SIZE]",
          "uses": []
        },
        "small_buffer_t": {
          "name": "small_buffer_t",
          "original_type": "char small_buffer_t[MIN_SIZE]",
          "uses": []
        }
      },
      "anonymous_relationships": {},
      "enums": {
        "status_t": {
          "name": "status_t",
          "tag_name": "",
          "values": [
            {
              "name": "STATUS_ENABLED",
              "value": "1"
            },
            {
              "name": "STATUS_DISABLED",
              "value": "0"
            },
            {
              "name": "STATUS_OFF",
              "value": "0"
            },
            {
              "name": "STATUS_UNKNOWN",
              "value": "- 1"
            }
          ]
        }
      },
      "file_path": "/workspace/tests/example/source/preprocessed.h",
      "functions": [
        {
          "is_declaration": true,
          "is_static": false,
          "name": "debug_feature",
          "parameters": [
            {
              "name": "feature",
              "type": "enabled_feature_t *",
              "value": null
            }
          ],
          "return_type": "void"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "process_basic",
          "parameters": [],
          "return_type": "int"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "process_feature",
          "parameters": [
            {
              "name": "feature",
              "type": "enabled_feature_t *",
              "value": null
            }
          ],
          "return_type": "int"
        }
      ],
      "globals": [
        {
          "name": "global_basic",
          "type": "int",
          "value": null
        },
        {
          "name": "global_debug",
          "type": "debug_struct_t",
          "value": null
        },
        {
          "name": "global_feature",
          "type": "enabled_feature_t",
          "value": null
        }
      ],
      "include_relations": [],
      "includes": [
        "stddef.h",
        "stdint.h"
      ],
      "macros": [
        "DEBUG_MODE",
        "FEATURE_ENABLED",
        "MAX_SIZE",
        "MIN_SIZE",
        "PREPROCESSED_H"
      ],
      "name": "preprocessed.h",
      "structs": {
        "basic_struct_t": {
          "fields": [
            {
              "name": "basic_id",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "basic_struct_t",
          "tag_name": "",
          "uses": []
        },
        "debug_enabled_t": {
          "fields": [
            {
              "name": "debug_enabled_id",
              "type": "int",
              "value": null
            },
            {
              "name": "debug_enabled_name",
              "type": "char[64]",
              "value": null
            }
          ],
          "methods": [],
          "name": "debug_enabled_t",
          "tag_name": "",
          "uses": []
        },
        "debug_feature_t": {
          "fields": [
            {
              "name": "debug_id",
              "type": "int",
              "value": null
            },
            {
              "name": "debug_name",
              "type": "char[64]",
              "value": null
            }
          ],
          "methods": [],
          "name": "debug_feature_t",
          "tag_name": "",
          "uses": []
        },
        "debug_optimized_t": {
          "fields": [
            {
              "name": "debug_field",
              "type": "int",
              "value": null
            },
            {
              "name": "debug_buffer",
              "type": "char[128]",
              "value": null
            }
          ],
          "methods": [],
          "name": "debug_optimized_t",
          "tag_name": "",
          "uses": []
        },
        "debug_struct_t": {
          "fields": [
            {
              "name": "debug_id",
              "type": "int",
              "value": null
            },
            {
              "name": "debug_name",
              "type": "char[64]",
              "value": null
            },
            {
              "name": "extra_debug_field",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "debug_struct_t",
          "tag_name": "",
          "uses": []
        },
        "default_struct_t": {
          "fields": [
            {
              "name": "default_field",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "default_struct_t",
          "tag_name": "",
          "uses": []
        },
        "disabled_feature_t": {
          "fields": [
            {
              "name": "id",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "disabled_feature_t",
          "tag_name": "",
          "uses": []
        },
        "disabled_t": {
          "fields": [
            {
              "name": "disabled_id",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "disabled_t",
          "tag_name": "",
          "uses": []
        },
        "enabled_feature_t": {
          "fields": [
            {
              "name": "id",
              "type": "int",
              "value": null
            },
            {
              "name": "name",
              "type": "char[32]",
              "value": null
            }
          ],
          "methods": [],
          "name": "enabled_feature_t",
          "tag_name": "",
          "uses": []
        },
        "enabled_t": {
          "fields": [
            {
              "name": "enabled_id",
              "type": "int",
              "value": null
            },
            {
              "name": "enabled_name",
              "type": "char[32]",
              "value": null
            }
          ],
          "methods": [],
          "name": "enabled_t",
          "tag_name": "",
          "uses": []
        },
        "feature_struct_t": {
          "fields": [
            {
              "name": "feature_id",
              "type": "int",
              "value": null
            },
            {
              "name": "feature_name",
              "type": "char[32]",
              "value": null
            }
          ],
          "methods": [],
          "name": "feature_struct_t",
          "tag_name": "",
          "uses": []
        },
        "optimized_struct_t": {
          "fields": [
            {
              "name": "optimized_field",
              "type": "int",
              "value": null
            },
            {
              "name": "large_buffer",
              "type": "char[MAX_SIZE]",
              "value": null
            },
            {
              "name": "small_buffer",
              "type": "char[MIN_SIZE]",
              "value": null
            }
          ],
          "methods": [],
          "name": "optimized_struct_t",
          "tag_name": "",
          "uses": []
        },
        "release_struct_t": {
          "fields": [
            {
              "name": "release_id",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "release_struct_t",
          "tag_name": "",
          "uses": []
        },
        "simple_debug_t": {
          "fields": [
            {
              "name": "debug_id",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "simple_debug_t",
          "tag_name": "",
          "uses": []
        }
      },
      "unions": {
        "basic_union_t": {
          "fields": [
            {
              "name": "int_value",
              "type": "int",
              "value": null
            },
            {
              "name": "char_value",
              "type": "char",
              "value": null
            }
          ],
          "name": "basic_union_t",
          "tag_name": "",
          "uses": []
        },
        "feature_union_t": {
          "fields": [
            {
              "name": "int_value",
              "type": "int",
              "value": null
            },
            {
              "name": "char_value",
              "type": "char",
              "value": null
            },
            {
              "name": "debug_value",
              "type": "double",
              "value": null
            }
          ],
          "name": "feature_union_t",
          "tag_name": "",
          "uses": []
        }
      }
    },
    "sample.c": {
      "aliases": {},
      "anonymous_relationships": {},
      "enums": {},
      "file_path": "/workspace/tests/example/source/sample.c",
      "functions": [
        {
          "is_declaration": true,
          "is_static": false,
          "name": "calculate_sum",
          "parameters": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "calculate_sum",
          "parameters": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "create_point",
          "parameters": [
            {
              "name": "x",
              "type": "int",
              "value": null
            },
            {
              "name": "y",
              "type": "int",
              "value": null
            },
            {
              "name": "label",
              "type": "const char *",
              "value": null
            }
          ],
          "return_type": "point_t *"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "create_point",
          "parameters": [
            {
              "name": "x",
              "type": "int",
              "value": null
            },
            {
              "name": "y",
              "type": "int",
              "value": null
            },
            {
              "name": "label",
              "type": "const char *",
              "value": null
            }
          ],
          "return_type": "point_t *"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "demo_triangle_usage",
          "parameters": [],
          "return_type": "void"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "internal_helper",
          "parameters": [],
          "return_type": "static void"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "internal_helper",
          "parameters": [],
          "return_type": "static void"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "main",
          "parameters": [],
          "return_type": "int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "process_point",
          "parameters": [
            {
              "name": "p",
              "type": "point_t *",
              "value": null
            }
          ],
          "return_type": "void"
        }
      ],
      "globals": [
        {
          "name": "buffer",
          "type": "char[MAX_SIZE]",
          "value": null
        },
        {
          "name": "global_counter",
          "type": "int",
          "value": null
        },
        {
          "name": "global_ptr",
          "type": "double *",
          "value": null
        }
      ],
      "include_relations": [
        {
          "depth": 2,
          "included_file": "math_utils.h",
          "source_file": "geometry.h"
        },
        {
          "depth": 2,
          "included_file": "sample.h",
          "source_file": "geometry.h"
        },
        {
          "depth": 2,
          "included_file": "config.h",
          "source_file": "logger.h"
        },
        {
          "depth": 2,
          "included_file": "config.h",
          "source_file": "math_utils.h"
        },
        {
          "depth": 1,
          "included_file": "geometry.h",
          "source_file": "sample.c"
        },
        {
          "depth": 1,
          "included_file": "logger.h",
          "source_file": "sample.c"
        },
        {
          "depth": 1,
          "included_file": "math_utils.h",
          "source_file": "sample.c"
        },
        {
          "depth": 1,
          "included_file": "sample.h",
          "source_file": "sample.c"
        },
        {
          "depth": 2,
          "included_file": "config.h",
          "source_file": "sample.h"
        }
      ],
      "includes": [
        "filtered_header.h",
        "first_level.h",
        "geometry.h",
        "logger.h",
        "math_utils.h",
        "sample.h",
        "stdio.h",
        "stdlib.h",
        "string.h"
      ],
      "macros": [
        "CALC(x, y)",
        "DEBUG_MODE",
        "MAX_SIZE"
      ],
      "name": "sample.c",
      "structs": {},
      "unions": {}
    },
    "sample.h": {
      "aliases": {},
      "anonymous_relationships": {},
      "enums": {
        "system_state_t": {
          "name": "system_state_t",
          "tag_name": "",
          "values": [
            {
              "name": "STATE_IDLE",
              "value": "0"
            },
            {
              "name": "STATE_RUNNING",
              "value": null
            },
            {
              "name": "STATE_ERROR",
              "value": null
            }
          ]
        }
      },
      "file_path": "/workspace/tests/example/source/sample.h",
      "functions": [
        {
          "is_declaration": true,
          "is_static": false,
          "name": "calculate_sum",
          "parameters": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "extern int"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "create_point",
          "parameters": [
            {
              "name": "x",
              "type": "int",
              "value": null
            },
            {
              "name": "y",
              "type": "int",
              "value": null
            },
            {
              "name": "label",
              "type": "const char *",
              "value": null
            }
          ],
          "return_type": "extern point_t *"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "process_point",
          "parameters": [
            {
              "name": "p",
              "type": "point_t *",
              "value": null
            }
          ],
          "return_type": "extern void"
        }
      ],
      "globals": [
        {
          "name": "DEFAULT_LABEL",
          "type": "char *",
          "value": null
        },
        {
          "name": "MAX_POINTS",
          "type": "int",
          "value": null
        }
      ],
      "include_relations": [],
      "includes": [
        "config.h",
        "geometry.h",
        "logger.h",
        "stddef.h"
      ],
      "macros": [
        "MAX(a, b)",
        "MIN(a, b)",
        "PI",
        "SAMPLE_H",
        "VERSION"
      ],
      "name": "sample.h",
      "structs": {
        "point_t": {
          "fields": [
            {
              "name": "x",
              "type": "int",
              "value": null
            },
            {
              "name": "y",
              "type": "int",
              "value": null
            },
            {
              "name": "label",
              "type": "char[32]",
              "value": null
            }
          ],
          "methods": [],
          "name": "point_t",
          "tag_name": "point_tag",
          "uses": []
        }
      },
      "unions": {}
    },
    "sample2.c": {
      "aliases": {},
      "anonymous_relationships": {},
      "enums": {},
      "file_path": "/workspace/tests/example/source/sample2.c",
      "functions": [
        {
          "is_declaration": true,
          "is_static": false,
          "name": "calculate_sum",
          "parameters": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "calculate_sum",
          "parameters": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "create_point",
          "parameters": [
            {
              "name": "x",
              "type": "int",
              "value": null
            },
            {
              "name": "y",
              "type": "int",
              "value": null
            },
            {
              "name": "label",
              "type": "const char *",
              "value": null
            }
          ],
          "return_type": "point_t *"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "create_point",
          "parameters": [
            {
              "name": "x",
              "type": "int",
              "value": null
            },
            {
              "name": "y",
              "type": "int",
              "value": null
            },
            {
              "name": "label",
              "type": "const char *",
              "value": null
            }
          ],
          "return_type": "point_t *"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "demo_triangle_usage",
          "parameters": [],
          "return_type": "void"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "internal_helper",
          "parameters": [],
          "return_type": "static void"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "internal_helper",
          "parameters": [],
          "return_type": "static void"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "main",
          "parameters": [],
          "return_type": "int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "process_point",
          "parameters": [
            {
              "name": "p",
              "type": "point_t *",
              "value": null
            }
          ],
          "return_type": "void"
        }
      ],
      "globals": [
        {
          "name": "buffer",
          "type": "char[MAX_SIZE]",
          "value": null
        },
        {
          "name": "global_counter",
          "type": "int",
          "value": null
        },
        {
          "name": "global_ptr",
          "type": "double *",
          "value": null
        }
      ],
      "include_relations": [
        {
          "depth": 2,
          "included_file": "math_utils.h",
          "source_file": "geometry.h"
        },
        {
          "depth": 2,
          "included_file": "sample.h",
          "source_file": "geometry.h"
        },
        {
          "depth": 2,
          "included_file": "config.h",
          "source_file": "logger.h"
        },
        {
          "depth": 2,
          "included_file": "config.h",
          "source_file": "math_utils.h"
        },
        {
          "depth": 2,
          "included_file": "config.h",
          "source_file": "sample.h"
        },
        {
          "depth": 1,
          "included_file": "filtered_header.h",
          "source_file": "sample2.c"
        },
        {
          "depth": 1,
          "included_file": "first_level.h",
          "source_file": "sample2.c"
        },
        {
          "depth": 1,
          "included_file": "geometry.h",
          "source_file": "sample2.c"
        },
        {
          "depth": 1,
          "included_file": "logger.h",
          "source_file": "sample2.c"
        },
        {
          "depth": 1,
          "included_file": "math_utils.h",
          "source_file": "sample2.c"
        },
        {
          "depth": 1,
          "included_file": "sample.h",
          "source_file": "sample2.c"
        }
      ],
      "includes": [
        "filtered_header.h",
        "first_level.h",
        "geometry.h",
        "logger.h",
        "math_utils.h",
        "sample.h",
        "stdio.h",
        "stdlib.h",
        "string.h"
      ],
      "macros": [
        "CALC(x, y)",
        "DEBUG_MODE",
        "MAX_SIZE"
      ],
      "name": "sample2.c",
      "structs": {},
      "unions": {}
    },
    "transformed.c": {
      "aliases": {},
      "anonymous_relationships": {},
      "enums": {},
      "file_path": "/workspace/tests/example/source/transformed.c",
      "functions": [
        {
          "is_declaration": false,
          "is_static": false,
          "name": "keep_this_function",
          "parameters": [],
          "return_type": "void"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "legacy_calculate",
          "parameters": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "legacy_print_info",
          "parameters": [
            {
              "name": "message",
              "type": "const char *",
              "value": null
            }
          ],
          "return_type": "void"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "main",
          "parameters": [],
          "return_type": "int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "old_create_point",
          "parameters": [
            {
              "name": "x",
              "type": "int",
              "value": null
            },
            {
              "name": "y",
              "type": "int",
              "value": null
            }
          ],
          "return_type": "void *"
        }
      ],
      "globals": [],
      "include_relations": [
        {
          "depth": 1,
          "included_file": "transformed.h",
          "source_file": "transformed.c"
        }
      ],
      "includes": [
        "stdio.h",
        "stdlib.h",
        "string.h",
        "transformed.h"
      ],
      "macros": [],
      "name": "transformed.c",
      "structs": {
        "old_point": {
          "fields": [
            {
              "name": "x",
              "type": "int",
              "value": null
            },
            {
              "name": "y",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "old_point",
          "tag_name": "",
          "uses": []
        }
      },
      "unions": {}
    },
    "transformed.h": {
      "aliases": {
        "config_t": {
          "name": "config_t",
          "original_type": "void *",
          "uses": []
        }
      },
      "anonymous_relationships": {},
      "enums": {
        "status_t": {
          "name": "status_t",
          "tag_name": "",
          "values": [
            {
              "name": "STATUS_OK",
              "value": null
            },
            {
              "name": "STATUS_ERROR",
              "value": null
            },
            {
              "name": "STATUS_PENDING",
              "value": null
            }
          ]
        }
      },
      "file_path": "/workspace/tests/example/source/transformed.h",
      "functions": [
        {
          "is_declaration": true,
          "is_static": false,
          "name": "cleanup_resources",
          "parameters": [],
          "return_type": "void"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "initialize_system",
          "parameters": [],
          "return_type": "status_t"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "keep_this_function",
          "parameters": [],
          "return_type": "void"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "legacy_cleanup",
          "parameters": [],
          "return_type": "void"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "legacy_init",
          "parameters": [
            {
              "name": "config",
              "type": "config_t *",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "main",
          "parameters": [],
          "return_type": "int"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "old_create_config",
          "parameters": [
            {
              "name": "name",
              "type": "const char *",
              "value": null
            }
          ],
          "return_type": "config_t *"
        },
        {
          "is_declaration": true,
          "is_static": false,
          "name": "process_data",
          "parameters": [
            {
              "name": "point",
              "type": "const point3d_t *",
              "value": null
            }
          ],
          "return_type": "void"
        }
      ],
      "globals": [
        {
          "name": "system_path",
          "type": "char *",
          "value": null
        }
      ],
      "include_relations": [],
      "includes": [
        "stdio.h"
      ],
      "macros": [
        "LEGACY_API_VERSION",
        "TRANSFORMED_H"
      ],
      "name": "transformed.h",
      "structs": {
        "modern_config": {
          "fields": [
            {
              "name": "version",
              "type": "int",
              "value": null
            },
            {
              "name": "name",
              "type": "char[64]",
              "value": null
            },
            {
              "name": "flags",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "modern_config",
          "tag_name": "",
          "uses": []
        },
        "point3d_t": {
          "fields": [
            {
              "name": "x",
              "type": "int",
              "value": null
            },
            {
              "name": "y",
              "type": "int",
              "value": null
            },
            {
              "name": "z",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "point3d_t",
          "tag_name": "",
          "uses": []
        }
      },
      "unions": {}
    },
    "typedef_test.c": {
      "aliases": {},
      "anonymous_relationships": {},
      "enums": {},
      "file_path": "/workspace/tests/example/source/typedef_test.c",
      "functions": [
        {
          "is_declaration": false,
          "is_static": false,
          "name": "create_complex",
          "parameters": [
            {
              "name": "id",
              "type": "MyLen",
              "value": null
            },
            {
              "name": "name",
              "type": "MyString",
              "value": null
            }
          ],
          "return_type": "MyComplex *"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "log_buffer",
          "parameters": [
            {
              "name": "buffer",
              "type": "const MyBuffer *",
              "value": null
            }
          ],
          "return_type": "void"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "main",
          "parameters": [],
          "return_type": "int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "my_callback",
          "parameters": [
            {
              "name": "buffer",
              "type": "MyBuffer *",
              "value": null
            }
          ],
          "return_type": "int"
        },
        {
          "is_declaration": false,
          "is_static": false,
          "name": "process_buffer",
          "parameters": [
            {
              "name": "buffer",
              "type": "MyBuffer *",
              "value": null
            }
          ],
          "return_type": "MyInt"
        }
      ],
      "globals": [
        {
          "name": "global_buffer",
          "type": "MyBuffer",
          "value": null
        },
        {
          "name": "global_complex",
          "type": "MyComplexPtr",
          "value": null
        },
        {
          "name": "global_length",
          "type": "MyLen",
          "value": null
        }
      ],
      "include_relations": [
        {
          "depth": 2,
          "included_file": "config.h",
          "source_file": "complex_example.h"
        },
        {
          "depth": 2,
          "included_file": "logger.h",
          "source_file": "complex_example.h"
        },
        {
          "depth": 2,
          "included_file": "math_utils.h",
          "source_file": "geometry.h"
        },
        {
          "depth": 2,
          "included_file": "sample.h",
          "source_file": "geometry.h"
        },
        {
          "depth": 2,
          "included_file": "config.h",
          "source_file": "logger.h"
        },
        {
          "depth": 1,
          "included_file": "complex_example.h",
          "source_file": "typedef_test.c"
        },
        {
          "depth": 1,
          "included_file": "geometry.h",
          "source_file": "typedef_test.c"
        },
        {
          "depth": 1,
          "included_file": "logger.h",
          "source_file": "typedef_test.c"
        },
        {
          "depth": 1,
          "included_file": "typedef_test.h",
          "source_file": "typedef_test.c"
        },
        {
          "depth": 2,
          "included_file": "config.h",
          "source_file": "typedef_test.h"
        },
        {
          "depth": 2,
          "included_file": "sample.h",
          "source_file": "typedef_test.h"
        }
      ],
      "includes": [
        "complex_example.h",
        "geometry.h",
        "logger.h",
        "stdlib.h",
        "typedef_test.h"
      ],
      "macros": [],
      "name": "typedef_test.c",
      "structs": {},
      "unions": {}
    },
    "typedef_test.h": {
      "aliases": {
        "MyCallback": {
          "name": "MyCallback",
          "original_type": "int(* MyCallback)(MyBuffer * buffer)",
          "uses": [
            "MyBuffer"
          ]
        },
        "MyComplexArray": {
          "name": "MyComplexArray",
          "original_type": "MyComplexPtr MyComplexArray[10]",
          "uses": [
            "MyComplexPtr"
          ]
        },
        "MyComplexPtr": {
          "name": "MyComplexPtr",
          "original_type": "MyComplex *",
          "uses": [
            "MyComplex"
          ]
        },
        "MyInt": {
          "name": "MyInt",
          "original_type": "int32_t",
          "uses": []
        },
        "MyLen": {
          "name": "MyLen",
          "original_type": "uint32_t",
          "uses": []
        },
        "MyString": {
          "name": "MyString",
          "original_type": "char *",
          "uses": []
        }
      },
      "anonymous_relationships": {},
      "enums": {
        "Color_t": {
          "name": "Color_t",
          "tag_name": "",
          "values": [
            {
              "name": "COLOR_RED",
              "value": "0"
            },
            {
              "name": "COLOR_GREEN",
              "value": null
            },
            {
              "name": "COLOR_BLUE",
              "value": null
            }
          ]
        },
        "Status_t": {
          "name": "Status_t",
          "tag_name": "",
          "values": [
            {
              "name": "STATUS_OK",
              "value": "0"
            },
            {
              "name": "STATUS_FAIL",
              "value": null
            }
          ]
        }
      },
      "file_path": "/workspace/tests/example/source/typedef_test.h",
      "functions": [],
      "globals": [],
      "include_relations": [],
      "includes": [
        "config.h",
        "logger.h",
        "sample.h",
        "stdint.h"
      ],
      "macros": [
        "TYPEDEF_TEST_H"
      ],
      "name": "typedef_test.h",
      "structs": {
        "MyBuffer": {
          "fields": [
            {
              "name": "length",
              "type": "MyLen",
              "value": null
            },
            {
              "name": "data",
              "type": "MyString",
              "value": null
            }
          ],
          "methods": [],
          "name": "MyBuffer",
          "tag_name": "MyBuffer_tag",
          "uses": [
            "MyLen",
            "MyString"
          ]
        },
        "MyComplex": {
          "fields": [
            {
              "name": "id",
              "type": "MyLen",
              "value": null
            },
            {
              "name": "name",
              "type": "MyString",
              "value": null
            },
            {
              "name": "callback",
              "type": "MyCallback",
              "value": null
            },
            {
              "name": "log_level",
              "type": "log_level_t",
              "value": null
            }
          ],
          "methods": [],
          "name": "MyComplex",
          "tag_name": "MyComplexStruct_tag",
          "uses": [
            "MyCallback",
            "MyLen",
            "MyString",
            "log_level_t"
          ]
        },
        "NamedStruct_t": {
          "fields": [
            {
              "name": "a",
              "type": "int",
              "value": null
            },
            {
              "name": "b",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "NamedStruct_t",
          "tag_name": "NamedStruct_tag",
          "uses": []
        },
        "Point_t": {
          "fields": [
            {
              "name": "x",
              "type": "int",
              "value": null
            },
            {
              "name": "y",
              "type": "int",
              "value": null
            }
          ],
          "methods": [],
          "name": "Point_t",
          "tag_name": "Point_tag",
          "uses": []
        }
      },
      "unions": {
        "NamedUnion_t": {
          "fields": [
            {
              "name": "c",
              "type": "char",
              "value": null
            },
            {
              "name": "d",
              "type": "double",
              "value": null
            }
          ],
          "name": "NamedUnion_t",
          "tag_name": "NamedUnion_tag",
          "uses": []
        },
        "Number_t": {
          "fields": [
            {
              "name": "i",
              "type": "int",
              "value": null
            },
            {
              "name": "f",
              "type": "float",
              "value": null
            }
          ],
          "name": "Number_t",
          "tag_name": "Number_tag",
          "uses": []
        }
      }
    }
  },
  "project_name": "example_project",
  "source_folder": "tests/example/source,tests/example/source"
}