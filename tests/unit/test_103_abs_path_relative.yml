test:
  name: Relative Path Handling in Include Tree
  id: '103'
  description: Test that relative paths are handled correctly in include tree building
    without absolute path bugs
---
source_files:
  utils.h: "#ifndef UTILS_H\n#define UTILS_H\n\ntypedef struct {\n    int id;\n  \
    \  char name[32];\n} util_data_t;\n\nvoid init_utils(void);\n\n#endif\n"
  main.c: "#include \"utils.h\"\n\nint main() {\n    util_data_t data;\n    init_utils();\n\
    \    return 0;\n}\n"
---
config.json: "{\n  \"project_name\": \"relative_path_handling_in_include_tree\",\n\
  \  \"source_folders\": [\".\"],\n  \"output_dir\": \"./output\",\n  \"recursive_search\"\
  : true\n}\n"
---
cli_execution:
  steps:
  - run_full_pipeline
---
assertions:
  execution:
    should_succeed: true
  model:
    structs_exist:
    - util_data_t
    functions_exist:
    - main
    - init_utils
    globals_exist: []
    files:
      main.c:
        includes:
        - utils.h
        functions:
        - main
      utils.h:
        structs:
          util_data_t:
            fields:
            - id
            - name
        functions:
        - init_utils
    element_counts:
      structs: 1
      functions: 2
      aliases: 0
  puml:
    contains_elements:
    - util_data_t
    - main
    - init_utils
    contains_lines:
    - int main()
    - + void init_utils()
    - + int id
    - + char[32] name
    class_count: 3
    relationship_count: 2
