# Test metadata
test:
  name: "Preprocessor and Macros â€“ Comprehensive"
  description: "Consolidated preprocessor handling, nested conditions, macro stringification/pasting, and duplicate macro scenarios"
  category: "unit"
  id: "0120"

---
# Source files
source_files:
  preproc_all.c: |
    #include <stdio.h>
    #include <stdlib.h>
    #include "preproc_header.h"

    // Duplicate macro name under conditional branches
    #if 1
      #define DEPRECATED __attribute__((deprecated))
    #else
      #define DEPRECATED
    #endif

    // Basic macros
    #define MAX_SIZE 100
    #define MIN_SIZE 10
    #define VERSION_STRING "1.0.0"

    // Conditional logging macro
    #ifdef DEBUG
      #define LOG(msg) printf("DEBUG: %s\n", msg)
    #else
      #define LOG(msg)
    #endif

    typedef struct {
      int id;
      char name[MAX_SIZE];
    } Item;

    #if defined(FEATURE_A)
      typedef struct { int feature_a_data; } FeatureA;
    #endif

    #ifndef DISABLE_FEATURE_B
      typedef struct { float feature_b_value; } FeatureB;
    #endif

    int process_item(Item* item);
    void initialize_system(void);

    int global_items = 0;

    int process_item(Item* item) {
      if (item == NULL) return -1;
      LOG("Processing item");
      return item->id;
    }

    void initialize_system(void) {
      LOG("System initialized");
      global_items = 0;
    }

  preproc_header.h: |
    #ifndef PREPROCESSOR_HEADER_H
    #define PREPROCESSOR_HEADER_H

    #define HEADER_VERSION 2
    #define API_VERSION "2.1.0"

    typedef struct Item Item;

    #ifdef FEATURE_A
      typedef struct FeatureA FeatureA;
    #endif

    #ifndef DISABLE_FEATURE_B
      typedef struct FeatureB FeatureB;
    #endif

    int process_item(Item* item);
    void initialize_system(void);

    #endif // PREPROCESSOR_HEADER_H

---
# Configuration
config.json: |
  {
    "project_name": "preprocessor_and_macros_comprehensive",
    "source_folders": ["."],
    "output_dir": "./output",
    "recursive_search": true
  }

---
# Assertions
assertions:
  execution:
    exit_code: 0
    output_files: ["model.json", "model_transformed.json", "preproc_all.puml"]

  model:
    files:
      preproc_all.c:
        structs:
          Item:
            fields: ["id", "name"]
        functions: ["process_item", "initialize_system"]
        globals: ["global_items"]
        macros: ["DEPRECATED", "MAX_SIZE", "MIN_SIZE", "VERSION_STRING", "LOG"]
        includes: ["stdio.h", "stdlib.h", "preproc_header.h"]
    # Avoid strict global element_counts; allow additional structs (FeatureA/FeatureB) to be present depending on flags

  puml:
    syntax_valid: true
    files:
      preproc_all.puml:
        contains_elements: ["Item", "process_item", "initialize_system", "global_items"]