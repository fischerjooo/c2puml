test:
  name: Debug Nested Struct Parsing
  description: Test parsing nested struct definitions for debugging purposes
  category: unit
  id: '108'
---
source_files:
  nested_struct.c: |
    typedef struct {
        int outer_id;
        struct {
            char name[32];
            struct {
                float x, y, z;
            } position;
        } inner_data;
        double outer_value;
    } nested_struct_t;

    // Function using the nested struct
    void process_nested(nested_struct_t* ns) {
        // Processing function
    }
---
config.json: |
  {
    "project_name": "debug_nested_struct_parsing",
    "source_folders": ["."],
    "output_dir": "./output",
    "recursive_search": true
  }
---
assertions:
  execution:
    exit_code: 0
    output_files:
    - model.json
    - model_transformed.json
    - nested_struct.puml
  model:
    validate_structure: true
    project_name: debug_nested_struct_parsing
    expected_files:
    - nested_struct.c
    structs_exist:
    - nested_struct_t
    functions_exist:
    - process_nested
    struct_details:
      nested_struct_t:
        fields:
        - outer_id
        - inner_data
        - outer_value
    function_details:
      process_nested:
        return_type: void
        parameters:
        - nested_struct_t*
    element_counts:
      structs: 4
      functions: 1
      aliases: 0
  puml:
    syntax_valid: true
    file_count: 1
    files:
      nested_struct.puml:
        contains_elements:
        - nested_struct_t
        - process_nested
        contains_lines:
        - void process_nested(nested_struct_t * ns)
        class_count: 5
        relationship_count: 4
  files:
    output_dir_exists: ./output
    files_exist:
      - ./output/model.json
      - ./output/model_transformed.json
