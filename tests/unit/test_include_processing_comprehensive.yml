# Test metadata
test:
  name: "Include Processing Basic"
  description: "Test basic include file processing functionality"
  category: "unit"
  id: "0097"

---
# Source files
source_files:
  main.c: |
    #include "utils.h"
    #include <stdio.h>
    
    int main() {
        printf("Hello from main\n");
        int result = add_numbers(5, 3);
        return result;
    }
  
  utils.h: |
    #ifndef UTILS_H
    #define UTILS_H
    
    // Function declaration
    int add_numbers(int a, int b);
    
    // Macro definition
    #define MAX_SIZE 100
    
    // Global variable declaration
    extern int global_counter;
    
    #endif // UTILS_H

---
# Configuration
config.json: |
  {
    "project_name": "include_processing_basic",
    "source_folders": ["."],
    "output_dir": "./output",
    "recursive_search": true,
    "include_depth": 2
  }

---
# Assertions
assertions:
  execution:
    exit_code: 0
    output_files: ["model.json", "model_transformed.json", "main.puml"]
  
  model:
    validate_structure: true
    project_name: "include_processing_basic"
    expected_files: ["main.c", "utils.h"]
    
    # Validate include processing
    functions_exist: ["main", "add_numbers"]
    includes_exist: ["stdio.h"]
    macros_exist: ["MAX_SIZE"]
    globals_exist: ["global_counter"]
    
    # Validate file-specific content
    files:
      main.c:
        functions: ["main"]
        includes: ["utils.h", "stdio.h"]
      utils.h:
        functions: ["add_numbers"]
        macros: ["MAX_SIZE"]
        globals: ["global_counter"]
    
    # Validate element counts
    element_counts:
      functions: 2
      includes: 2  # utils.h included by main.c, stdio.h included by main.c
      macros: 2    # MAX_SIZE + UTILS_H (header guard)
      globals: 1
      aliases: 0
  
  puml:
    syntax_valid: true
    file_count: 1
    
    files:
      main.puml:
        contains_elements: ["main", "add_numbers", "MAX_SIZE", "global_counter"]
        contains_lines: ["int main()", "+ int add_numbers(int a, int b)"]
        class_count: 2  # source + header
        relationship_count: 1  # include relationship