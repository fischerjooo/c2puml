test:
  name: Typedef Extraction - Enum Typedefs
  description: Test extraction of enum typedef declarations
  category: unit
  id: '120'
---
source_files:
  enum_typedefs.c: "// Enum typedef declarations\ntypedef enum Color_tag {\n    COLOR_RED,\n\
    \    COLOR_GREEN,\n    COLOR_BLUE\n} Color_t;\n\ntypedef enum log_level_tag {\n\
    \    LOG_DEBUG,\n    LOG_INFO,\n    LOG_WARN,\n    LOG_ERROR\n} log_level_t;\n\
    \ntypedef enum Status {\n    STATUS_OK,\n    STATUS_ERROR,\n    STATUS_PENDING\n\
    } Status_t;\n"
---
config.json: "{\n  \"project_name\": \"test_typedef_extraction_enums\",\n  \"source_folders\"\
  : [\".\"],\n  \"output_dir\": \"./output\",\n  \"recursive_search\": true\n}\n"
---
assertions:
  execution:
    exit_code: 0
    output_files:
    - model.json
    - model_transformed.json
    - enum_typedefs.puml
  model:
    files:
      enum_typedefs.c:
        enums:
          Color_t:
            values:
            - COLOR_RED
            - COLOR_GREEN
            - COLOR_BLUE
          log_level_t:
            values:
            - LOG_DEBUG
            - LOG_INFO
            - LOG_WARN
            - LOG_ERROR
          Status_t:
            values:
            - STATUS_OK
            - STATUS_ERROR
            - STATUS_PENDING
    element_counts:
      structs: 0
      enums: 3
      functions: 0
      globals: 0
      includes: 0
  puml:
    syntax_valid: true
    files:
      enum_typedefs.puml:
        contains_elements:
        - Color_t
        - log_level_t
        - Status_t
        contains_lines:
        - class "Color_t" as TYPEDEF_COLOR_T
        - class "log_level_t" as TYPEDEF_LOG_LEVEL_T
        - class "Status_t" as TYPEDEF_STATUS_T
        class_count: 4
        relationship_count: 3
