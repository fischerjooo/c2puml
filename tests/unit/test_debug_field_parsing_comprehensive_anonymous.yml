test:
  name: "Debug Nested Anonymous Structure Fields"
  id: "0101"
  description: "Validate nested anonymous structure field parsing and naming conventions"

---
source_files:
  anonymous_fields.c: |
    typedef struct {
        int id;
        struct {
            char label[32];
            union {
                int int_val;
                float float_val;
            };  // Anonymous union within anonymous struct
            double precision;
        } config;  // Named anonymous struct field
        union {
            struct {
                int width;
                int height;
            } dimensions;  // Named struct within anonymous union
            long area;
        };  // Anonymous union
    } container_t;
    
    void setup_container(container_t* c) {
        c->id = 1;
        c->config.precision = 1.0;
        c->dimensions.width = 800;
    }
    
    container_t global_container = {0};

---
config.json: |
  {
    "project_name": "debug_nested_anonymous_structure_fields",
    "source_folders": ["."],
    "output_dir": "./output",
    "recursive_search": true
  }

---
cli_execution:
  steps:
    - parse_only

---
assertions:
  execution:
    should_succeed: true
    
  model:
    structs_exist: ["container_t", "container_t_config", "__anonymous_struct__", "__anonymous_union___dimensions"]
    unions_exist: ["__anonymous_union__", "container_t_dimensions"]
    functions_exist: ["setup_container"]
    globals_exist: ["global_container"]
    
    # Validate main struct field parsing
    struct_fields:
      container_t:
        - name: "id"
          type: "int"
        - name: "config"
          type: "container_t_config"
        - name: "dimensions"
          type: "container_t_dimensions"
    
    # Validate config struct (anonymous union fields got flattened)
    struct_fields:
      container_t_config:
        - name: "int_val"
          type: "int"
        - name: "float_val"
          type: "float"
    
    # Validate anonymous struct
    struct_fields:
      __anonymous_struct__:
        - name: "width"
          type: "int"
        - name: "height"
          type: "int"
    
    # Validate anonymous union struct 
    struct_fields:
      __anonymous_union___dimensions:
        - name: "width"
          type: "int"
        - name: "height"
          type: "int"
    
    # Validate main anonymous union
    union_fields:
      __anonymous_union__:
        - name: "dimensions"
          type: "container_t_dimensions"
        - name: "area"
          type: "long"
    
    # Validate dimensions union 
    union_fields:
      container_t_dimensions:
        - name: "width"
          type: "int"
        - name: "height"
          type: "int"
    
    element_counts:
      structs: 4  # container_t + container_t_config + 2 anonymous structs
      unions: 2   # anonymous union + dimensions union
      functions: 1
      globals: 1
      aliases: 0
      
  puml:
    contains_elements: ["container_t", "setup_container", "global_container"]
    contains_lines:
      - "void setup_container(container_t * c)"
      - "+ int id"
      - "+ container_t_config config"
      - "+ container_t_dimensions dimensions"
      - "+ long area"
      - "+ int int_val"
      - "+ float float_val"
      - "+ int width"
      - "+ int height"
      - "container_t global_container"
    
    class_count: 7  # source + container_t + container_t_config + 2 anonymous structs + 2 unions 
    relationship_count: 6  # 3 declares + 3 composition relationships