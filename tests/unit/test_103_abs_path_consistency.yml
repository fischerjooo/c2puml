test:
  name: Absolute vs Relative Path Consistency
  id: '103'
  description: Test absolute vs relative path consistency to ensure similar results
    regardless of path style
---
source_files:
  shared/config.h: "#ifndef CONFIG_H\n#define CONFIG_H\n\n#define MAX_BUFFER_SIZE\
    \ 1024\n#define DEFAULT_TIMEOUT 30\n\ntypedef struct {\n    int port;\n    char\
    \ host[256];\n    int timeout;\n} config_t;\n\nextern config_t global_config;\n\
    \nvoid config_load(const char* filename);\nvoid config_save(const char* filename);\n\
    \n#endif\n"
  core/network.c: "#include \"../shared/config.h\"\n\nconfig_t global_config = {8080,\
    \ \"localhost\", DEFAULT_TIMEOUT};\n\nvoid network_connect(void) {\n    // Connect\
    \ using global_config\n    config_load(\"network.conf\");\n}\n\nvoid network_disconnect(void)\
    \ {\n    config_save(\"network.conf\");\n}\n"
  main.c: "#include \"shared/config.h\"\n#include \"core/network.c\"  // Direct include\
    \ for testing path consistency\n\nint main() {\n    config_load(\"main.conf\"\
    );\n    network_connect();\n    network_disconnect();\n    return 0;\n}\n"
---
config.json: "{\n  \"project_name\": \"absolute_vs_relative_path_consistency\",\n\
  \  \"source_folders\": [\".\"],\n  \"output_dir\": \"./output\",\n  \"recursive_search\"\
  : true\n}\n"
---
cli_execution:
  steps:
  - run_full_pipeline
---
assertions:
  execution:
    should_succeed: true
  model:
    structs_exist:
    - config_t
    functions_exist:
    - main
    - config_load
    - config_save
    - network_connect
    - network_disconnect
    globals_exist:
    - global_config
    macros_exist:
    - MAX_BUFFER_SIZE
    - DEFAULT_TIMEOUT
    files:
      main.c:
        functions:
        - main
      config.h:
        structs:
          config_t:
            fields:
            - port
            - host
            - timeout
        functions:
        - config_load
        - config_save
        macros:
        - MAX_BUFFER_SIZE
        - DEFAULT_TIMEOUT
        - CONFIG_H
        globals:
        - global_config
      network.c:
        functions:
        - network_connect
        - network_disconnect
        globals:
        - global_config
    element_counts:
      structs: 1
      functions: 5
      globals: 2
      macros: 3
      aliases: 0
  puml:
    contains_elements:
    - config_t
    - main
    - global_config
    - network_connect
    contains_lines:
    - '- int main()'
    - + void config_load(const char * filename)
    - + void config_save(const char * filename)
    - '- void network_connect()'
    - '- void network_disconnect()'
    class_count: 7
    relationship_count: 6
