test:
  name: Parser â€“ LOCAL_INLINE Function Detection
  description: Test that LOCAL_INLINE functions are correctly parsed and detected as inline
  category: unit
  id: '140'
---
source_files:
  local_inline_test.c: |
    // Test LOCAL_INLINE function detection
    
    // Regular function
    void regular_func(int x) { (void)x; }
    
    // Standard inline function
    inline void standard_inline_func(int x) { (void)x; }
    
    // LOCAL_INLINE function
    LOCAL_INLINE void local_inline_func(int x) { (void)x; }
    
    // LOCAL_INLINE with return type
    LOCAL_INLINE int local_inline_compute(int a, int b) { return a + b; }
    
    // Mixed modifiers with LOCAL_INLINE
    static LOCAL_INLINE void static_local_inline_func(void) {}
    
    // LOCAL_INLINE with complex return type
    LOCAL_INLINE const char * local_inline_get_name(void) { return "test"; }
---
config.json: |
  {
    "project_name": "local_inline_test",
    "source_folders": ["."],
    "output_dir": "./output",
    "recursive_search": true
  }
---
assertions:
  execution:
    exit_code: 0
    output_files:
    - model.json
    - model_transformed.json
    - local_inline_test.puml
  model:
    files:
      local_inline_test.c:
        functions:
        - regular_func
        - standard_inline_func
        - local_inline_func
        - local_inline_compute
        - static_local_inline_func
        - local_inline_get_name
        function_properties:
          regular_func:
            is_inline: false
          standard_inline_func:
            is_inline: true
          local_inline_func:
            is_inline: true
          local_inline_compute:
            is_inline: true
          static_local_inline_func:
            is_inline: true
          local_inline_get_name:
            is_inline: true
  puml:
    syntax_valid: true
    files:
      local_inline_test.puml:
        contains_elements:
        - regular_func
        - standard_inline_func
        - local_inline_func
        - local_inline_compute
        - static_local_inline_func
        - local_inline_get_name
        contains_lines:
        - "regular_func("
        - "standard_inline_func("
        - "local_inline_func("
        - "local_inline_compute("
        - "static_local_inline_func("
        - "local_inline_get_name("
  files:
    output_dir_exists: ./output
    files_exist:
      - ./output/model.json
      - ./output/model_transformed.json