# Test metadata
test:
  name: "Transformer File Filtering"
  description: "Test transformer file filtering with include/exclude patterns"
  category: "unit"
  id: "2011"

---
# Source files
source_files:
  main.c: |
    #include <stdio.h>
    
    struct MainStruct {
        int id;
        char name[50];
    };
    
    void main_function() {
        printf("Main function\n");
    }
    
    int main_global = 100;

  utils.c: |
    #include <stdlib.h>
    
    struct UtilStruct {
        int value;
        float rate;
    };
    
    void utility_function() {
        // Utility implementation
    }
    
    int util_global = 200;

  temp.c: |
    struct TempStruct {
        int temp_id;
    };
    
    void temp_function() {
        // Temporary function
    }

---
# Configuration
config.json: |
  {
    "project_name": "test_transformer_file_filtering",
    "source_folders": ["."],
    "output_dir": "./output",
    "recursive_search": true,
    "transformations": {
      "file_filters": {
        "include_patterns": ["main.*", "utils.*"],
        "exclude_patterns": ["temp.*"]
      },
      "rename": {
        "structs": {
          "MainStruct": "ProcessedMainStruct"
        },
        "functions": {
          "main_function": "processed_main_function"
        }
      }
    }
  }

---
# Assertions
assertions:
  execution:
    exit_code: 0
    output_files: ["model.json", "model_transformed.json", "main.puml", "utils.puml", "temp.puml"]
  
  model:
    files:
      main.c:
        structs:
          ProcessedMainStruct:
            fields: ["id", "name"]
        functions: ["processed_main_function"]
        globals: ["main_global"]
      utils.c:
        structs:
          UtilStruct:
            fields: ["value", "rate"]
        functions: ["utility_function"]
        globals: ["util_global"]
      temp.c:
        structs:
          TempStruct:
            fields: ["temp_id"]
        functions: ["temp_function"]
    element_counts:
      structs: 3
      functions: 3
      globals: 2
  
  puml:
    # Global PlantUML assertions (applied to all files)
    syntax_valid: true
    
    # Per-file PlantUML assertions
    files:
      main.puml:
        contains_elements: ["ProcessedMainStruct", "main"]
        contains_lines: ["class \"ProcessedMainStruct\" as TYPEDEF_PROCESSEDMAINSTRUCT"]
        class_count: 2
        relationship_count: 1
      utils.puml:
        contains_elements: ["UtilStruct", "utils"]
        contains_lines: ["class \"UtilStruct\" as TYPEDEF_UTILSTRUCT"]
        class_count: 2
        relationship_count: 1
      temp.puml:
        contains_elements: ["TempStruct", "temp"]
        contains_lines: ["class \"TempStruct\" as TYPEDEF_TEMPSTRUCT"]
        class_count: 2
        relationship_count: 1