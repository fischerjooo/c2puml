# Test metadata
test:
  name: "Parser Typedefs"
  description: "Test parsing typedef declarations with different types"
  category: "unit"
  id: "0009"

---
# Source files
source_files:
  typedefs.c: |
    typedef int Integer;
    typedef char* String;
    typedef void (*Callback)(int);
    typedef struct {
        int x;
        int y;
    } Point;

---
# Configuration
config.json: |
  {
    "project_name": "test_parser_typedefs",
    "source_folders": ["."],
    "output_dir": "./output",
    "recursive_search": true
  }

---
# Assertions
assertions:
  execution:
    exit_code: 0
    output_files: ["model.json", "model_transformed.json", "typedefs.puml"]
  
  model:
    files:
      typedefs.c:
        aliases: ["Integer", "String", "Callback"]
        structs:
          Point:
            fields: ["x", "y"]
    element_counts:
      structs: 1
      enums: 0
      functions: 0
      globals: 0
      includes: 0
  
  puml:
    # Global PlantUML assertions (applied to all files)
    syntax_valid: true
    
    # Per-file PlantUML assertions
    files:
      typedefs.puml:
        contains_elements: ["Integer", "String", "Callback", "Point"]
        contains_lines: ["class \"Integer\" as TYPEDEF_INTEGER", "class \"String\" as TYPEDEF_STRING", "class \"Callback\" as TYPEDEF_CALLBACK", "class \"Point\" as TYPEDEF_POINT"]
        class_count: 5
        relationship_count: 4