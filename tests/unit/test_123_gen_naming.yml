test:
  name: "Generator Naming Conventions \u2013 Comprehensive"
  description: Validate file UML IDs and typedef/class UML IDs across simple, complex,
    and edge cases
  category: unit
  id: '123'
---
source_files:
  model.json: "{\n  \"project_name\": \"naming_conventions_project\",\n  \"source_folder\"\
    : \"/tmp\",\n  \"files\": {\n    \"main.c\": {\n      \"file_path\": \"/tmp/main.c\"\
    ,\n      \"includes\": [\"utils.h\"],\n      \"macros\": {},\n      \"enums\"\
    : {},\n      \"structs\": {},\n      \"unions\": {},\n      \"aliases\": {},\n\
    \      \"functions\": [{\"name\": \"main\", \"return_type\": \"int\", \"is_declaration\"\
    : false, \"parameters\": []}],\n      \"globals\": []\n    },\n    \"utils.h\"\
    : {\n      \"file_path\": \"/tmp/utils.h\",\n      \"includes\": [],\n      \"\
    macros\": {},\n      \"enums\": {},\n      \"structs\": {},\n      \"unions\"\
    : {},\n      \"aliases\": {},\n      \"functions\": [{\"name\": \"helper_function\"\
    , \"return_type\": \"void\", \"is_declaration\": true, \"parameters\": []}],\n\
    \      \"globals\": []\n    },\n    \"test.c\": {\n      \"file_path\": \"/tmp/test.c\"\
    ,\n      \"includes\": [],\n      \"macros\": {},\n      \"enums\": {\n      \
    \  \"Color\": {\"values\": [\"RED\", \"GREEN\", \"BLUE\"]},\n        \"LOG_LEVEL_T\"\
    : {\"values\": [\"DEBUG\", \"INFO\", \"WARNING\", \"ERROR\"]},\n        \"_private\"\
    : {\"values\": [\"OPTION1\", \"OPTION2\"]}\n      },\n      \"structs\": {\n \
    \       \"MyBuffer\": {\"fields\": [{\"name\": \"data\", \"type\": \"char*\"},\
    \ {\"name\": \"size\", \"type\": \"size_t\"}]},\n        \"complex_naming_test_t\"\
    : {\"fields\": [{\"name\": \"field1\", \"type\": \"int\"}, {\"name\": \"field2\"\
    , \"type\": \"char*\"}]},\n        \"a\": {\"fields\": [{\"name\": \"value\",\
    \ \"type\": \"int\"}]}\n      },\n      \"unions\": {\n        \"Value\": {\"\
    fields\": [{\"name\": \"integer\", \"type\": \"int\"}, {\"name\": \"decimal\"\
    , \"type\": \"float\"}]},\n        \"callback_function_t\": {\"fields\": [{\"\
    name\": \"ptr\", \"type\": \"void*\"}, {\"name\": \"value\", \"type\": \"int\"\
    }]},\n        \"123invalid\": {\"fields\": [{\"name\": \"number\", \"type\": \"\
    int\"}, {\"name\": \"letter\", \"type\": \"char\"}]}\n      },\n      \"aliases\"\
    : {\n        \"Integer\": {\"original_type\": \"int\"},\n        \"pointer_to_int\"\
    : {\"original_type\": \"int*\"},\n        \"UPPERCASE\": {\"original_type\": \"\
    int\"}\n      },\n      \"functions\": [],\n      \"globals\": []\n    }\n  },\n\
    \  \"include_relations\": [\n    {\"source_file\": \"main.c\", \"included_file\"\
    : \"utils.h\", \"depth\": 1}\n  ]\n}\n"
---
config.json: "{\n  \"project_name\": \"naming_conventions_project\",\n  \"source_folders\"\
  : [\"src\"],\n  \"output_dir\": \"output\",\n  \"recursive_search\": false\n}\n"
---
assertions:
  execution:
    exit_code: 0
  puml:
    syntax_valid: true
    contains_elements:
    - MAIN
    - HEADER_UTILS
    - TYPEDEF_MYBUFFER
    - TYPEDEF_COLOR
    - TYPEDEF_VALUE
    - TYPEDEF_INTEGER
    - TYPEDEF_COMPLEX_NAMING_TEST_T
    - TYPEDEF_LOG_LEVEL_T
    - TYPEDEF_CALLBACK_FUNCTION_T
    - TYPEDEF_POINTER_TO_INT
    - TYPEDEF_A
    - TYPEDEF__PRIVATE
    - TYPEDEF_123INVALID
    - TYPEDEF_UPPERCASE
    files:
      main.puml:
        contains:
        - MAIN
        - HEADER_UTILS
      test.puml:
        contains_lines:
        - class "MyBuffer" as TYPEDEF_MYBUFFER
        - class "Color" as TYPEDEF_COLOR
        - class "Value" as TYPEDEF_VALUE
        - class "Integer" as TYPEDEF_INTEGER
        - class "complex_naming_test_t" as TYPEDEF_COMPLEX_NAMING_TEST_T
        - class "LOG_LEVEL_T" as TYPEDEF_LOG_LEVEL_T
        - class "callback_function_t" as TYPEDEF_CALLBACK_FUNCTION_T
        - class "pointer_to_int" as TYPEDEF_POINTER_TO_INT
        - class "a" as TYPEDEF_A
        - class "_private" as TYPEDEF__PRIVATE
        - class "123invalid" as TYPEDEF_123INVALID
        - class "UPPERCASE" as TYPEDEF_UPPERCASE
