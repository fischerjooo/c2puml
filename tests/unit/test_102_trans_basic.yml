test:
  name: Basic Transformer Functionality
  description: Test basic transformer operations with parse, transform, generate workflow
  category: unit
  id: '102'
---
source_files:
  sample.c: "#include <stdio.h>\n\nstruct MyStruct {\n    int value;\n    char name[50];\n\
    };\n\nenum Status {\n    ACTIVE,\n    INACTIVE\n};\n\nvoid process_data() {\n\
    \    printf(\"Processing data\");\n}\n\nint global_counter;\n"
---
config.json: "{\n  \"project_name\": \"test_transformer_basic\",\n  \"source_folders\"\
  : [\".\"],\n  \"output_dir\": \"./output\",\n  \"recursive_search\": true,\n  \"\
  transformations\": {\n    \"rename\": {\n      \"functions\": {\n        \"process_data\"\
  : \"handle_data\"\n      }\n    }\n  }\n}\n"
---
assertions:
  execution:
    exit_code: 0
    output_files:
    - model.json
    - model_transformed.json
    - sample.puml
  model:
    files:
      sample.c:
        structs:
          MyStruct:
            fields:
            - value
            - name
        enums:
          Status:
            values:
            - ACTIVE
            - INACTIVE
        functions:
        - handle_data
        globals:
        - global_counter
        includes:
        - stdio.h
    element_counts:
      structs: 1
      enums: 1
      functions: 1
      globals: 1
      includes: 1
  puml:
    syntax_valid: true
    files:
      sample.puml:
        contains_elements:
        - MyStruct
        - Status
        - handle_data
        - global_counter
        contains_lines:
        - class "MyStruct" as TYPEDEF_MYSTRUCT
        - void handle_data()
        class_count: 3
        relationship_count: 2
