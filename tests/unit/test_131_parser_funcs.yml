test:
  name: Parser â€“ Functions and Parameters Comprehensive
  description: Consolidated function declarations/definitions/modifiers and simple/complex/empty parameter forms
  category: unit
  id: '131'
---
source_files:
  functions_all.c: |
    #include <stdarg.h>

    // Declarations
    int decl_add(int a, int b);
    void decl_process_point(point_t * p);
    real_t decl_average(const int * arr, size_t len);

    // Definitions
    int def_add(int a, int b) { return a + b; }
    inline void def_inline_process(point_t * p) { (void)p; }
    static int def_static_helper(const char * s) { return (int)(s ? *s : 0); }

    // Complex params
    int callback(void * data, void * user_data) { return 0; }
    void array_func(int arr[10], size_t size) { (void)arr; (void)size; }
    const char * const_func(const char * str) { return str; }

    // Empty params
    void init(void) {}
    void cleanup(void) {}

    // Variadic
    int log_message(int level, const char * fmt, ...) {
      va_list args; va_start(args, fmt); va_end(args); (void)level; return 0;
    }
---
config.json: |
  {
    "project_name": "parser_functions_and_parameters_comprehensive",
    "source_folders": ["."],
    "output_dir": "./output",
    "recursive_search": true
  }
---
assertions:
  execution:
    exit_code: 0
    output_files:
    - model.json
    - model_transformed.json
    - functions_all.puml
  model:
    files:
      functions_all.c:
        functions:
        - def_add
        - def_inline_process
        - def_static_helper
        - callback
        - array_func
        - const_func
        - init
        - cleanup
        - log_message
  puml:
    syntax_valid: true
    files:
      functions_all.puml:
        contains_elements:
        - def_add
        - def_inline_process
        - def_static_helper
        - callback
        - array_func
        - const_func
        - init
        - cleanup
        - log_message
        contains_lines:
        - def_add(
        - def_inline_process(
        - def_static_helper(
        - callback(
        - array_func(
        - const_func(
        - void init(
        - void cleanup(
        - log_message(
  files:
    output_dir_exists: ./output
    files_exist:
      - ./output/model.json
      - ./output/model_transformed.json
