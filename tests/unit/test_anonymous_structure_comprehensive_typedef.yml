test:
  name: "Anonymous Struct in Typedef"
  id: "0102"
  description: "Validate that anonymous structs within typedefs are correctly processed with proper naming and relationships"

---
source_files:
  anon_structs.c: |
    typedef struct {
        int count;
        struct {
            int item_id;
            char item_name[32];
            union {
                int int_data;
                float float_data;
                struct {
                    int x, y;
                } point_data;
            } item_value;
        } items[10];
    } array_of_anon_structs_t;
    
    void process_array(array_of_anon_structs_t* arr) {
        arr->count = 5;
        arr->items[0].item_id = 1;
    }
    
    array_of_anon_structs_t global_array;

---
config.json: |
  {
    "project_name": "anonymous_struct_in_typedef",
    "source_folders": ["."],
    "output_dir": "./output",
    "recursive_search": true
  }

---
cli_execution:
  steps:
    - parse_only

---
assertions:
  execution:
    should_succeed: true
    
  model:
    structs_exist: ["array_of_anon_structs_t", "__anonymous_struct__", "array_of_anon_structs_t_items", "array_of_anon_structs_t_items_point_data", "item_value_point_data"]
    unions_exist: ["item_value", "__anonymous_struct___item_value"]
    functions_exist: ["process_array"]
    globals_exist: ["global_array"]
    
    # Anonymous relationships are tracked in the model
    # The actual validation is done by checking that multiple structs/unions are created for anonymous structures
    
    # Validate main struct field parsing
    struct_fields:
      array_of_anon_structs_t:
        - name: "count"
          type: "int"
        - name: "items"
          type: "array_of_anon_structs_t_items"
    
    element_counts:
      structs: 5  # array_of_anon_structs_t + __anonymous_struct__ + array_of_anon_structs_t_items + 2 point_data structs
      unions: 2   # item_value + __anonymous_struct___item_value
      functions: 1
      globals: 1
      aliases: 0
      
  puml:
    contains_elements: ["array_of_anon_structs_t", "process_array", "global_array"]
    contains_lines:
      - "void process_array(array_of_anon_structs_t * arr)"
      - "+ int count"
      - "+ array_of_anon_structs_t_items items"
      - "+ int item_id"
      - "+ char[32] item_name"
      - "+ item_value item_value"
      - "+ int int_data"
      - "+ float float_data"
      - "+ int x"
      - "+ int y"
      - "array_of_anon_structs_t global_array"
    
    class_count: 8  # source + 5 structs + 2 unions
    relationship_count: 8  # 3 declares + 1 uses + 4 composition relationships