# Test metadata
test:
  name: "Parser Functions"
  description: "Test parsing function declarations with different parameter types"
  category: "unit"
  id: "0005"

---
# Source files
source_files:
  functions.c: |
    int calculate(int a, int b) {
        return a + b;
    }

    void print_message(char* message) {
        printf("%s\\n", message);
    }

    float get_average(float* values, int count) {
        return 0.0f;
    }

---
# Configuration
config.json: |
  {
    "project_name": "test_parser_functions",
    "source_folders": ["."],
    "output_dir": "./output",
    "recursive_search": true
  }

---
# Assertions
assertions:
  execution:
    exit_code: 0
    output_files: ["model.json", "model_transformed.json", "functions.puml"]
  
  model:
    files:
      functions.c:
        functions: ["calculate", "print_message", "get_average"]
    element_counts:
      structs: 0
      enums: 0
      functions: 3
      globals: 0
      includes: 0
  
  puml:
    # Global PlantUML assertions (applied to all files)
    syntax_valid: true
    
    # Per-file PlantUML assertions
    files:
      functions.puml:
        contains_elements: ["calculate", "print_message", "get_average"]
        contains_lines: ["int calculate(int a, int b)", "void print_message(char * message)", "float get_average(float * values, int count)"]
        class_count: 1
        relationship_count: 0