# Test metadata
test:
  name: "Function Parameters Complex"
  description: "Test functions with complex parameter types"
  category: "unit"
  id: "0015"

---
# Source files
source_files:
  function_complex.c: |
    int callback(void * data, void * user_data) {
        return 0;
    }
    
    void array_func(int[10] arr, size_t size) {
        // Process array
    }
    
    const char * const_func(const char * str) {
        return str;
    }

---
# Configuration
config.json: |
  {
    "project_name": "test_function_parameters_complex",
    "source_folders": ["."],
    "output_dir": "./output",
    "recursive_search": true
  }

---
# Assertions
assertions:
  execution:
    exit_code: 0
    output_files: ["model.json", "model_transformed.json", "function_complex.puml"]
  
  model:
    files:
      function_complex.c:
        functions: ["callback", "array_func", "const_func"]
    element_counts:
      structs: 0
      enums: 0
      functions: 3
      globals: 0
      includes: 0
  
  puml:
    # Global PlantUML assertions (applied to all files)
    syntax_valid: true
    
    # Per-file PlantUML assertions
    files:
      function_complex.puml:
        contains_elements: ["callback", "array_func", "const_func"]
        contains_lines: ["int callback(void * data, void * user_data)", "void array_func(int[10] arr, size_t size)", "const char * const_func(const char * str)"]
        class_count: 1
        relationship_count: 0