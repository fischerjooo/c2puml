# Test metadata
test:
  name: "Generator Edge Case Names"
  description: "Test edge cases in naming conventions including single character, leading underscore, numeric, and uppercase names"
  category: "unit"
  id: "0028"

---
# Source files
source_files:
  model.json: |
    {
      "project_name": "test_edge_case_naming",
      "source_folder": "/tmp",
      "files": {
        "test.c": {
          "file_path": "/tmp/test.c",
          "aliases": {
            "UPPERCASE": {
              "original_type": "int"
            }
          },
          "anonymous_relationships": {},
          "enums": {
            "_private": {
              "values": ["OPTION1", "OPTION2"]
            }
          },
          "functions": [],
          "globals": [],
          "include_relations": [],
          "includes": [],
          "macros": {},
          "structs": {
            "a": {
              "fields": [
                {"name": "value", "type": "int"}
              ]
            }
          },
          "unions": {
            "123invalid": {
              "fields": [
                {"name": "number", "type": "int"},
                {"name": "letter", "type": "char"}
              ]
            }
          }
        }
      },
      "include_relations": []
    }

---
# Configuration
config.json: |
  {
    "project_name": "test_edge_case_naming",
    "source_folders": ["src"],
    "output_dir": "output",
    "recursive_search": false
  }

---
# Assertions
assertions:
  execution:
    exit_code: 0
    
  puml:
    syntax_valid: true
    
    # Global PlantUML assertions - validate edge case typedef naming conventions
    contains_elements: ["TYPEDEF_A", "TYPEDEF__PRIVATE", "TYPEDEF_123INVALID", "TYPEDEF_UPPERCASE"]
    
    # Per-file PlantUML assertions
    files:
      test.puml:
        # Validate specific edge case typedef class declarations with correct naming
        contains_lines:
          - "class \"a\" as TYPEDEF_A"
          - "class \"_private\" as TYPEDEF__PRIVATE"
          - "class \"123invalid\" as TYPEDEF_123INVALID"
          - "class \"UPPERCASE\" as TYPEDEF_UPPERCASE"
        
        # Validate typedef stereotypes
        contains_elements: ["<<struct>>", "<<enumeration>>", "<<union>>", "<<typedef>>"]
        
        # Ensure correct class count (1 source + 4 edge case typedefs)
        class_count: 5