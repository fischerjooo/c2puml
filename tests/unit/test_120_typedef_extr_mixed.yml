test:
  name: Typedef Extraction - Comprehensive Mixed
  description: Test extraction of all typedef types in a comprehensive scenario
  category: unit
  id: '120'
---
source_files:
  comprehensive_typedefs.c: |
    // Comprehensive typedef extraction test

    // Simple typedefs
    typedef uint32_t MyLen;
    typedef int32_t MyInt;
    typedef char * MyString;

    // Struct typedefs
    typedef struct MyBuffer_tag {
        MyLen length;
        MyString data;
    } MyBuffer;

    typedef struct MyComplexStruct_tag {
        MyLen id;
        MyString name;
        MyCallback callback;
        log_level_t log_level;
    } MyComplex;

    // Function pointer typedefs
    typedef int (*MyCallback)(MyBuffer * buffer);
    typedef void (*log_callback_t)(log_level_t level, const char * message);

    // Pointer typedefs
    typedef MyComplex * MyComplexPtr;
    typedef MyComplexPtr MyComplexArray[10];

    // Enum typedefs
    typedef enum Color_tag {
        COLOR_RED,
        COLOR_GREEN,
        COLOR_BLUE
    } Color_t;

    // Union typedefs
    typedef union Number_tag {
        int i;
        float f;
    } Number_t;
---
config.json: |
  {
    "project_name": "test_typedef_extraction_comprehensive",
    "source_folders": ["."],
    "output_dir": "./output",
    "recursive_search": true
  }
---
assertions:
  execution:
    exit_code: 0
    output_files:
    - model.json
    - model_transformed.json
    - comprehensive_typedefs.puml
  model:
    files:
      comprehensive_typedefs.c:
        aliases:
        - MyLen
        - MyInt
        - MyString
        - MyCallback
        - log_callback_t
        - MyComplexPtr
        - MyComplexArray
        structs:
          MyBuffer:
            fields:
            - length
            - data
          MyComplex:
            fields:
            - id
            - name
            - callback
            - log_level
        enums:
          Color_t:
            values:
            - COLOR_RED
            - COLOR_GREEN
            - COLOR_BLUE
        unions:
          Number_t:
            fields:
            - i
            - f
    element_counts:
      structs: 2
      enums: 1
      functions: 0
      globals: 0
      includes: 0
  puml:
    syntax_valid: true
    files:
      comprehensive_typedefs.puml:
        contains_elements:
        - MyLen
        - MyInt
        - MyString
        - MyBuffer
        - MyComplex
        - MyCallback
        - log_callback_t
        - MyComplexPtr
        - MyComplexArray
        - Color_t
        - Number_t
        contains_lines:
        - class "MyLen" as TYPEDEF_MYLEN
        - class "MyBuffer" as TYPEDEF_MYBUFFER
        - class "Color_t" as TYPEDEF_COLOR_T
        - class "Number_t" as TYPEDEF_NUMBER_T
        class_count: 12
        relationship_count: 19
  files:
    output_dir_exists: ./output
    files_exist:
      - ./output/model.json
      - ./output/model_transformed.json
