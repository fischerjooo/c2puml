test:
  name: "Mixed Path Styles Handling"
  id: "0110"
  description: "Test mixed path styles handling to ensure consistency between forward and backward slashes"

---
source_files:
  common/base.h: |
    #ifndef BASE_H
    #define BASE_H
    
    typedef struct {
        int base_id;
        char base_name[64];
    } base_t;
    
    void base_init(base_t* b);
    
    #endif
  
  modules/graphics.h: |
    #ifndef GRAPHICS_H
    #define GRAPHICS_H
    
    #include "../common/base.h"
    
    typedef struct {
        base_t base;
        int width;
        int height;
    } graphics_t;
    
    void graphics_render(graphics_t* g);
    
    #endif
  
  app.c: |
    #include "common/base.h"
    #include "modules/graphics.h"
    
    int main() {
        graphics_t gfx;
        base_init(&gfx.base);
        graphics_render(&gfx);
        return 0;
    }

---
config.json: |
  {
    "project_name": "mixed_path_styles_handling",
    "source_folders": ["."],
    "output_dir": "./output",
    "recursive_search": true
  }

---
cli_execution:
  steps:
    - run_full_pipeline

---
assertions:
  execution:
    should_succeed: true
    
  model:
    structs_exist: ["base_t", "graphics_t"]
    functions_exist: ["main", "base_init", "graphics_render"]
    
    # Validate complex include relationships with mixed path styles
    files:
      app.c:
        includes: ["common/base.h", "modules/graphics.h"]
        functions: ["main"]
      base.h:
        structs:
          base_t:
            fields: ["base_id", "base_name"]
        functions: ["base_init"]
      graphics.h:
        structs:
          graphics_t:
            fields: ["base", "width", "height"]
        functions: ["graphics_render"]
    
    element_counts:
      structs: 2
      functions: 3
      aliases: 0
      
  puml:
    contains_elements: ["base_t", "graphics_t", "main", "base_init", "graphics_render"]
    contains_lines:
      - "int main()"
      - "+ void base_init(base_t * b)"
      - "+ void graphics_render(graphics_t * g)"
      - "+ int base_id"
      - "+ char[64] base_name"
      - "+ base_t base"
      - "+ int width"
      - "+ int height"
    
    class_count: 5  # source + 2 headers + 2 structs
    relationship_count: 5  # 2 include + 2 declaration + 1 uses relationship