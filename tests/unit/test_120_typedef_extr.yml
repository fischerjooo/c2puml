test:
  name: Typedef Extraction - Comprehensive
  description: Comprehensive extraction of aliases, function pointers, structs, enums,
    unions, and edge cases
  category: unit
  id: '120'
---
source_files:
  typedefs_all.c: "// Simple typedefs\ntypedef uint32_t MyLen;\ntypedef int32_t MyInt;\n\
    typedef char * MyString;\ntypedef unsigned long long ULongLong;\ntypedef const\
    \ char * ConstString;\ntypedef volatile int VolatileInt;\n\n// Function pointer\
    \ typedefs\ntypedef int (*MyCallback)(struct MyBuffer_tag * buffer);\ntypedef\
    \ void (*log_callback_t)(enum log_level_tag level, const char * message);\ntypedef\
    \ int (*complex_callback)(int a, int b, char * str);\ntypedef void (*simple_func_ptr)(void);\n\
    typedef char * (*string_processor)(const char * input, int len);\ntypedef int\
    \ (*calculator)(int x, int y);\n\n// Struct typedefs\ntypedef struct MyBuffer_tag\
    \ {\n    MyLen length;\n    MyString data;\n} MyBuffer;\n\ntypedef struct MyComplexStruct_tag\
    \ {\n    MyLen id;\n    MyString name;\n    MyCallback callback;\n    enum log_level_tag\
    \ log_level;\n} MyComplex;\n\ntypedef struct point_tag {\n    int x;\n    int\
    \ y;\n} point_t;\n\ntypedef struct Person {\n    char name[50];\n    int age;\n\
    \    char *address;\n} Person_t;\n\n// Enum typedefs\ntypedef enum Color_tag {\n\
    \    COLOR_RED,\n    COLOR_GREEN,\n    COLOR_BLUE\n} Color_t;\n\ntypedef enum\
    \ log_level_tag {\n    LOG_DEBUG,\n    LOG_INFO,\n    LOG_WARN,\n    LOG_ERROR\n\
    } log_level_t;\n\ntypedef enum Status_tag {\n    STATUS_OK,\n    STATUS_ERROR,\n\
    \    STATUS_PENDING\n} Status_t;\n\n// Union typedefs\ntypedef union Number_tag\
    \ {\n    int i;\n    float f;\n    double d;\n} Number_t;\n\ntypedef union NamedUnion_tag\
    \ {\n    char c;\n    int i;\n    short s;\n} NamedUnion_t;\n\ntypedef union Value\
    \ {\n    int integer_value;\n    float float_value;\n    char string_value[32];\n\
    } Value_t;\n\n// Pointers and arrays of typedefs\ntypedef MyComplex * MyComplexPtr;\n\
    typedef MyComplexPtr MyComplexArray[10];\n"
---
config.json: "{\n  \"project_name\": \"test_typedef_extraction_comprehensive\",\n\
  \  \"source_folders\": [\".\"],\n  \"output_dir\": \"./output\",\n  \"recursive_search\"\
  : true\n}\n"
---
assertions:
  execution:
    exit_code: 0
    output_files:
    - model.json
    - model_transformed.json
    - typedefs_all.puml
  model:
    files:
      typedefs_all.c:
        aliases:
        - MyLen
        - MyInt
        - MyString
        - ULongLong
        - ConstString
        - VolatileInt
        - MyCallback
        - log_callback_t
        - complex_callback
        - simple_func_ptr
        - string_processor
        - calculator
        - MyComplexPtr
        - MyComplexArray
        structs:
          MyBuffer:
            fields:
            - length
            - data
          MyComplex:
            fields:
            - id
            - name
            - callback
            - log_level
          point_t:
            fields:
            - x
            - y
          Person_t:
            fields:
            - name
            - age
            - address
        enums:
          Color_t:
            values:
            - COLOR_RED
            - COLOR_GREEN
            - COLOR_BLUE
          log_level_t:
            values:
            - LOG_DEBUG
            - LOG_INFO
            - LOG_WARN
            - LOG_ERROR
          Status_t:
            values:
            - STATUS_OK
            - STATUS_ERROR
            - STATUS_PENDING
        unions:
          Number_t:
            fields:
            - i
            - f
            - d
          NamedUnion_t:
            fields:
            - c
            - i
            - s
          Value_t:
            fields:
            - integer_value
            - float_value
            - string_value
  puml:
    syntax_valid: true
    files:
      typedefs_all.puml:
        contains_elements:
        - MyBuffer
        - MyComplex
        - point_t
        - Person_t
        - Color_t
        - log_level_t
        - Status_t
        - Number_t
        - NamedUnion_t
        - Value_t
        - MyLen
        - MyInt
        - MyString
        - ULongLong
        - ConstString
        - VolatileInt
        - MyCallback
        - log_callback_t
        - complex_callback
        - simple_func_ptr
        - string_processor
        - calculator
        - MyComplexPtr
        - MyComplexArray
        contains_lines:
        - class "MyBuffer" as TYPEDEF_MYBUFFER
        - class "MyComplex" as TYPEDEF_MYCOMPLEX
        - class "Color_t" as TYPEDEF_COLOR_T
        - class "Number_t" as TYPEDEF_NUMBER_T
        - class "MyLen" as TYPEDEF_MYLEN
