# Test metadata
test:
  name: "Parser Simple C File"
  description: "Test parsing a simple C file with struct, enum, function, and global variable"
  category: "unit"
  id: "0002"

---
# Source files
source_files:
  simple.c: |
    #include <stdio.h>

    struct Person {
        char name[50];
        int age;
    };

    enum Status {
        OK,
        ERROR
    };

    int main() {
        return 0;
    }

    int global_var;

---
# Configuration
config.json: |
  {
    "project_name": "test_parser_simple",
    "source_folders": ["."],
    "output_dir": "./output",
    "recursive_search": true
  }

---
# Assertions
assertions:
  execution:
    exit_code: 0
    output_files: ["model.json", "model_transformed.json", "simple.puml"]
  
  model:
    files:
      simple.c:
        structs:
          Person:
            fields: ["name", "age"]
        enums:
          Status:
            values: ["OK", "ERROR"]
        functions: ["main"]
        globals: ["global_var"]
        includes: ["stdio.h"]
    element_counts:
      structs: 1
      enums: 1
      functions: 1
      globals: 1
      includes: 1
  
  puml:
    # Global PlantUML assertions (applied to all files)
    syntax_valid: true
    
    # Per-file PlantUML assertions
    files:
      simple.puml:
        contains_elements: ["Person", "Status", "main", "global_var"]
        contains_lines: ["class \"Person\" as TYPEDEF_PERSON", "class \"Status\" as TYPEDEF_STATUS", "int main()", "int global_var"]
        class_count: 3
        relationship_count: 2