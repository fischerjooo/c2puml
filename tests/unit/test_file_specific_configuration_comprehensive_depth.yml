test:
  name: "File Specific Include Depth"
  id: "0113"
  description: "Test that file-specific include depth configuration works correctly in CLI"

---
source_files:
  main.c: |
    #include "utils.h"
    
    int main() {
        util_function();
        return 0;
    }
  
  utils.h: |
    #ifndef UTILS_H
    #define UTILS_H
    
    void util_function(void);
    
    #endif

---
config.json: |
  {
    "project_name": "file_specific_include_depth",
    "source_folders": ["."],
    "output_dir": "./output",
    "recursive_search": true,
    "include_depth": 10,
    "file_specific": {
      "main.c": {
        "include_depth": 3
      }
    }
  }

---
cli_execution:
  steps:
    - run_full_pipeline

---
assertions:
  execution:
    should_succeed: true
    
  model:
    functions_exist: ["main", "util_function"]
    
    # Validate that the file-specific include depth configuration is processed correctly
    files:
      main.c:
        functions: ["main"]
      utils.h:
        functions: ["util_function"]
    
    element_counts:
      functions: 2
      aliases: 0
      
  puml:
    contains_elements: ["main", "util_function"]
    contains_lines:
      - "- int main()"
      - "+ void util_function()"
    
    class_count: 2  # source + header
    relationship_count: 1  # include relationship