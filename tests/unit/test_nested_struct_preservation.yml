# Test metadata
test:
  name: "Nested Struct Preservation"
  description: "Test that nested structs maintain their structure"
  category: "unit"
  id: "0024"

---
# Source files
source_files:
  nested_struct.c: |
    typedef struct {
        int outer_id;
        char outer_name[32];
        struct {
            int inner_x;
            int inner_y;
            char inner_label[16];
        } inner_struct;
        int outer_flags;
    } struct_with_struct_t;

---
# Configuration
config.json: |
  {
    "project_name": "test_nested_struct_preservation",
    "source_folders": ["."],
    "output_dir": "./output",
    "recursive_search": true
  }

---
# Assertions
assertions:
  execution:
    exit_code: 0
    output_files: ["model.json", "model_transformed.json", "nested_struct.puml"]
  
  model:
    files:
      nested_struct.c:
        structs:
          struct_with_struct_t:
            fields: ["outer_id", "outer_name", "inner_struct", "outer_flags"]
    element_counts:
      structs: 3
      enums: 0
      functions: 0
      globals: 0
      includes: 0
  
  puml:
    # Global PlantUML assertions (applied to all files)
    syntax_valid: true
    
    # Per-file PlantUML assertions
    files:
      nested_struct.puml:
        contains_elements: ["struct_with_struct_t"]
        contains_lines: ["class \"struct_with_struct_t\" as TYPEDEF_STRUCT_WITH_STRUCT_T"]
        class_count: 4
        relationship_count: 3