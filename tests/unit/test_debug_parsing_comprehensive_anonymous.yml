# Test metadata
test:
  name: "Debug Anonymous Structure Parsing"
  description: "Test parsing anonymous structures in typedefs for debugging purposes"
  category: "unit"
  id: "0093"

---
# Source files
source_files:
  anonymous_struct.c: |
    // Anonymous struct in typedef
    typedef struct {
        int id;
        struct {
            float x, y;
        } position;
        struct {
            char r, g, b;
        } color;
    } point_t;
    
    // Anonymous union in typedef
    typedef struct {
        int type;
        union {
            int int_value;
            float float_value;
            char string_value[16];
        } data;
    } variant_t;
    
    // Global variable using the types
    point_t global_point;
    variant_t global_variant;

---
# Configuration
config.json: |
  {
    "project_name": "debug_anonymous_structure_parsing",
    "source_folders": ["."],
    "output_dir": "./output",
    "recursive_search": true
  }

---
# Assertions
assertions:
  execution:
    exit_code: 0
    output_files: ["model.json", "model_transformed.json", "anonymous_struct.puml"]
  
  model:
    validate_structure: true
    project_name: "debug_anonymous_structure_parsing"
    expected_files: ["anonymous_struct.c"]
    
    # Validate anonymous structure processing
    structs_exist: ["point_t", "variant_t"]
    unions_exist: ["variant_t_data", "data"]  # Anonymous union becomes named
    globals_exist: ["global_point", "global_variant"]
    
    # Validate struct field details
    struct_details:
      point_t:
        fields: ["id", "position", "color"]
      variant_t:
        fields: ["type", "data"]
    
    # Validate union field details
    union_details:
      variant_t_data:
        fields: ["int_value", "float_value", "string_value"]
    
    # Validate element counts
    element_counts:
      structs: 5  # point_t, variant_t + 2 anonymous structs become named + 1 parsing artifact
      unions: 2   # anonymous union becomes named + 1 duplicate
      globals: 2
      aliases: 0  # typedef struct creates struct, not alias
  
  puml:
    syntax_valid: true
    file_count: 1
    
    files:
      anonymous_struct.puml:
        contains_elements: ["point_t", "variant_t", "global_point", "global_variant", "data"]
        contains_lines: ["point_t global_point", "variant_t global_variant"]
        class_count: 8  # source + 7 typedef/struct/union classes
        relationship_count: 8  # 4 declares + 1 uses + 3 composition