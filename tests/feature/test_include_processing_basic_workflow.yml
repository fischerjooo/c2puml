# Test metadata
test:
  name: "Basic Include Processing Workflow"
  description: "Test basic include processing workflow from parsing to generation"
  category: "feature"
  id: "1001"

---
# Source files
source_files:
  main.c: |
    #include <stdio.h>
    #include "utils.h"

    int main() {
        Point p = {0, 0};
        return 0;
    }
  utils.h: |
    #ifndef UTILS_H
    #define UTILS_H

    typedef struct {
        int x;
        int y;
    } Point;

    #endif

---
# Configuration
config.json: |
  {
    "project_name": "test_include_processing_basic",
    "source_folders": ["."],
    "output_dir": "./output",
    "recursive_search": true,
    "include_depth": 2
  }

---
# Assertions
assertions:
  execution:
    exit_code: 0
    output_files: ["model.json", "model_transformed.json", "main.puml"]
    max_execution_time: 30.0
  
  model:
    validate_structure: true
    files:
      main.c:
        functions: ["main"]
        includes: ["stdio.h", "utils.h"]
      utils.h:
        structs:
          Point:
            fields: ["x", "y"]
    element_counts:
      functions: 1
      structs: 1
      includes: 2
  
  puml:
    syntax_valid: true
    files:
      main.puml:
        contains_elements: ["Point", "main", "utils"]
        contains_lines: ["class \"Point\" as TYPEDEF_POINT", "- int main()"]
        class_count: 3
        relationship_count: 2