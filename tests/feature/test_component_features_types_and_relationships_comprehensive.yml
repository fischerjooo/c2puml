# Test metadata
test:
  name: "Component Features â€“ Types and Relationships (Comprehensive)"
  description: "Consolidates typedefs, unions, function pointers, cross-file deps, recursive includes, and complex relationships"
  category: "feature"
  id: "F1200"

---
# Source files (representative project)
source_files:
  main.c: |
    #include "api.h"
    #include "util.h"
    int main() { return add(1, 2) + (int)call_cb(cb_default); }

  api.h: |
    #ifndef API_H
    #define API_H
    #include "types.h"
    typedef int (*callback_t)(int);
    int add(int a, int b);
    callback_t cb_default;
    #endif

  types.h: |
    #ifndef TYPES_H
    #define TYPES_H
    typedef struct Point { int x; int y; } Point;
    typedef union Value { int i; float f; } Value;
    #endif

  util.h: |
    #ifndef UTIL_H
    #define UTIL_H
    #include "api.h"
    static inline int call_cb(callback_t cb) { return cb(42); }
    #endif

---
# Configuration
config.json: |
  {
    "project_name": "component_features",
    "source_folders": ["."],
    "output_dir": "./output",
    "recursive_search": true
  }

---
# CLI execution
cli_execution:
  steps:
    - run_full_pipeline

---
# Assertions
assertions:
  execution:
    should_succeed: true
  puml:
    syntax_valid: true