test:
  name: Transformer Features - Renaming (CLI)
  description: Validate renaming of structs, enums, and functions via transform-only
  category: feature
  id: '206'
  steps: ["transform"]
---
source_files:
  model.json: |
    {
      "project_name": "transformer_test",
      "source_folder": ".",
      "files": {
        "test.c": {
          "file_path": "test.c",
          "name": "test.c",
          "structs": {
            "OldStruct": {
              "name": "OldStruct",
              "fields": [
                {"name": "x", "type": "int"}
              ]
            }
          },
          "enums": {
            "OldEnum": {
              "name": "OldEnum",
              "values": [
                {"name": "OLD_VALUE1"},
                {"name": "OLD_VALUE2"}
              ]
            }
          },
          "unions": {},
          "functions": [
            {"name": "old_function", "return_type": "int", "parameters": []}
          ],
          "globals": [],
          "includes": [],
          "macros": [],
          "aliases": {},
          "include_relations": [],
          "anonymous_relationships": {}
        }
      }
    }
---
config.json: |
  {
    "project_name": "transformer_test",
    "source_folders": ["."],
    "recursive_search": true,
    "output_dir": "./output",
    "transformations": {
      "rename": {
        "structs": {"OldStruct": "NewStruct"},
        "enums": {"OldEnum": "NewEnum"},
        "functions": {"old_function": "new_function"}
      }
    }
  }
---
assertions:
  execution:
    exit_code: 0
    stdout_contains: Transformed model saved
  model:
    validate_structure: true
    expected_files:
    - test.c
    structs_exist:
    - NewStruct
    enums_exist:
    - NewEnum
    functions_exist:
    - new_function
  files:
    files_exist:
    - ./output/model_transformed.json
    json_files_valid:
    - ./output/model_transformed.json
