# Test metadata
test:
  name: "Nested Directory Structure"
  description: "Test nested directory structure with relative includes"
  category: "feature"
  id: "1005"

---
# Source files
source_files:
  app/main.c: |
    #include "../lib/base.h"

    int main() {
        Base base = create_base();
        return 0;
    }
  lib/base.h: |
    #ifndef BASE_H
    #define BASE_H

    typedef struct {
        int id;
        char name[32];
    } Base;

    Base create_base();

    #endif

---
# Configuration
config.json: |
  {
    "project_name": "test_nested_directory_structure",
    "source_folders": ["."],
    "output_dir": "./output",
    "recursive_search": true,
    "include_depth": 2
  }

---
# Assertions
assertions:
  execution:
    exit_code: 0
    max_execution_time: 30.0
  
  model:
    validate_structure: true
    files:
      app/main.c:
        functions: ["main"]
        includes: ["../lib/base.h"]
      lib/base.h:
        structs:
          Base:
            fields: ["id", "name"]
        functions: ["create_base"]
    element_counts:
      functions: 2
      structs: 1
  
  puml:
    syntax_valid: true
    contains_elements: ["Base", "main", "create_base"]
    class_count: 3
    relationship_count: 2