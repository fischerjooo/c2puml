# Test metadata
test:
  name: "CLI Feature Transform Only Command"
  description: "Test transform-only command functionality through CLI interface"
  category: "feature"
  id: "1002"

---
# Source files - need to provide a pre-generated model.json for transform step
source_files:
  model.json: |
    {
      "project_name": "cli_test",
      "source_folder": ".",
      "files": {
        "test.c": {
          "file_path": "test.c",
          "name": "test.c",
          "structs": {
            "Point": {
              "name": "Point",
              "fields": [
                {"name": "x", "type": "int"}
              ]
            }
          },
          "enums": {},
          "unions": {},
          "functions": [
            {
              "name": "main",
              "return_type": "int",
              "parameters": []
            }
          ],
          "globals": [],
          "includes": [],
          "macros": [],
          "aliases": {},
          "include_relations": [],
          "anonymous_relationships": {}
        }
      }
    }

---
# Configuration
config.json: |
  {
    "project_name": "cli_test",
    "source_folders": ["."],
    "recursive_search": true,
    "output_dir": "./output"
  }

---
# Assertions
assertions:
  execution:
    exit_code: 0
    max_execution_time: 30.0
    stdout_contains: "Transformed model saved to"
  
  model:
    validate_structure: true
    project_name: "cli_test"
    expected_files: ["test.c"]
    
    functions_exist: ["main"]
    structs_exist: ["Point"]
    
    element_counts:
      functions: 1
      structs: 1
  
  files:
    files_exist:
      - "./output/model_transformed.json"
    json_files_valid:
      - "./output/model_transformed.json"