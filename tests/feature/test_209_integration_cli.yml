test:
  name: Integration CLI Complete Workflow
  description: End-to-end parse → transform → generate with simple project
  category: feature
  id: '209'
---
source_files:
  main.c: |
    #include <stdio.h>
    #include "config.h"

    #define MAX_SIZE 100

    typedef struct Person {
        char name[50];
        int age;
    } Person;

    enum Status {
        OK,
        ERROR
    };

    int global_var = 42;

    int main() {
        printf("Hello, World!\n");
        return 0;
    }

    void process_data(void* data) { }
  config.h: |
    #ifndef CONFIG_H
    #define CONFIG_H

    #define CONFIG_VERSION "1.0.0"

    typedef struct {
        int id;
        char name[100];
    } User;

    enum Color {
        RED,
        GREEN,
        BLUE
    };

    void init_config(void);

    #endif
---
config.json: |
  {
    "project_name": "integration_cli_project",
    "source_folders": ["."],
    "output_dir": "./output",
    "recursive_search": true,
    "include_depth": 2
  }
---
assertions:
  execution:
    exit_code: 0
    max_execution_time: 60.0
  model:
    validate_structure: true
    project_name: integration_cli_project
    expected_files:
    - main.c
    - config.h
    functions_exist:
    - main
    structs_exist:
    - Person
    - User
    enums_exist:
    - Status
    - Color
    macros_exist:
    - MAX_SIZE
    - CONFIG_VERSION
    includes_exist:
    - stdio.h
    - config.h
    element_counts:
      files: 2
  puml:
    syntax_valid: true
    files:
      main.puml:
        contains_elements:
          - main
          - Person
        contains_lines:
          - "- int main()"
          - MAIN --> HEADER_CONFIG
      config.puml:
        contains_elements:
          - User
          - Color
        contains_lines:
          - class "User" as TYPEDEF_USER
  files:
    output_dir_exists: ./output
    files_exist:
      - ./output/model.json
      - ./output/model_transformed.json
